{
  "openapi": "3.0.0",
  "info": {
    "title": "OVHcloud API specification",
    "description": "Specification for OVHcloud API",
    "version": "1.0",
    "contact": {
      "name": "OVH",
      "email": "api@ml.ovh.net"
    }
  },
  "servers": [
    {
      "url": "https://eu.api.ovh.com/1.0"
    }
  ],
  "components": {
    "schemas": {
      "any": {
        "description": "Can be anything (text, int, bool, json, html, etc.)",
        "example": "This is a content of any type !"
      },
      "duration": {
        "type": "string",
        "description": "Duration (e.g., P1Y2M3DT4H6M9S)",
        "example": "P1Y2M3DT4H6M9S"
      },
      "email": {
        "type": "string",
        "description": "Email address (e.g., api@ml.ovh.net)",
        "format": "email",
        "example": "api@ml.ovh.net"
      },
      "iam.ResourceMetadata": {
        "type": "object",
        "description": "IAM resource metadata embedded in services models",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Resource display name",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the resource",
            "format": "uuid",
            "readOnly": true
          },
          "tags": {
            "type": "object",
            "description": "Resource tags. Tags that were internally computed are prefixed with ovh:",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            },
            "readOnly": true
          },
          "urn": {
            "type": "string",
            "description": "Unique resource name used in policies",
            "readOnly": true
          }
        }
      },
      "iam.resource.TagFilter": {
        "type": "object",
        "description": "Resource tag filter",
        "properties": {
          "operator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.resource.TagFilter.OperatorEnum"
              }
            ],
            "description": "Operator to use in order to filter on the value (defaults to 'EQ')",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "description": "Value to use in order to filter tags",
            "readOnly": true
          }
        }
      },
      "iam.resource.TagFilter.OperatorEnum": {
        "type": "string",
        "description": "Operator that can be used in order to filter resources tags",
        "enum": [
          "EQ",
          "EXISTS",
          "ILIKE",
          "LIKE",
          "NEQ",
          "NEXISTS"
        ]
      },
      "internationalPhoneNumber": {
        "type": "string",
        "description": "International phone number",
        "format": "phone-number"
      },
      "ip": {
        "type": "string",
        "description": "IP address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipBlock": {
        "type": "string",
        "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)",
        "format": "ip-block",
        "example": "192.0.2.0/24"
      },
      "ipInterface": {
        "type": "string",
        "description": "IP address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipv4": {
        "type": "string",
        "description": "IPv4 address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipv4Block": {
        "type": "string",
        "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)",
        "format": "ipv4-block",
        "example": "192.0.2.0/24"
      },
      "ipv6": {
        "type": "string",
        "description": "IPv6 address (e.g., 2001:41d0:1:1994::1)",
        "format": "ipv6",
        "example": "2001:41d0:1:1994::1"
      },
      "ipv6Block": {
        "type": "string",
        "description": "IPv6 CIDR notation (e.g., 2001:41d0::/128)",
        "format": "ipv6-block",
        "example": "2001:41d0::/128"
      },
      "macAddress": {
        "type": "string",
        "description": "MAC address (e.g., 2001:4860:4860::8844)",
        "format": "mac-address",
        "example": "2001:4860:4860::8888. 2001:4860:4860::8844"
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number",
        "format": "phone-number"
      },
      "service.RenewType": {
        "type": "object",
        "description": "Map a possible renew for a specific service",
        "properties": {
          "automatic": {
            "type": "boolean",
            "description": "The service is automatically renewed"
          },
          "deleteAtExpiration": {
            "type": "boolean",
            "description": "The service will be deleted at expiration"
          },
          "forced": {
            "type": "boolean",
            "description": "The service forced to be renewed"
          },
          "manualPayment": {
            "type": "boolean",
            "description": "The service needs to be manually renewed and paid",
            "nullable": true
          },
          "period": {
            "type": "integer",
            "description": "period of renew in month",
            "nullable": true
          }
        }
      },
      "service.RenewalTypeEnum": {
        "type": "string",
        "description": "Detailed renewal type of a service",
        "enum": [
          "automaticForcedProduct",
          "automaticV2012",
          "automaticV2014",
          "automaticV2016",
          "automaticV2024",
          "manual",
          "oneShot",
          "option"
        ]
      },
      "service.StateEnum": {
        "type": "string",
        "enum": [
          "autorenewInProgress",
          "expired",
          "inCreation",
          "ok",
          "pendingDebt",
          "unPaid"
        ]
      },
      "service.TerminationFutureUseEnum": {
        "type": "string",
        "description": "All future uses you can provide for a service termination",
        "enum": [
          "NOT_REPLACING_SERVICE",
          "OTHER",
          "SUBSCRIBE_AN_OTHER_SERVICE",
          "SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR",
          "SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR"
        ]
      },
      "service.TerminationReasonEnum": {
        "type": "string",
        "description": "All reasons you can provide for a service termination",
        "enum": [
          "FEATURES_DONT_SUIT_ME",
          "LACK_OF_PERFORMANCES",
          "MIGRATED_TO_ANOTHER_OVH_PRODUCT",
          "MIGRATED_TO_COMPETITOR",
          "NOT_ENOUGH_RECOGNITION",
          "NOT_NEEDED_ANYMORE",
          "NOT_RELIABLE",
          "NO_ANSWER",
          "OTHER",
          "PRODUCT_DIMENSION_DONT_SUIT_ME",
          "PRODUCT_TOOLS_DONT_SUIT_ME",
          "TOO_EXPENSIVE",
          "TOO_HARD_TO_USE",
          "UNSATIFIED_BY_CUSTOMER_SUPPORT"
        ]
      },
      "services.Service": {
        "type": "object",
        "description": "Details about a Service",
        "properties": {
          "canDeleteAtExpiration": {
            "type": "boolean",
            "description": "Indicates that the service can be set up to be deleted at expiration",
            "readOnly": true
          },
          "contactAdmin": {
            "type": "string",
            "readOnly": true
          },
          "contactBilling": {
            "type": "string",
            "readOnly": true
          },
          "contactTech": {
            "type": "string",
            "readOnly": true
          },
          "creation": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "domain": {
            "type": "string",
            "readOnly": true
          },
          "engagedUpTo": {
            "type": "string",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "expiration": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "possibleRenewPeriod": {
            "type": "array",
            "description": "All the possible renew period of your service in month",
            "nullable": true,
            "items": {
              "type": "integer"
            },
            "readOnly": true
          },
          "renew": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.RenewType"
              }
            ],
            "description": "Way of handling the renew",
            "nullable": true
          },
          "renewalType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.RenewalTypeEnum"
              }
            ],
            "readOnly": true
          },
          "serviceId": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.StateEnum"
              }
            ],
            "readOnly": true
          }
        }
      },
      "sslGateway.Domain": {
        "type": "object",
        "description": "Domain attached to an SSL Gateway",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Domain name attached to your SSL Gateway",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Id of your domain",
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sslGateway.DomainStateEnum"
              }
            ],
            "description": "Domain state",
            "readOnly": true
          }
        }
      },
      "sslGateway.DomainStateEnum": {
        "type": "string",
        "description": "Possible values for SSL Gateway domain state",
        "enum": [
          "creating",
          "deleted",
          "deleting",
          "http-only",
          "internal",
          "ok"
        ]
      },
      "sslGateway.EligibilityStatus": {
        "type": "object",
        "description": "A structure describing the eligibility status of a domain",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Customer domain name"
          },
          "ip6s": {
            "type": "array",
            "description": "Eligible IP(s) v6 for this domain",
            "items": {
              "$ref": "#/components/schemas/ipv6"
            }
          },
          "ips": {
            "type": "array",
            "description": "Eligible IP(s) for this domain",
            "items": {
              "$ref": "#/components/schemas/ipv4"
            }
          },
          "isHostedByOvh": {
            "type": "boolean",
            "description": "Whether this domain is hosted by Ovh or not"
          }
        }
      },
      "sslGateway.NatIps": {
        "type": "object",
        "description": "a list of {zone, nat Ip}",
        "properties": {
          "ip": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ipBlock"
            }
          },
          "zone": {
            "type": "string"
          }
        }
      },
      "sslGateway.OfferEnum": {
        "type": "string",
        "description": "List of SSL Gateway offers",
        "enum": [
          "advanced",
          "enterprise",
          "free",
          "internal"
        ]
      },
      "sslGateway.Server": {
        "type": "object",
        "description": "Server attached to an SSL Gateway",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address of the server attached to your SSL Gateway"
          },
          "id": {
            "type": "integer",
            "description": "Id of your server",
            "readOnly": true
          },
          "port": {
            "type": "integer",
            "description": "Port of your server attached to your SSL Gateway"
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sslGateway.ServerStateEnum"
              }
            ],
            "description": "Server state",
            "readOnly": true
          }
        }
      },
      "sslGateway.ServerStateEnum": {
        "type": "string",
        "description": "Possible values for SSL Gateway server state",
        "enum": [
          "creating",
          "deleted",
          "deleting",
          "internal",
          "ok",
          "updating"
        ]
      },
      "sslGateway.SslConfigurationEnum": {
        "type": "string",
        "description": "Possible values for ssl ciphers",
        "enum": [
          "intermediate",
          "internal",
          "modern"
        ]
      },
      "sslGateway.SslGateway": {
        "type": "object",
        "description": "Your SSL Gateway",
        "properties": {
          "allowedSource": {
            "type": "array",
            "description": "Restrict SSL Gateway access to these ip block. No restriction if null",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ipBlock"
            }
          },
          "displayName": {
            "type": "string",
            "description": "Custom name of your SSL Gateway",
            "nullable": true
          },
          "hsts": {
            "type": "boolean",
            "description": "Set to true to enable Strict-Transport-Security HTTP header"
          },
          "httpsRedirect": {
            "type": "boolean",
            "description": "Set to true to enable https redirect"
          },
          "ipv4": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "The IPv4 you need to put in the A field of your domain name",
            "readOnly": true
          },
          "ipv6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6"
              }
            ],
            "description": "The IPv6 you need to put in the AAAA field of your domain name",
            "nullable": true,
            "readOnly": true
          },
          "metricsToken": {
            "type": "string",
            "description": "The metrics token associated with your SSL Gateway",
            "nullable": true,
            "readOnly": true
          },
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sslGateway.OfferEnum"
              }
            ],
            "description": "Current offer for your SSL Gateway",
            "readOnly": true
          },
          "reverse": {
            "type": "string",
            "description": "Custom reverse for your SSL Gateway",
            "nullable": true
          },
          "serverHttps": {
            "type": "boolean",
            "description": "Set to true to contact backend servers over HTTPS"
          },
          "serviceName": {
            "type": "string",
            "description": "The internal name of your SSL Gateway",
            "readOnly": true
          },
          "sslConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sslGateway.SslConfigurationEnum"
              }
            ],
            "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null.",
            "nullable": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sslGateway.StateEnum"
              }
            ],
            "description": "Current state of your SSL Gateway",
            "readOnly": true
          },
          "zones": {
            "type": "array",
            "description": "Zones of your SSL Gateway",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        }
      },
      "sslGateway.SslGatewayWithIAM": {
        "type": "object",
        "description": "Your SSL Gateway",
        "properties": {
          "allowedSource": {
            "type": "array",
            "description": "Restrict SSL Gateway access to these ip block. No restriction if null",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ipBlock"
            }
          },
          "displayName": {
            "type": "string",
            "description": "Custom name of your SSL Gateway",
            "nullable": true
          },
          "hsts": {
            "type": "boolean",
            "description": "Set to true to enable Strict-Transport-Security HTTP header"
          },
          "httpsRedirect": {
            "type": "boolean",
            "description": "Set to true to enable https redirect"
          },
          "iam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.ResourceMetadata"
              }
            ],
            "description": "IAM resource metadata",
            "nullable": true,
            "readOnly": true
          },
          "ipv4": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "The IPv4 you need to put in the A field of your domain name",
            "readOnly": true
          },
          "ipv6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6"
              }
            ],
            "description": "The IPv6 you need to put in the AAAA field of your domain name",
            "nullable": true,
            "readOnly": true
          },
          "metricsToken": {
            "type": "string",
            "description": "The metrics token associated with your SSL Gateway",
            "nullable": true,
            "readOnly": true
          },
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sslGateway.OfferEnum"
              }
            ],
            "description": "Current offer for your SSL Gateway",
            "readOnly": true
          },
          "reverse": {
            "type": "string",
            "description": "Custom reverse for your SSL Gateway",
            "nullable": true
          },
          "serverHttps": {
            "type": "boolean",
            "description": "Set to true to contact backend servers over HTTPS"
          },
          "serviceName": {
            "type": "string",
            "description": "The internal name of your SSL Gateway",
            "readOnly": true
          },
          "sslConfiguration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sslGateway.SslConfigurationEnum"
              }
            ],
            "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null.",
            "nullable": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sslGateway.StateEnum"
              }
            ],
            "description": "Current state of your SSL Gateway",
            "readOnly": true
          },
          "zones": {
            "type": "array",
            "description": "Zones of your SSL Gateway",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        }
      },
      "sslGateway.StateEnum": {
        "type": "string",
        "description": "Possible values for SSL Gateway state",
        "enum": [
          "creating",
          "deleted",
          "deleting",
          "http-only",
          "internal",
          "ok",
          "suspended",
          "upgrading"
        ]
      },
      "sslGateway.Task": {
        "type": "object",
        "description": "SSL Gateway tasks",
        "properties": {
          "action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sslGateway.TaskActionEnum"
              }
            ],
            "description": "The action made",
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "Creation date of your task",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Id of the task",
            "readOnly": true
          },
          "progress": {
            "type": "integer",
            "description": "Task progress percentage",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sslGateway.TaskStatusEnum"
              }
            ],
            "description": "Current status of your task",
            "readOnly": true
          }
        }
      },
      "sslGateway.TaskActionEnum": {
        "type": "string",
        "description": "Possible task action",
        "enum": [
          "addDomain",
          "addPaidCertificate",
          "addServer",
          "createService",
          "deleteDomain",
          "deleteServer",
          "deleteService",
          "internalTask",
          "updateServer",
          "updateService",
          "upgrade"
        ]
      },
      "sslGateway.TaskStatusEnum": {
        "type": "string",
        "description": "Possible task status",
        "enum": [
          "blocked",
          "cancelled",
          "doing",
          "done",
          "error",
          "paused",
          "todo"
        ]
      },
      "time": {
        "type": "string",
        "description": "Time (e.g., 15:04:05)",
        "format": "time",
        "example": "15:04:05"
      }
    }
  },
  "paths": {
    "/sslGateway": {
      "get": {
        "summary": "List of your SSL Gateways",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "iamTags",
            "description": "Filter resources on IAM tags",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/iam.resource.TagFilter"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:get",
            "required": true
          }
        ],
        "x-expanded-response": "SslGatewaySslGatewayWithIAM"
      }
    },
    "/sslGateway/availableZones": {
      "get": {
        "summary": "List of zone available for an SSL Gateway",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ]
      }
    },
    "/sslGateway/eligibility": {
      "get": {
        "summary": "Check domain eligibility. Return list of eligible IP(s) for this domain.",
        "parameters": [
          {
            "in": "query",
            "name": "domain",
            "description": "domain to check eligibility for SSL Gateway offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sslGateway.EligibilityStatus"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ]
      }
    },
    "/sslGateway/{serviceName}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sslGateway.SslGatewayWithIAM"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sslGateway.SslGateway"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:put",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/changeContact": {
      "post": {
        "summary": "Launch a contact change procedure",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactAdmin": {
                    "type": "string",
                    "description": "The contact to set as admin contact"
                  },
                  "contactBilling": {
                    "type": "string",
                    "description": "The contact to set as billing contact"
                  },
                  "contactTech": {
                    "type": "string",
                    "description": "The contact to set as tech contact"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:changeContact",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/confirmTermination": {
      "post": {
        "summary": "Confirm service termination",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "commentary": {
                    "type": "string",
                    "description": "Commentary about your termination request"
                  },
                  "futureUse": {
                    "description": "What next after your termination request",
                    "$ref": "#/components/schemas/service.TerminationFutureUseEnum"
                  },
                  "reason": {
                    "description": "Reason of your termination request",
                    "$ref": "#/components/schemas/service.TerminationReasonEnum"
                  },
                  "token": {
                    "type": "string",
                    "description": "The termination token sent by email to the admin contact"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:confirmTermination",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/domain": {
      "get": {
        "summary": "Domains attached to your SSL Gateway",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:domain/get",
            "required": true
          }
        ],
        "x-expanded-response": "SslGatewayDomain"
      },
      "post": {
        "summary": "Attach a new domain to your SSL Gateway",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "Domain to attach"
                  }
                },
                "required": [
                  "domain"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sslGateway.Domain"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:domain/create",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/domain/{id}": {
      "delete": {
        "summary": "Detach a domain from your SSL Gateway",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of your domain",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:domain/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of your domain",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sslGateway.Domain"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:domain/get",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/natIp": {
      "get": {
        "summary": "Ip subnet used by OVH to nat requests to your SSL Gateway backends.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sslGateway.NatIps"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:natIp/get",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/renewCertificate": {
      "post": {
        "summary": "Renew your SSL certificates",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "Domain on which you want to renew certificate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:renewCertificate",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/server": {
      "get": {
        "summary": "Servers attached to your SSL Gateway",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:server/get",
            "required": true
          }
        ],
        "x-expanded-response": "SslGatewayServer"
      },
      "post": {
        "summary": "Add a new server to your SSL Gateway",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "description": "IPv4 address of your server",
                    "$ref": "#/components/schemas/ip"
                  },
                  "port": {
                    "type": "integer",
                    "description": "Port of your server"
                  }
                },
                "required": [
                  "address",
                  "port"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sslGateway.Server"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:server/create",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/server/{id}": {
      "delete": {
        "summary": "Remove a server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of your server",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:server/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of your server",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sslGateway.Server"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:server/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of your server",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sslGateway.Server"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:server/edit",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/serviceInfos": {
      "get": {
        "summary": "Get service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:serviceInfos/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/services.Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:serviceInfos/edit",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/task": {
      "get": {
        "summary": "Task for this SSL Gateway",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:task/get",
            "required": true
          }
        ],
        "x-expanded-response": "SslGatewayTask"
      }
    },
    "/sslGateway/{serviceName}/task/{id}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the task",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sslGateway.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:task/get",
            "required": true
          }
        ]
      }
    },
    "/sslGateway/{serviceName}/terminate": {
      "post": {
        "summary": "Ask for the termination of your service",
        "description": "Ask for the termination of your service. Admin contact of this service will receive a termination token by email in order to confirm its termination with /confirmTermination endpoint.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SSL Gateway",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sslGateway:apiovh:terminate",
            "required": true
          }
        ]
      }
    }
  }
}
