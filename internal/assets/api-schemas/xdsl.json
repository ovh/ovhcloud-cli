{
  "openapi": "3.0.0",
  "info": {
    "title": "OVHcloud API specification",
    "description": "Specification for OVHcloud API",
    "version": "1.0",
    "contact": {
      "name": "OVH",
      "email": "api@ml.ovh.net"
    }
  },
  "servers": [
    {
      "url": "https://eu.api.ovh.com/v1"
    }
  ],
  "components": {
    "schemas": {
      "any": {
        "description": "Can be anything (text, int, bool, json, html, etc.)",
        "example": "This is a content of any type !"
      },
      "complexType.UnitAndValue_double": {
        "type": "object",
        "description": "complexType.UnitAndValue_double",
        "properties": {
          "unit": {
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "readOnly": true
          }
        }
      },
      "complexType.UnitAndValue_long": {
        "type": "object",
        "description": "complexType.UnitAndValue_long",
        "properties": {
          "unit": {
            "type": "string",
            "readOnly": true
          },
          "value": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "complexType.UnitAndValues_xdsl.AccessLatency": {
        "type": "object",
        "description": "complexType.UnitAndValues_xdsl.AccessLatency",
        "properties": {
          "unit": {
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/xdsl.AccessLatency"
            },
            "readOnly": true
          }
        }
      },
      "complexType.UnitAndValues_xdsl.TimestampAndValue": {
        "type": "object",
        "description": "complexType.UnitAndValues_xdsl.TimestampAndValue",
        "properties": {
          "unit": {
            "type": "string",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/xdsl.TimestampAndValue"
            },
            "readOnly": true
          }
        }
      },
      "connectivity.eligibility.MeetingCapacities": {
        "type": "object",
        "description": "Represents meeting booking options",
        "properties": {
          "eRdv": {
            "type": "boolean",
            "description": "Whether or not it is possible to book a meeting online",
            "readOnly": true
          },
          "phoneCall": {
            "type": "boolean",
            "description": "Whether or not it is possible to be be called by phone to book a meeting",
            "readOnly": true
          }
        }
      },
      "connectivity.eligibility.MeetingSlot": {
        "type": "object",
        "description": "Represents a time slot for a meeting",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "readOnly": true
          },
          "slotId": {
            "type": "string",
            "description": "Represent a meeting id for a fiber collect operator",
            "nullable": true,
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time",
            "readOnly": true
          },
          "uiCode": {
            "type": "string",
            "description": "An opaque string that represents an intervention unit",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "connectivity.eligibility.Meetings": {
        "type": "object",
        "description": "List of available meeting time slots",
        "properties": {
          "canBookFakeMeeting": {
            "type": "boolean",
            "description": "Whether or not it is possible to book a fake meeting",
            "readOnly": true
          },
          "capacities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/connectivity.eligibility.MeetingCapacities"
              }
            ],
            "description": "Represents meeting booking options",
            "readOnly": true
          },
          "meetingSlots": {
            "type": "array",
            "description": "A time slot",
            "items": {
              "$ref": "#/components/schemas/connectivity.eligibility.MeetingSlot"
            },
            "readOnly": true
          }
        }
      },
      "coreTypes.CountryEnum": {
        "type": "string",
        "description": "ISO country codes",
        "enum": [
          "ac",
          "ad",
          "ae",
          "af",
          "ag",
          "ai",
          "al",
          "am",
          "an",
          "ao",
          "aq",
          "ar",
          "as",
          "at",
          "au",
          "aw",
          "ax",
          "az",
          "ba",
          "bb",
          "bd",
          "be",
          "bf",
          "bg",
          "bh",
          "bi",
          "bj",
          "bl",
          "bm",
          "bn",
          "bo",
          "bq",
          "br",
          "bs",
          "bt",
          "bv",
          "bw",
          "by",
          "bz",
          "ca",
          "cc",
          "cd",
          "cf",
          "cg",
          "ch",
          "ci",
          "ck",
          "cl",
          "cm",
          "cn",
          "co",
          "cr",
          "cs",
          "cu",
          "cv",
          "cw",
          "cx",
          "cy",
          "cz",
          "de",
          "dj",
          "dk",
          "dm",
          "do",
          "dz",
          "ec",
          "ee",
          "eg",
          "eh",
          "er",
          "es",
          "et",
          "fc",
          "fd",
          "fi",
          "fj",
          "fk",
          "fm",
          "fo",
          "fr",
          "fx",
          "ga",
          "gb",
          "gd",
          "ge",
          "gf",
          "gg",
          "gh",
          "gi",
          "gl",
          "gm",
          "gn",
          "gp",
          "gq",
          "gr",
          "gs",
          "gt",
          "gu",
          "gw",
          "gy",
          "hk",
          "hm",
          "hn",
          "hr",
          "ht",
          "hu",
          "id",
          "ie",
          "il",
          "im",
          "in",
          "io",
          "iq",
          "ir",
          "is",
          "it",
          "je",
          "jm",
          "jo",
          "jp",
          "ke",
          "kg",
          "kh",
          "ki",
          "km",
          "kn",
          "kp",
          "kr",
          "kw",
          "ky",
          "kz",
          "la",
          "lb",
          "lc",
          "li",
          "lk",
          "lr",
          "ls",
          "lt",
          "lu",
          "lv",
          "ly",
          "ma",
          "mc",
          "md",
          "me",
          "mf",
          "mg",
          "mh",
          "mk",
          "ml",
          "mm",
          "mn",
          "mo",
          "mp",
          "mq",
          "mr",
          "ms",
          "mt",
          "mu",
          "mv",
          "mw",
          "mx",
          "my",
          "mz",
          "na",
          "nc",
          "ne",
          "nf",
          "ng",
          "ni",
          "nl",
          "no",
          "np",
          "nr",
          "nu",
          "nz",
          "om",
          "pa",
          "pe",
          "pf",
          "pg",
          "ph",
          "pk",
          "pl",
          "pm",
          "pn",
          "pr",
          "ps",
          "pt",
          "pw",
          "py",
          "qa",
          "qc",
          "re",
          "ro",
          "rs",
          "ru",
          "rw",
          "sa",
          "sb",
          "sc",
          "sd",
          "se",
          "sg",
          "sh",
          "si",
          "sj",
          "sk",
          "sl",
          "sm",
          "sn",
          "so",
          "sr",
          "ss",
          "st",
          "sv",
          "sx",
          "sy",
          "sz",
          "tc",
          "td",
          "tf",
          "tg",
          "th",
          "tj",
          "tk",
          "tl",
          "tm",
          "tn",
          "to",
          "tp",
          "tr",
          "tt",
          "tv",
          "tw",
          "tz",
          "ua",
          "ug",
          "uk",
          "um",
          "us",
          "uy",
          "uz",
          "va",
          "vc",
          "ve",
          "vg",
          "vi",
          "vn",
          "vu",
          "we",
          "wf",
          "ws",
          "ye",
          "yt",
          "yu",
          "za",
          "zm",
          "zw"
        ]
      },
      "coreTypes.IpVersionEnum": {
        "type": "string",
        "description": "Ip versions",
        "enum": [
          "v4",
          "v6"
        ]
      },
      "duration": {
        "type": "string",
        "description": "Duration (e.g., P1Y2M3DT4H6M9S)",
        "example": "P1Y2M3DT4H6M9S"
      },
      "email": {
        "type": "string",
        "description": "Email address (e.g., api@ml.ovh.net)",
        "format": "email",
        "example": "api@ml.ovh.net"
      },
      "email.pro.ObjectStateEnum": {
        "type": "string",
        "description": "Current object state",
        "enum": [
          "creating",
          "deleting",
          "ok",
          "reopening",
          "suspended",
          "suspending",
          "unknown"
        ]
      },
      "iam.ResourceMetadata": {
        "type": "object",
        "description": "IAM resource metadata embedded in services models",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Resource display name",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the resource",
            "format": "uuid",
            "readOnly": true
          },
          "tags": {
            "type": "object",
            "description": "Resource tags. Tags that were internally computed are prefixed with ovh:",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            },
            "readOnly": true
          },
          "urn": {
            "type": "string",
            "description": "Unique resource name used in policies",
            "readOnly": true
          }
        }
      },
      "iam.resource.TagFilter": {
        "type": "object",
        "description": "Resource tag filter",
        "properties": {
          "operator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.resource.TagFilter.OperatorEnum"
              }
            ],
            "description": "Operator to use in order to filter on the value (defaults to 'EQ')",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "description": "Value to use in order to filter tags",
            "readOnly": true
          }
        }
      },
      "iam.resource.TagFilter.OperatorEnum": {
        "type": "string",
        "description": "Operator that can be used in order to filter resources tags",
        "enum": [
          "EQ",
          "EXISTS",
          "ILIKE",
          "LIKE",
          "NEQ",
          "NEXISTS"
        ]
      },
      "internationalPhoneNumber": {
        "type": "string",
        "description": "International phone number",
        "format": "phone-number"
      },
      "ip": {
        "type": "string",
        "description": "IP address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipBlock": {
        "type": "string",
        "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)",
        "format": "ip-block",
        "example": "192.0.2.0/24"
      },
      "ipInterface": {
        "type": "string",
        "description": "IP address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipv4": {
        "type": "string",
        "description": "IPv4 address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipv4Block": {
        "type": "string",
        "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)",
        "format": "ipv4-block",
        "example": "192.0.2.0/24"
      },
      "ipv6": {
        "type": "string",
        "description": "IPv6 address (e.g., 2001:41d0:1:1994::1)",
        "format": "ipv6",
        "example": "2001:41d0:1:1994::1"
      },
      "ipv6Block": {
        "type": "string",
        "description": "IPv6 CIDR notation (e.g., 2001:41d0::/128)",
        "format": "ipv6-block",
        "example": "2001:41d0::/128"
      },
      "macAddress": {
        "type": "string",
        "description": "MAC address (e.g., 2001:4860:4860::8844)",
        "format": "mac-address",
        "example": "2001:4860:4860::8888. 2001:4860:4860::8844"
      },
      "order.Contract": {
        "type": "object",
        "description": "A contract",
        "properties": {
          "content": {
            "type": "string",
            "description": "Terms of the contract",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the contract",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "description": "URL to download the contract",
            "readOnly": true
          }
        }
      },
      "order.CurrencyCodeEnum": {
        "type": "string",
        "description": "Currency code",
        "enum": [
          "AUD",
          "CAD",
          "CZK",
          "EUR",
          "GBP",
          "INR",
          "LTL",
          "MAD",
          "N/A",
          "PLN",
          "SGD",
          "TND",
          "USD",
          "XOF",
          "points"
        ]
      },
      "order.Order": {
        "type": "object",
        "description": "An order",
        "properties": {
          "contracts": {
            "type": "array",
            "description": "List of contracts related to the order",
            "items": {
              "$ref": "#/components/schemas/order.Contract"
            },
            "readOnly": true
          },
          "details": {
            "type": "array",
            "description": "Details of the order",
            "items": {
              "$ref": "#/components/schemas/order.OrderDetail"
            },
            "readOnly": true
          },
          "orderId": {
            "type": "integer",
            "description": "Identifier of the order",
            "nullable": true,
            "readOnly": true
          },
          "prices": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.OrderPrices"
              }
            ],
            "description": "Prices of the order including with and without taxes",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "description": "URL to download the order",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "order.OrderDetail": {
        "type": "object",
        "description": "Detail of an order",
        "properties": {
          "cartItemID": {
            "type": "integer",
            "description": "Cart Item ID the details is related to",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of the detail",
            "readOnly": true
          },
          "detailType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.OrderDetailTypeEnum"
              }
            ],
            "description": "Type of detail",
            "nullable": true,
            "readOnly": true
          },
          "domain": {
            "type": "string",
            "description": "Service name",
            "readOnly": true
          },
          "originalTotalPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Original price of the detail before reduction application",
            "readOnly": true
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the service",
            "readOnly": true
          },
          "reductionTotalPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Total price of the reduction",
            "readOnly": true
          },
          "reductions": {
            "type": "array",
            "description": "List of reductions applied to the detail",
            "items": {
              "$ref": "#/components/schemas/order.Reduction"
            },
            "readOnly": true
          },
          "totalPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price total of the services",
            "readOnly": true
          },
          "unitPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Unitary price of the service",
            "readOnly": true
          }
        }
      },
      "order.OrderDetailTypeEnum": {
        "type": "string",
        "description": "Product type of item in order",
        "enum": [
          "ACCESSORY",
          "CAUTION",
          "CHOOSED",
          "CONSUMPTION",
          "CREATION",
          "DELIVERY",
          "DURATION",
          "GIFT",
          "INSTALLATION",
          "LICENSE",
          "MUTE",
          "OTHER",
          "OUTPLAN",
          "QUANTITY",
          "REFUND",
          "RENEW",
          "SPECIAL",
          "SWITCH",
          "TRANSFER",
          "VOUCHER"
        ]
      },
      "order.OrderPrices": {
        "type": "object",
        "description": "Prices of an order",
        "properties": {
          "originalWithoutTax": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price before reduction application",
            "nullable": true,
            "readOnly": true
          },
          "reduction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price concerning the reduced amount",
            "nullable": true,
            "readOnly": true
          },
          "tax": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Tax amount",
            "readOnly": true
          },
          "withTax": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price with tax",
            "readOnly": true
          },
          "withoutTax": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price without tax",
            "readOnly": true
          }
        }
      },
      "order.Price": {
        "type": "object",
        "description": "Price with its currency and textual representation",
        "properties": {
          "currencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.CurrencyCodeEnum"
              }
            ],
            "description": "Currency code",
            "readOnly": true
          },
          "priceInUcents": {
            "type": "integer",
            "description": "Price in microcents",
            "nullable": true,
            "readOnly": true
          },
          "text": {
            "type": "string",
            "description": "Textual representation",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "description": "The effective price",
            "readOnly": true
          }
        }
      },
      "order.Reduction": {
        "type": "object",
        "description": "Order detail reduction",
        "properties": {
          "context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.ReductionContextEnum"
              }
            ],
            "description": "In which context the reduction is applied",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Promotion description",
            "readOnly": true
          },
          "price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Reduction price applied with this promotion",
            "readOnly": true
          },
          "reductionDescription": {
            "type": "string",
            "description": "Reduction description",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.ReductionTypeEnum"
              }
            ],
            "description": "Reduction effect, price modification",
            "readOnly": true
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "The reduction value",
            "readOnly": true
          }
        }
      },
      "order.ReductionContextEnum": {
        "type": "string",
        "description": "Context of the reduction",
        "enum": [
          "promotion",
          "voucher"
        ]
      },
      "order.ReductionTypeEnum": {
        "type": "string",
        "description": "Type of reduction",
        "enum": [
          "fixed_amount",
          "forced_amount",
          "percentage"
        ]
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number",
        "format": "phone-number"
      },
      "service.RenewType": {
        "type": "object",
        "description": "Map a possible renew for a specific service",
        "properties": {
          "automatic": {
            "type": "boolean",
            "description": "The service is automatically renewed"
          },
          "deleteAtExpiration": {
            "type": "boolean",
            "description": "The service will be deleted at expiration"
          },
          "forced": {
            "type": "boolean",
            "description": "The service forced to be renewed"
          },
          "manualPayment": {
            "type": "boolean",
            "description": "The service needs to be manually renewed and paid",
            "nullable": true
          },
          "period": {
            "type": "integer",
            "description": "period of renew in month",
            "nullable": true
          }
        }
      },
      "service.RenewalTypeEnum": {
        "type": "string",
        "description": "Detailed renewal type of a service",
        "enum": [
          "automaticForcedProduct",
          "automaticV2012",
          "automaticV2014",
          "automaticV2016",
          "manual",
          "oneShot",
          "option"
        ]
      },
      "service.StateEnum": {
        "type": "string",
        "description": "service.StateEnum",
        "enum": [
          "autorenewInProgress",
          "expired",
          "inCreation",
          "ok",
          "pendingDebt",
          "unPaid"
        ]
      },
      "services.Service": {
        "type": "object",
        "description": "Details about a Service",
        "properties": {
          "canDeleteAtExpiration": {
            "type": "boolean",
            "description": "Indicates that the service can be set up to be deleted at expiration",
            "readOnly": true
          },
          "contactAdmin": {
            "type": "string",
            "readOnly": true
          },
          "contactBilling": {
            "type": "string",
            "readOnly": true
          },
          "contactTech": {
            "type": "string",
            "readOnly": true
          },
          "creation": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "domain": {
            "type": "string",
            "readOnly": true
          },
          "engagedUpTo": {
            "type": "string",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "expiration": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "possibleRenewPeriod": {
            "type": "array",
            "description": "All the possible renew period of your service in month",
            "nullable": true,
            "items": {
              "type": "integer"
            },
            "readOnly": true
          },
          "renew": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.RenewType"
              }
            ],
            "description": "Way of handling the renew",
            "nullable": true
          },
          "renewalType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.RenewalTypeEnum"
              }
            ],
            "readOnly": true
          },
          "serviceId": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.StateEnum"
              }
            ],
            "readOnly": true
          }
        }
      },
      "spare.xdsl.XdslSpare": {
        "type": "object",
        "description": "Spare properties",
        "properties": {
          "brand": {
            "type": "string",
            "description": "Modem brand model",
            "readOnly": true
          },
          "macAddress": {
            "type": "string",
            "description": "Mac address",
            "readOnly": true
          }
        }
      },
      "spare.xdsl.XdslSpareWithIAM": {
        "type": "object",
        "description": "Spare properties",
        "properties": {
          "brand": {
            "type": "string",
            "description": "Modem brand model",
            "readOnly": true
          },
          "iam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.ResourceMetadata"
              }
            ],
            "description": "IAM resource metadata",
            "nullable": true,
            "readOnly": true
          },
          "macAddress": {
            "type": "string",
            "description": "Mac address",
            "readOnly": true
          }
        }
      },
      "telephony.Contact": {
        "type": "object",
        "description": "Contact information structure",
        "properties": {
          "address": {
            "type": "string",
            "description": "Contact address",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Contact city",
            "nullable": true
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/coreTypes.CountryEnum"
              }
            ],
            "description": "Contact country",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "description": "Contact firstname",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "nullable": true
          },
          "organisation": {
            "type": "string",
            "description": "Contact organisation",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Contact phone",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "description": "Contact zip",
            "nullable": true
          }
        }
      },
      "telephony.Rma": {
        "type": "object",
        "description": "Current Return Merchandise Authorisation",
        "properties": {
          "cancellable": {
            "type": "boolean",
            "description": "Is the RMA cancellable?",
            "readOnly": true
          },
          "creationDatetime": {
            "type": "string",
            "description": "Creation datetime of the return merchandise authorisation ticket",
            "format": "date-time",
            "readOnly": true
          },
          "equipmentReference": {
            "type": "string",
            "description": "Merchandise reference",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Return merchandise authorisation identifier",
            "readOnly": true
          },
          "newMerchandise": {
            "type": "string",
            "description": "New merchandise brand in case of exchange",
            "nullable": true,
            "readOnly": true
          },
          "offerTypeNew": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.RmaOfferTypeEnum"
              }
            ],
            "description": "Offer type of the new merchandise in case of exchange",
            "nullable": true,
            "readOnly": true
          },
          "offerTypeOld": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.RmaOfferTypeEnum"
              }
            ],
            "description": "Offer type of the return merchandise",
            "readOnly": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.RmaReplaceTypeEnum"
              }
            ],
            "description": "Return merchandise authorisation type"
          },
          "receptionDatetime": {
            "type": "string",
            "description": "Reception datetime of the return merchandise authorisation ticket",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "shippingContact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.Contact"
              }
            ],
            "description": "Contact information structure"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.RmaStatusEnum"
              }
            ],
            "description": "Return merchandise authorisation step",
            "readOnly": true
          },
          "steps": {
            "type": "array",
            "description": "Indicates the current status of the RMA with a list of steps",
            "items": {
              "$ref": "#/components/schemas/telephony.RmaStep"
            },
            "readOnly": true
          },
          "terminationDatetime": {
            "type": "string",
            "description": "Termination datetime of the return merchandise authorisation ticket",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.RmaTypeEnum"
              }
            ],
            "description": "Typology process of merchandise return",
            "readOnly": true
          }
        }
      },
      "telephony.RmaChangeTypeEnum": {
        "type": "string",
        "description": "Types of return merchandise authorisation you can change to",
        "enum": [
          "resiliate",
          "toSip"
        ]
      },
      "telephony.RmaOfferTypeEnum": {
        "type": "string",
        "description": "Return merchandise authorisation offer type",
        "enum": [
          "deposit",
          "loan",
          "purchase"
        ]
      },
      "telephony.RmaReplaceTypeEnum": {
        "type": "string",
        "description": "Return merchandise authorisation type",
        "enum": [
          "changePhone",
          "phoneRestitution",
          "undefined"
        ]
      },
      "telephony.RmaStatusEnum": {
        "type": "string",
        "description": "Return merchandise authorisation step",
        "enum": [
          "closed",
          "open",
          "received"
        ]
      },
      "telephony.RmaStep": {
        "type": "object",
        "description": "Informations related to the current RMA step status",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the step",
            "readOnly": true
          },
          "doneDate": {
            "type": "string",
            "description": "The date when this step was done",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "infos": {
            "type": "string",
            "description": "Additional information about the step",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.RmaStepNameEnum"
              }
            ],
            "description": "RMA step names",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.RmaStepStatusEnum"
              }
            ],
            "description": "Status of the RMA step",
            "readOnly": true
          }
        }
      },
      "telephony.RmaStepNameEnum": {
        "type": "string",
        "description": "RMA step names",
        "enum": [
          "dispatchJustification",
          "equipmentSending",
          "equipmentTesting",
          "opening",
          "parcelReception",
          "parcelValidation",
          "validation"
        ]
      },
      "telephony.RmaStepStatusEnum": {
        "type": "string",
        "description": "Status of the RMA step",
        "enum": [
          "done",
          "todo"
        ]
      },
      "telephony.RmaTypeEnum": {
        "type": "string",
        "description": "Return merchandise authorisation type",
        "enum": [
          "after sale equipment service exchange",
          "after sale phone service exchange",
          "equipment restitution",
          "fast exchange",
          "old merchandise reception before exchange",
          "phone restitution",
          "resends due to shipping lost by the carrier",
          "resends due to shipping not withdraw",
          "specific return merchandise authorisation",
          "termination",
          "unknown"
        ]
      },
      "time": {
        "type": "string",
        "description": "Time (e.g., 15:04:05)",
        "format": "time",
        "example": "15:04:05"
      },
      "xdsl.Access": {
        "type": "object",
        "description": "XDSL Access",
        "properties": {
          "accessName": {
            "type": "string",
            "readOnly": true
          },
          "accessType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.DslTypeEnum"
              }
            ],
            "readOnly": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AddressDetail"
              }
            ],
            "readOnly": true
          },
          "capabilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AccessCapabilities"
              }
            ],
            "readOnly": true
          },
          "description": {
            "type": "string"
          },
          "ipv6Enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "lnsRateLimit": {
            "type": "integer",
            "description": "Rate limit on the LNS in kbps - Only available if canApplyLnsRateLimit capability is set to true - Must be a multiple of 64 - Min value 64 / Max value 100032",
            "nullable": true
          },
          "mailSending": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.mailSendingAccessStatusEnum"
              }
            ],
            "description": "Status of mail sending on the Access",
            "nullable": true,
            "readOnly": true
          },
          "monitoring": {
            "type": "boolean",
            "description": "Whether or not this access is monitored"
          },
          "nra": {
            "type": "string",
            "readOnly": true
          },
          "packName": {
            "type": "string",
            "description": "Pack name, if access is in a pack",
            "nullable": true,
            "readOnly": true
          },
          "pairsNumber": {
            "type": "integer",
            "readOnly": true
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ProviderEnum"
              }
            ],
            "description": "The provider",
            "readOnly": true
          },
          "providerInfra": {
            "type": "string",
            "description": "The provider of the infrastructure, if applicable",
            "nullable": true,
            "readOnly": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AccessRoleEnum"
              }
            ],
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AccessStatusEnum"
              }
            ],
            "readOnly": true
          }
        }
      },
      "xdsl.AccessCapabilities": {
        "type": "object",
        "description": "Describe the capabilities of the Access",
        "properties": {
          "canApplyLnsRateLimit": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeDslamProfile": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeLns": {
            "type": "boolean",
            "readOnly": true
          },
          "canGetRadiusConnectionLogs": {
            "type": "boolean",
            "readOnly": true
          },
          "canResetDslamPort": {
            "type": "boolean",
            "readOnly": true
          },
          "hasDslamPort": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "xdsl.AccessDiagnostic": {
        "type": "object",
        "description": "Diagnostic of the access",
        "properties": {
          "capabilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AccessDiagnosticCapabilities"
              }
            ],
            "description": "Available tests for this access",
            "readOnly": true
          },
          "diagnosticTime": {
            "type": "string",
            "description": "Datime of the diagnostic",
            "format": "date-time",
            "readOnly": true
          },
          "incident": {
            "type": "boolean",
            "description": "Is there an ongoing genericIncident on the access ?",
            "nullable": true,
            "readOnly": true
          },
          "isActiveOnLns": {
            "type": "boolean",
            "description": "Is the access active on its primary or secondary LNS",
            "nullable": true,
            "readOnly": true
          },
          "isModemConnected": {
            "type": "boolean",
            "description": "Is the modem connected ?",
            "nullable": true,
            "readOnly": true
          },
          "lineDetails": {
            "type": "array",
            "description": "Test details by line",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/xdsl.LineDiagnostic"
            },
            "readOnly": true
          },
          "maintenance": {
            "type": "boolean",
            "description": "Is there an ongoing scheduled maintenance by operator on the access ?",
            "nullable": true,
            "readOnly": true
          },
          "ping": {
            "type": "boolean",
            "description": "Does the access ping ?",
            "nullable": true,
            "readOnly": true
          },
          "remaining": {
            "type": "integer",
            "description": "Remaining number of diagnostic for this access",
            "readOnly": true
          }
        }
      },
      "xdsl.AccessDiagnosticCapabilities": {
        "type": "object",
        "description": "Describe the capabilities of the access diagnostic",
        "properties": {
          "incident": {
            "type": "boolean",
            "readOnly": true
          },
          "isActiveOnLns": {
            "type": "boolean",
            "readOnly": true
          },
          "isModemConnected": {
            "type": "boolean",
            "readOnly": true
          },
          "lineTest": {
            "type": "boolean",
            "readOnly": true
          },
          "ping": {
            "type": "boolean",
            "readOnly": true
          },
          "proposedProfileId": {
            "type": "boolean",
            "readOnly": true
          },
          "sync": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "xdsl.AccessLatency": {
        "type": "object",
        "description": "An access latency item",
        "properties": {
          "loss": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "integer",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "nullable": true,
            "readOnly": true
          },
          "verboseStatus": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.AccessRoleEnum": {
        "type": "string",
        "description": "Available access roles",
        "enum": [
          "backup",
          "main"
        ]
      },
      "xdsl.AccessStatisticsTypeEnum": {
        "type": "string",
        "description": "Various types of statisctics available for the access.",
        "enum": [
          "ping",
          "traffic:download",
          "traffic:upload"
        ]
      },
      "xdsl.AccessStatusEnum": {
        "type": "string",
        "description": "Status of the access",
        "enum": [
          "active",
          "cancelled",
          "close",
          "deleting",
          "doing",
          "migration",
          "slamming",
          "terminated",
          "upgradeOffer"
        ]
      },
      "xdsl.AccessWithIAM": {
        "type": "object",
        "description": "XDSL Access",
        "properties": {
          "accessName": {
            "type": "string",
            "readOnly": true
          },
          "accessType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.DslTypeEnum"
              }
            ],
            "readOnly": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AddressDetail"
              }
            ],
            "readOnly": true
          },
          "capabilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AccessCapabilities"
              }
            ],
            "readOnly": true
          },
          "description": {
            "type": "string"
          },
          "iam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.ResourceMetadata"
              }
            ],
            "description": "IAM resource metadata",
            "nullable": true,
            "readOnly": true
          },
          "ipv6Enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "lnsRateLimit": {
            "type": "integer",
            "description": "Rate limit on the LNS in kbps - Only available if canApplyLnsRateLimit capability is set to true - Must be a multiple of 64 - Min value 64 / Max value 100032",
            "nullable": true
          },
          "mailSending": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.mailSendingAccessStatusEnum"
              }
            ],
            "description": "Status of mail sending on the Access",
            "nullable": true,
            "readOnly": true
          },
          "monitoring": {
            "type": "boolean",
            "description": "Whether or not this access is monitored"
          },
          "nra": {
            "type": "string",
            "readOnly": true
          },
          "packName": {
            "type": "string",
            "description": "Pack name, if access is in a pack",
            "nullable": true,
            "readOnly": true
          },
          "pairsNumber": {
            "type": "integer",
            "readOnly": true
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ProviderEnum"
              }
            ],
            "description": "The provider",
            "readOnly": true
          },
          "providerInfra": {
            "type": "string",
            "description": "The provider of the infrastructure, if applicable",
            "nullable": true,
            "readOnly": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AccessRoleEnum"
              }
            ],
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AccessStatusEnum"
              }
            ],
            "readOnly": true
          }
        }
      },
      "xdsl.AddressDetail": {
        "type": "object",
        "description": "All components of an address",
        "properties": {
          "building": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "city": {
            "type": "string",
            "readOnly": true
          },
          "door": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "firstName": {
            "type": "string",
            "readOnly": true
          },
          "floor": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "inseeCode": {
            "type": "string",
            "description": "Identifier of the city",
            "readOnly": true
          },
          "lastName": {
            "type": "string",
            "readOnly": true
          },
          "numberStreet": {
            "type": "string",
            "readOnly": true
          },
          "residence": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "rivoliCode": {
            "type": "string",
            "description": "Identifier of the street",
            "readOnly": true
          },
          "stairs": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "street": {
            "type": "string",
            "readOnly": true
          },
          "zipCode": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "xdsl.AntiSpam": {
        "type": "object",
        "description": "Spams detected from xdsl access",
        "properties": {
          "date": {
            "type": "string",
            "description": "Detection date",
            "format": "date-time",
            "readOnly": true
          },
          "ip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP which spam",
            "readOnly": true
          },
          "lastSpamDetected": {
            "type": "string",
            "description": "Last spam detection date",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.antiSpam.AntiSpamStatusEnum"
              }
            ],
            "description": "AntiSpam status",
            "readOnly": true
          }
        }
      },
      "xdsl.AsyncTaskStatusEnum": {
        "type": "string",
        "description": "AsyncTask status",
        "enum": [
          "error",
          "ok",
          "pending"
        ]
      },
      "xdsl.AsyncTask_connectivity.eligibility.Meetings": {
        "type": "object",
        "description": "xdsl.AsyncTask_connectivity.eligibility.Meetings",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "result": {
            "allOf": [
              {
                "$ref": "#/components/schemas/connectivity.eligibility.Meetings"
              }
            ],
            "description": "List of available meeting time slots",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AsyncTaskStatusEnum"
              }
            ],
            "description": "AsyncTask status",
            "readOnly": true
          }
        }
      },
      "xdsl.AsyncTask_xdsl.ModemInfo": {
        "type": "object",
        "description": "xdsl.AsyncTask_xdsl.ModemInfo",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "result": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ModemInfo"
              }
            ],
            "description": "Describe general information of a Modem",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.AsyncTaskStatusEnum"
              }
            ],
            "description": "AsyncTask status",
            "readOnly": true
          }
        }
      },
      "xdsl.CopperGridClosureTrajectory": {
        "type": "object",
        "description": "Copper grid closure trajectory",
        "properties": {
          "commercialClosureAnnouncementDate": {
            "type": "string",
            "description": "Commercial closure announcement date",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "commercialClosureDate": {
            "type": "string",
            "description": "Commercial closure date",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "commercialClosureInitialDate": {
            "type": "string",
            "description": "Commercial closure initial date",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "departmentCode": {
            "type": "string",
            "description": "Department code",
            "readOnly": true
          },
          "departmentName": {
            "type": "string",
            "description": "Department name",
            "nullable": true,
            "readOnly": true
          },
          "ftthZone": {
            "type": "string",
            "description": "FTTH zone",
            "nullable": true,
            "readOnly": true
          },
          "inseeCode": {
            "type": "string",
            "description": "INSEE code",
            "readOnly": true
          },
          "lot": {
            "type": "string",
            "description": "Lot",
            "nullable": true,
            "readOnly": true
          },
          "municipalityName": {
            "type": "string",
            "description": "Municipality name",
            "readOnly": true
          },
          "oiCode": {
            "type": "string",
            "description": "OI code",
            "nullable": true,
            "readOnly": true
          },
          "oiName": {
            "type": "string",
            "description": "OI name",
            "nullable": true,
            "readOnly": true
          },
          "technicalClosureAnnouncementDate": {
            "type": "string",
            "description": "Technical closure announcement date",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "technicalClosureDate": {
            "type": "string",
            "description": "Technical closure date",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "technicalClosureInitialDate": {
            "type": "string",
            "description": "Technical closure initial date",
            "nullable": true,
            "format": "date",
            "readOnly": true
          }
        }
      },
      "xdsl.DHCP": {
        "type": "object",
        "description": "DHCP Configuration of the Modem",
        "properties": {
          "defaultGateway": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "dhcpName": {
            "type": "string",
            "description": "Name of the DHCP",
            "readOnly": true
          },
          "domainName": {
            "type": "string",
            "description": "Domain name provided to the clients"
          },
          "endAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "leaseTime": {
            "type": "integer",
            "description": "Lease time in seconds of client assigned address (-1 means infinite)"
          },
          "primaryDNS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "secondaryDNS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "Secondary DNS servers to be given to the clients",
            "nullable": true
          },
          "serverEnabled": {
            "type": "boolean",
            "description": "State of the DHCP server of the modem"
          },
          "startAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "subnetMask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "taskId": {
            "type": "integer",
            "description": "ID of the ongoing todo (NULL if none)",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.DHCPStaticAddress": {
        "type": "object",
        "description": "DHCP Static Address",
        "properties": {
          "IPAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "MACAddress": {
            "type": "string",
            "description": "The MAC address of the device",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the DHCP Static lease",
            "nullable": true
          },
          "taskId": {
            "type": "integer",
            "description": "ID of the ongoing todo (NULL if none)",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.DeconsolidationEnum": {
        "type": "string",
        "description": "Deconsolidation of the line.",
        "enum": [
          "createNeighbour",
          "creation",
          "creationNeighbour",
          "partial",
          "total"
        ]
      },
      "xdsl.DeconsolidationTerms": {
        "type": "object",
        "description": "Show the deconsolidation terms",
        "properties": {
          "engagement": {
            "type": "number",
            "description": "Duration of month the access will be engaged",
            "readOnly": true
          },
          "monthlyPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price with it's currency and textual representation",
            "readOnly": true
          },
          "price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price with it's currency and textual representation",
            "readOnly": true
          }
        }
      },
      "xdsl.DeviceModemInfo": {
        "type": "object",
        "description": "Describe device information of a Modem",
        "properties": {
          "brand": {
            "type": "string",
            "description": "Modem brand",
            "readOnly": true
          },
          "ip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "IPv4 address (e.g., 192.0.2.0)",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Time of last information refresh",
            "format": "date-time",
            "readOnly": true
          },
          "macAddress": {
            "type": "string",
            "description": "Modem mac address",
            "readOnly": true
          },
          "model": {
            "type": "string",
            "description": "Modem type of model",
            "readOnly": true
          },
          "oui": {
            "type": "string",
            "description": "Organizational Unique Identifier",
            "readOnly": true
          },
          "overEthernet": {
            "type": "string",
            "description": "Protocol used for connection",
            "nullable": true,
            "readOnly": true
          },
          "pppLogin": {
            "type": "string",
            "description": "login used for ppp protocol",
            "nullable": true,
            "readOnly": true
          },
          "serial": {
            "type": "string",
            "description": "Modem serial key",
            "readOnly": true
          },
          "softVersion": {
            "type": "string",
            "description": "Software Version",
            "readOnly": true
          }
        }
      },
      "xdsl.DslTypeEnum": {
        "type": "string",
        "description": "Possible DSL technologies",
        "enum": [
          "adsl",
          "ftte",
          "ftth",
          "sdsl",
          "vdsl"
        ]
      },
      "xdsl.DslamLineProfile": {
        "type": "object",
        "description": "Profile on the DSLAM",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "isCurrent": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "xdsl.DslamPort": {
        "type": "object",
        "description": "Information about the port on the DSLAM",
        "properties": {
          "lastDesyncDate": {
            "type": "string",
            "description": "Last time the port lost the synchronization",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "lastSyncDate": {
            "type": "string",
            "description": "Last time the port synchronized",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "profile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.DslamLineProfile"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.DslamPortStatusEnum"
              }
            ],
            "readOnly": true
          }
        }
      },
      "xdsl.DslamPortLog": {
        "type": "object",
        "description": "A message log from the DSLAM",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "lastOccurrenceDate": {
            "type": "string",
            "description": "The last time this message occured",
            "format": "date-time",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "numberOfOccurrences": {
            "type": "integer",
            "description": "The number of times this message occured between date and lastOccurrenceDate",
            "readOnly": true
          }
        }
      },
      "xdsl.DslamPortStatusEnum": {
        "type": "string",
        "description": "Different states of a DSLAM port",
        "enum": [
          "activated",
          "deactivated",
          "outofsync"
        ]
      },
      "xdsl.ExtraIpRangeMove": {
        "type": "object",
        "description": "Informations about the extra IP range during address move",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of the migration",
            "format": "date-time",
            "readOnly": true
          },
          "ipRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4Block"
              }
            ],
            "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)",
            "readOnly": true
          },
          "moveTo": {
            "type": "string",
            "description": "Access where the IP range will be moved to",
            "readOnly": true
          }
        }
      },
      "xdsl.FaultRepairTimeEnum": {
        "type": "string",
        "description": "Maximum time needed to repair a landline",
        "enum": [
          "10HO",
          "4HNO",
          "4HO",
          "DPLUS1",
          "NORMAL"
        ]
      },
      "xdsl.FiberEligibility": {
        "type": "object",
        "description": "Fiber eligibility",
        "properties": {
          "availabilityDate": {
            "type": "string",
            "description": "Availability date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "buildingName": {
            "type": "string",
            "description": "Building name",
            "nullable": true,
            "readOnly": true
          },
          "buildingReference": {
            "type": "string",
            "description": "Building reference",
            "nullable": true,
            "readOnly": true
          },
          "buildingSeqId": {
            "type": "integer",
            "description": "Building sequence id",
            "nullable": true,
            "readOnly": true
          },
          "copperGridClosureTrajectory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.CopperGridClosureTrajectory"
              }
            ],
            "description": "Copper grid closure trajectory",
            "nullable": true,
            "readOnly": true
          },
          "firstEligibleDate": {
            "type": "string",
            "description": "First eligible date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "grts": {
            "type": "array",
            "description": "Available GRTs",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/xdsl.GtrEnum"
            },
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Identifier",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Last update date",
            "format": "date-time",
            "readOnly": true
          },
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.Offer"
              }
            ],
            "description": "Offer",
            "nullable": true,
            "readOnly": true
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.Provider"
              }
            ],
            "description": "Provider",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.FiberEligibilityStatusEnum"
              }
            ],
            "description": "Status",
            "readOnly": true
          }
        }
      },
      "xdsl.FiberEligibilityStatusEnum": {
        "type": "string",
        "description": "Status of the fiber eligibility",
        "enum": [
          "eligible",
          "no_building",
          "not_eligible",
          "not_yet_eligible"
        ]
      },
      "xdsl.GtrEnum": {
        "type": "string",
        "description": "GRT option for an access.",
        "enum": [
          "10ho",
          "20m_10ho",
          "20m_4ho",
          "4hno",
          "4ho",
          "5m_10ho",
          "5m_4ho",
          "dplus1",
          "none"
        ]
      },
      "xdsl.IP": {
        "type": "object",
        "description": "Informations about an IP address",
        "properties": {
          "dnsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ip"
            },
            "readOnly": true
          },
          "ip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "The IP address",
            "readOnly": true
          },
          "range": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.IpStatusEnum"
              }
            ],
            "description": "status of the IP",
            "readOnly": true
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/components/schemas/coreTypes.IpVersionEnum"
              }
            ],
            "readOnly": true
          }
        }
      },
      "xdsl.Incident": {
        "type": "object",
        "description": "Detected incident",
        "properties": {
          "comment": {
            "type": "string",
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "Estimated start date",
            "format": "date-time",
            "readOnly": true
          },
          "departments": {
            "type": "array",
            "description": "Department list",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "endDate": {
            "type": "string",
            "description": "Estimated end date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "ID of the incident",
            "readOnly": true
          },
          "nra": {
            "type": "array",
            "description": "NRA list",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "operators": {
            "type": "array",
            "description": "Operator",
            "items": {
              "$ref": "#/components/schemas/xdsl.OperatorTypeEnum"
            },
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "Task ID on travaux.ovh.com",
            "nullable": true,
            "readOnly": true
          },
          "taskReference": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.IpStatusEnum": {
        "type": "string",
        "description": "Status of an IP.",
        "enum": [
          "active",
          "close",
          "toDelete"
        ]
      },
      "xdsl.LAN": {
        "type": "object",
        "description": "LAN Configuration of the Modem",
        "properties": {
          "IPAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "addressingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.AddressingTypeEnum"
              }
            ],
            "description": "How the modem gets its LAN IP Address"
          },
          "lanName": {
            "type": "string",
            "description": "Name of the LAN",
            "readOnly": true
          },
          "subnetMask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "taskId": {
            "type": "integer",
            "description": "ID of the ongoing todo (NULL if none)",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.LandlineConcentrationPoint": {
        "type": "object",
        "description": "Infos about a Landline at the concentration point",
        "properties": {
          "lineHead": {
            "type": "string",
            "description": "Identifier of the head of the cable from the MDF",
            "readOnly": true
          },
          "lineInitialSection": {
            "type": "integer",
            "description": "Identifier of the section at the lineHead",
            "readOnly": true
          },
          "lineInitialSectionPair": {
            "type": "integer",
            "description": "Identifier of the pair at the lineHead's lineInitialSection",
            "readOnly": true
          }
        }
      },
      "xdsl.Line": {
        "type": "object",
        "description": "Information about the physical copper line",
        "properties": {
          "concentrationPoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.LandlineConcentrationPoint"
              }
            ],
            "description": "Data to identify the line at the concentration point",
            "nullable": true,
            "readOnly": true
          },
          "deconsolidation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.DeconsolidationEnum"
              }
            ],
            "readOnly": true
          },
          "directDistribution": {
            "type": "boolean",
            "description": "True if the line is directly wired on the DSLAM",
            "nullable": true,
            "readOnly": true
          },
          "distance": {
            "type": "integer",
            "description": "Distance in meters from the DSLAM",
            "readOnly": true
          },
          "faultRepairTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.FaultRepairTimeEnum"
              }
            ],
            "readOnly": true
          },
          "lineSectionsLength": {
            "type": "array",
            "description": "Detailed information about the sections between the DSLAM and the telephone jack",
            "items": {
              "$ref": "#/components/schemas/xdsl.LineSectionLength"
            },
            "readOnly": true
          },
          "mitigation": {
            "type": "number",
            "description": "Mitigation of the line in dB",
            "readOnly": true
          },
          "number": {
            "type": "string",
            "description": "The number of the line",
            "readOnly": true
          },
          "originalNumber": {
            "type": "string",
            "description": "The number used to place the order. Null if the same as the current number.",
            "nullable": true,
            "readOnly": true
          },
          "portability": {
            "type": "boolean",
            "description": "Whether the line number has been ported to OVH, to be used with VoIP service",
            "readOnly": true
          },
          "syncDown": {
            "type": "number",
            "description": "The download synchronisation on the DSLAM in Kbps",
            "nullable": true,
            "readOnly": true
          },
          "syncUp": {
            "type": "number",
            "description": "The upload synchronisation on the DSLAM in Kbps",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.LineDiagnostic": {
        "type": "object",
        "description": "Detailed line tests",
        "properties": {
          "lineTest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.LineTestEnum"
              }
            ],
            "nullable": true,
            "readOnly": true
          },
          "lineTestTime": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "number": {
            "type": "string",
            "readOnly": true
          },
          "proposedProfileId": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "sync": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "xdsl.LineSectionLength": {
        "type": "object",
        "description": "xdsl.LineSectionLength",
        "properties": {
          "diameter": {
            "type": "integer",
            "description": "The diameter of this section in millimeters",
            "readOnly": true
          },
          "length": {
            "type": "integer",
            "description": "The length of this section in meters",
            "readOnly": true
          }
        }
      },
      "xdsl.LineStatisticsTypeEnum": {
        "type": "string",
        "description": "Various types of statisctics available for the line.",
        "enum": [
          "attenuation:download",
          "attenuation:upload",
          "error:crc",
          "error:fec",
          "error:hec",
          "snr:download",
          "snr:upload",
          "synchronization:download",
          "synchronization:upload"
        ]
      },
      "xdsl.LineTestEnum": {
        "type": "string",
        "description": "Line tests results",
        "enum": [
          "actionPending",
          "customerSideProblem",
          "error",
          "noProblem",
          "ovhSideProblem"
        ]
      },
      "xdsl.Modem": {
        "type": "object",
        "description": "Modem",
        "properties": {
          "acsBackend": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.ACSBackendEnum"
              }
            ],
            "description": "ACS backend used by the modem"
          },
          "acsVersion": {
            "type": "string",
            "description": "Version of ACS API used",
            "nullable": true,
            "readOnly": true
          },
          "brandName": {
            "type": "string",
            "readOnly": true
          },
          "capabilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ModemCapabilities"
              }
            ],
            "readOnly": true
          },
          "dmzIP": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP Address of the DMZ (To modify or delete the DMZ IP on the modem, a re-configuration of your modem has to be made, your configuration will be maintained, but you will lose your connection a few minutes)",
            "nullable": true
          },
          "easyFirewallLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.EasyFirewallLevelEnum"
              }
            ],
            "description": "Level of the FireWall on the modem",
            "nullable": true,
            "readOnly": true
          },
          "ipv6Support": {
            "type": "boolean",
            "description": "Whether or not the modem supports IPv6",
            "readOnly": true
          },
          "isBridged": {
            "type": "boolean",
            "description": "Whether or not the modem is in bridge mode. To pass from bridge mode to routed mode, a reset is necessary. If the modem is managedByOvh, the bridge state will be kept after a reset"
          },
          "lastCwmpRequestDate": {
            "type": "string",
            "description": "Last time the modem made a CWMP request to the Auto Configuration Server",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "macAddress": {
            "type": "string",
            "readOnly": true
          },
          "managedByOvh": {
            "type": "boolean",
            "description": "Whether or not the user can configure his modem via OVH Interface (will lock telnet and local HTTP configuration page)"
          },
          "model": {
            "type": "string",
            "readOnly": true
          },
          "mtuSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.MTUSizeEnum"
              }
            ],
            "description": "Size of the Maximum Transmission Unit on the modem's interfaces",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "xdsl.ModemCapabilities": {
        "type": "object",
        "description": "Describe the capabilities of the Modem",
        "properties": {
          "canBeManagedByOvh": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeACS": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeBridgeMode": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeDHCP": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeDMZ": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeEasyFirewallLevel": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeFirmware": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeLAN": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeManagement": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeMtu": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangePortMapping": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeWLAN": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeWifiRadio": {
            "type": "boolean",
            "readOnly": true
          },
          "canChangeWifiSSID": {
            "type": "boolean",
            "readOnly": true
          },
          "canReboot": {
            "type": "boolean",
            "readOnly": true
          },
          "canReconfigureVoip": {
            "type": "boolean",
            "readOnly": true
          },
          "canRefreshConnectedDevices": {
            "type": "boolean",
            "readOnly": true
          },
          "canReset": {
            "type": "boolean",
            "readOnly": true
          },
          "canUseWifiRadio": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "xdsl.ModemExchangeInfo": {
        "type": "object",
        "description": "Information about modem exchange",
        "properties": {
          "canExchange": {
            "type": "boolean",
            "description": "To know if you can exchange your modem",
            "readOnly": true
          },
          "newModel": {
            "type": "string",
            "description": "Model of the new modem",
            "readOnly": true
          },
          "price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price with it's currency and textual representation",
            "readOnly": true
          },
          "priceWithTax": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price with it's currency and textual representation",
            "readOnly": true
          }
        }
      },
      "xdsl.ModemInfo": {
        "type": "object",
        "description": "Describe general information of a Modem",
        "properties": {
          "device": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.DeviceModemInfo"
              }
            ],
            "description": "Describe device information of a Modem",
            "readOnly": true
          },
          "statistics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.StatsModemInfo"
              }
            ],
            "description": "Describe statistics information of a Modem",
            "readOnly": true
          }
        }
      },
      "xdsl.MonitoringNotification": {
        "type": "object",
        "description": "Defines where and how the notifications will be sent",
        "properties": {
          "allowIncident": {
            "type": "boolean",
            "description": "Whether or not to allow notifications for generic incidents"
          },
          "downThreshold": {
            "type": "integer",
            "description": "The number of seconds the access has to be down to trigger an alert"
          },
          "email": {
            "type": "string",
            "description": "The e-mail address, if type is mail",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether to enable or not"
          },
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.monitoringNotifications.FrequencyEnum"
              }
            ],
            "description": "Frequency between notifications."
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "phone": {
            "type": "string",
            "description": "The phone number, if type is sms",
            "nullable": true
          },
          "smsAccount": {
            "type": "string",
            "description": "The SMS account which will be debited for each sent SMS, if the type is sms",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.monitoringNotifications.TypeEnum"
              }
            ],
            "readOnly": true
          }
        }
      },
      "xdsl.Offer": {
        "type": "object",
        "description": "Details of a provider",
        "properties": {
          "code": {
            "type": "string",
            "description": "Offer code",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Offer name",
            "readOnly": true
          }
        }
      },
      "xdsl.Ont": {
        "type": "object",
        "description": "Access ONT information",
        "properties": {
          "mac": {
            "type": "string",
            "description": "MAC address of the device",
            "readOnly": true
          },
          "serial": {
            "type": "string",
            "description": "Serial of the device",
            "readOnly": true
          }
        }
      },
      "xdsl.OperatorTypeEnum": {
        "type": "string",
        "description": "Operators",
        "enum": [
          "collect",
          "kosc",
          "ovh"
        ]
      },
      "xdsl.PendingAction": {
        "type": "object",
        "description": "Scheduled action before the next renewal of the service",
        "properties": {
          "action": {
            "type": "string",
            "readOnly": true
          },
          "dateTodo": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "xdsl.PortMapping": {
        "type": "object",
        "description": "Port Mappings",
        "properties": {
          "allowedRemoteIp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "An ip which will access to the defined rule. Default : no restriction applied",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the Port Mapping",
            "nullable": true
          },
          "externalPortEnd": {
            "type": "integer",
            "description": "The last port of the interval on the External Client that will get the connections",
            "nullable": true
          },
          "externalPortStart": {
            "type": "integer",
            "description": "External Port that the modem will listen on. List of externalPorts not available for now in the API : 8, 21, 68, 5060, 21800-21805, 51005"
          },
          "id": {
            "type": "integer",
            "description": "ID of the port mapping entry",
            "readOnly": true
          },
          "internalClient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "internalPort": {
            "type": "integer",
            "description": "The port on the Internal Client that will get the connections"
          },
          "internalPortEnd": {
            "type": "integer",
            "description": "The last port of the interval on the Internal Client that will get the connections",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the port mapping entry",
            "readOnly": true
          },
          "protocol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.ProtocolTypeEnum"
              }
            ],
            "description": "Type of protocol for the Port Mapping"
          },
          "taskId": {
            "type": "integer",
            "description": "ID of the ongoing todo (NULL if none)",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.Provider": {
        "type": "object",
        "description": "Details of a provider",
        "properties": {
          "code": {
            "type": "string",
            "description": "Provider code",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Provider name",
            "readOnly": true
          }
        }
      },
      "xdsl.ProviderEnum": {
        "type": "string",
        "description": "The providers",
        "enum": [
          "axione",
          "bouygues",
          "ft",
          "ftBySfr",
          "kosc",
          "koscDeg",
          "ovh",
          "sfr"
        ]
      },
      "xdsl.RadiusConnectionLog": {
        "type": "object",
        "description": "Log entry of an auth attempt to the radius server",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "login": {
            "type": "string",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "state": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "xdsl.ResiliationFollowUpDetail": {
        "type": "object",
        "description": "Details about the resiliation",
        "properties": {
          "dateTodo": {
            "type": "string",
            "description": "Date when the resiliation will take effect",
            "format": "date-time",
            "readOnly": true
          },
          "needModemReturn": {
            "type": "boolean",
            "description": "If the customer needs to return his modem",
            "readOnly": true
          },
          "registrationDate": {
            "type": "string",
            "description": "Date when the resiliation was done",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Status of the resiliation",
            "readOnly": true
          }
        }
      },
      "xdsl.ResiliationReasonEnum": {
        "type": "string",
        "description": "Reason of a resiliation",
        "enum": [
          "addressMove",
          "billingProblems",
          "cessationOfActivity",
          "changeOfTerms",
          "ftth",
          "goToCompetitor",
          "other",
          "technicalProblems"
        ]
      },
      "xdsl.ResiliationSurvey": {
        "type": "object",
        "description": "Information about the reason for the resiliation",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment about this resiliation",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ResiliationReasonEnum"
              }
            ],
            "description": "Reason of a resiliation",
            "readOnly": true
          }
        }
      },
      "xdsl.ResiliationTerms": {
        "type": "object",
        "description": "Show the resiliation terms",
        "properties": {
          "due": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price with it's currency and textual representation",
            "readOnly": true
          },
          "engageDate": {
            "type": "string",
            "description": "Date until which the customer is engaged",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "minResiliationDate": {
            "type": "string",
            "description": "Minumum resiliationDate",
            "format": "date-time",
            "readOnly": true
          },
          "resiliationDate": {
            "type": "string",
            "description": "Date at which the access will be resiliated",
            "format": "date-time",
            "readOnly": true
          },
          "resiliationReasons": {
            "type": "array",
            "description": "List of available resiliation reasons",
            "items": {
              "$ref": "#/components/schemas/xdsl.ResiliationReasonEnum"
            },
            "readOnly": true
          }
        }
      },
      "xdsl.ServiceStatusEnum": {
        "type": "string",
        "description": "Status of the service",
        "enum": [
          "disabled",
          "enabled"
        ]
      },
      "xdsl.StatisticsPeriodEnum": {
        "type": "string",
        "description": "Periods for statistics.",
        "enum": [
          "daily",
          "monthly",
          "preview",
          "weekly",
          "yearly"
        ]
      },
      "xdsl.StatsModemInfo": {
        "type": "object",
        "description": "Describe statistics information of a Modem",
        "properties": {
          "connectionUptime": {
            "type": "integer",
            "description": "Connection uptime",
            "readOnly": true
          },
          "crcError": {
            "type": "integer",
            "description": "Amount of CRC error detected",
            "readOnly": true
          },
          "deviceUptime": {
            "type": "integer",
            "description": "Modem uptime",
            "readOnly": true
          },
          "downstreamAttenuation": {
            "type": "number",
            "description": "Downstream attenuation",
            "readOnly": true
          },
          "downstreamMargin": {
            "type": "number",
            "description": "Downstream margin",
            "readOnly": true
          },
          "downstreamSync": {
            "type": "number",
            "description": "Downstream synchronization",
            "readOnly": true
          },
          "fecError": {
            "type": "integer",
            "description": "Amount of FEC error detected",
            "readOnly": true
          },
          "hecError": {
            "type": "integer",
            "description": "Amount of HEC error detected",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Time of last refresh",
            "format": "date-time",
            "readOnly": true
          },
          "modulation": {
            "type": "string",
            "description": "Line modulation used",
            "readOnly": true
          },
          "quarterHourStart": {
            "type": "integer",
            "description": "Count from last refresh in seconds",
            "readOnly": true
          },
          "syncUptime": {
            "type": "integer",
            "description": "Synchronization uptime",
            "readOnly": true
          },
          "upstreamAttenuation": {
            "type": "number",
            "description": "Upstream attenuation",
            "readOnly": true
          },
          "upstreamMargin": {
            "type": "number",
            "description": "Upstream margin",
            "readOnly": true
          },
          "upstreamSync": {
            "type": "number",
            "description": "Upstream synchronization",
            "readOnly": true
          }
        }
      },
      "xdsl.Task": {
        "type": "object",
        "description": "Describes the current status of a task",
        "properties": {
          "function": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.TaskStatusEnum"
              }
            ],
            "readOnly": true
          },
          "todoDate": {
            "type": "string",
            "description": "Date when the action will start",
            "format": "date-time",
            "readOnly": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "xdsl.TaskStatusEnum": {
        "type": "string",
        "description": "Status of a task.",
        "enum": [
          "cancelled",
          "doing",
          "done",
          "error",
          "problem",
          "todo"
        ]
      },
      "xdsl.TemplateModem": {
        "type": "object",
        "description": "Modem Template",
        "properties": {
          "DHCP": {
            "type": "array",
            "description": "List of DHCP for this template",
            "items": {
              "$ref": "#/components/schemas/xdsl.templateModem.DHCP"
            },
            "readOnly": true
          },
          "LAN": {
            "type": "array",
            "description": "List of LAN for this template",
            "items": {
              "$ref": "#/components/schemas/xdsl.templateModem.LAN"
            },
            "readOnly": true
          },
          "WLAN": {
            "type": "array",
            "description": "List of WLAN for this template",
            "items": {
              "$ref": "#/components/schemas/xdsl.templateModem.WLAN"
            },
            "readOnly": true
          },
          "capabilities": {
            "type": "string",
            "description": "Parameters capabilities. Lists what can be applied from this template",
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "Template creation date",
            "format": "date-time",
            "readOnly": true
          },
          "dmzIP": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP Address of the DMZ",
            "nullable": true,
            "readOnly": true
          },
          "mtuSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.MTUSizeEnum"
              }
            ],
            "description": "Size of the Maximum Transmission Unit on the modem's interfaces",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the Modem Template",
            "readOnly": true
          },
          "parametersToIgnore": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.templateModem.ParametersToIgnore"
              }
            ],
            "description": "Do not apply these parameters from template. You can use parametersCapabilities to know availability",
            "nullable": true
          },
          "portMapping": {
            "type": "array",
            "description": "List of PortMapping for this template",
            "items": {
              "$ref": "#/components/schemas/xdsl.templateModem.PortMapping"
            },
            "readOnly": true
          }
        }
      },
      "xdsl.TimestampAndValue": {
        "type": "object",
        "description": "A value associated to a timestamp",
        "properties": {
          "timestamp": {
            "type": "integer",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.WLAN": {
        "type": "object",
        "description": "WLAN Configuration of the Modem",
        "properties": {
          "SSID": {
            "type": "string",
            "description": "Service Set Identifier of the WLAN interface"
          },
          "SSIDAdvertisementEnabled": {
            "type": "boolean",
            "description": "Hide or show the Wifi"
          },
          "bandSteering": {
            "type": "boolean",
            "description": "Indicate if frequencies 2.4GHz and 5GHz are agregated",
            "readOnly": true
          },
          "channel": {
            "type": "integer",
            "description": "Choice of a channel (When chosen, channelMode is set to Manual)"
          },
          "channelMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.ChannelModeEnum"
              }
            ],
            "description": "How the WiFi channel is selected"
          },
          "enabled": {
            "type": "boolean",
            "description": "Wifi state"
          },
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.FrequencyEnum"
              }
            ],
            "description": "Frequency (2.4GHz | 5GHz)",
            "readOnly": true
          },
          "guest": {
            "type": "boolean",
            "description": "Indicate if it is normal access wifi or guest wifi",
            "readOnly": true
          },
          "securityKey": {
            "type": "string",
            "description": "WiFi security key"
          },
          "securityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.SecurityTypeEnum"
              }
            ],
            "description": "Type of WLAN security protection"
          },
          "taskId": {
            "type": "integer",
            "description": "ID of the ongoing todo (NULL if none)",
            "nullable": true,
            "readOnly": true
          },
          "wifiName": {
            "type": "string",
            "description": "Name of the Wifi",
            "readOnly": true
          }
        }
      },
      "xdsl.WLANFrequencyEnum": {
        "type": "string",
        "description": "Frequency of WLAN",
        "enum": [
          "2.4GHz",
          "5GHz"
        ]
      },
      "xdsl.antiSpam.AntiSpamStatusEnum": {
        "type": "string",
        "description": "AntiSpam status",
        "enum": [
          "block",
          "done",
          "new",
          "unblock",
          "warn"
        ]
      },
      "xdsl.antiSpam.EvidencesInfo": {
        "type": "object",
        "description": "List of evidences",
        "properties": {
          "error": {
            "type": "string",
            "description": "AsyncTask detailed error",
            "nullable": true,
            "readOnly": true
          },
          "result": {
            "type": "array",
            "description": "Table with evidences stored on PCS",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/xdsl.antiSpam.EvidencesInfoDetail"
            },
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.antiSpam.EvidencesInfoStatusEnum"
              }
            ],
            "description": "Evidences AsyncTask status",
            "readOnly": true
          }
        }
      },
      "xdsl.antiSpam.EvidencesInfoDetail": {
        "type": "object",
        "description": "detail on evidences stored on PCS",
        "properties": {
          "date": {
            "type": "string",
            "description": "File date on the PCS",
            "format": "date-time",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "description": "File name on the PCS",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "description": "Temporary URL to access file",
            "readOnly": true
          }
        }
      },
      "xdsl.antiSpam.EvidencesInfoStatusEnum": {
        "type": "string",
        "description": "Evidences AsyncTask status",
        "enum": [
          "error",
          "ok",
          "pending"
        ]
      },
      "xdsl.applyTemplateToModem.post": {
        "type": "object",
        "description": "xdsl.applyTemplateToModem.post",
        "properties": {
          "templateName": {
            "type": "string",
            "description": "Modem Template Name"
          }
        },
        "required": [
          "templateName"
        ]
      },
      "xdsl.changeContact.post": {
        "type": "object",
        "description": "xdsl.changeContact.post",
        "properties": {
          "contactAdmin": {
            "type": "string",
            "description": "The contact to set as admin contact"
          },
          "contactBilling": {
            "type": "string",
            "description": "The contact to set as billing contact"
          },
          "contactTech": {
            "type": "string",
            "description": "The contact to set as tech contact"
          }
        }
      },
      "xdsl.connectedDevice": {
        "type": "object",
        "description": "Connected Device",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "The state of this device on the modem",
            "readOnly": true
          },
          "addressSource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.ConnectedDeviceAddressSourceEnum"
              }
            ],
            "description": "How did the device got its IP address",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Host name given by the device to the modem",
            "readOnly": true
          },
          "informationDate": {
            "type": "string",
            "description": "The date time of the last update of thoses information",
            "format": "date-time",
            "readOnly": true
          },
          "interfaceType": {
            "type": "string",
            "description": "On which interface is connected the device",
            "readOnly": true
          },
          "ipAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "The IP address of the device",
            "readOnly": true
          },
          "leaseTimeRemaining": {
            "type": "integer",
            "description": "The remaining time in seconds of the DHCP lease of this device (-1 means infinite)",
            "readOnly": true
          },
          "macAddress": {
            "type": "string",
            "description": "MAC address of the device",
            "readOnly": true
          }
        }
      },
      "xdsl.email.pro.Task": {
        "type": "object",
        "description": "Task Struct",
        "properties": {
          "finishDate": {
            "type": "string",
            "description": "Finished date of the task",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "function": {
            "type": "string",
            "description": "Function of the task",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.email.pro.TaskStatusEnum"
              }
            ],
            "description": "Status of an Email Pro task.",
            "readOnly": true
          },
          "todoDate": {
            "type": "string",
            "description": "Todo date of the task",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "xdsl.email.pro.TaskStatusEnum": {
        "type": "string",
        "description": "Status of an Email Pro task.",
        "enum": [
          "cancelled",
          "doing",
          "done",
          "error",
          "todo"
        ]
      },
      "xdsl.email.pro.changePassword.post": {
        "type": "object",
        "description": "xdsl.email.pro.changePassword.post",
        "properties": {
          "password": {
            "type": "string",
            "description": "New email password",
            "format": "password"
          }
        },
        "required": [
          "password"
        ]
      },
      "xdsl.ipv6.post": {
        "type": "object",
        "description": "xdsl.ipv6.post",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Should the IPv6 be enabled ?"
          }
        },
        "required": [
          "enabled"
        ]
      },
      "xdsl.lineDiagnostic.Answers": {
        "type": "object",
        "description": "Customer answers for line diagnostic",
        "properties": {
          "bandwidthTestUnit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.BandwidthTestUnitEnum"
              }
            ],
            "description": "bandwidth unit for proof.ovh.net test values",
            "nullable": true,
            "readOnly": true
          },
          "comment": {
            "type": "string",
            "description": "comment will contains all information needed for intervention and about your access problem",
            "nullable": true,
            "readOnly": true
          },
          "conditionsAccepted": {
            "type": "boolean",
            "description": "customer knows that he can be charged (150 euros HT) if he is responsible for the problem or if tests have not been done correctly ?",
            "nullable": true,
            "readOnly": true
          },
          "contactPhone": {
            "type": "string",
            "description": "customer's phone number",
            "nullable": true,
            "readOnly": true
          },
          "datetimeOfAppearance": {
            "type": "string",
            "description": "approximative datetime of problem happening",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "downloadBandwidthTest": {
            "type": "integer",
            "description": "bandwidth download value on proof.ovh.net test",
            "nullable": true,
            "readOnly": true
          },
          "endAfternoonHours": {
            "type": "string",
            "description": "afternoon closing information or time for the site",
            "nullable": true,
            "readOnly": true
          },
          "endMorningHours": {
            "type": "string",
            "description": "morning closing information or time for the site",
            "nullable": true,
            "readOnly": true
          },
          "followBySms": {
            "type": "boolean",
            "description": "indicate if customer wants to be informed by sms",
            "nullable": true,
            "readOnly": true
          },
          "hasModemKeptSynchronization": {
            "type": "boolean",
            "description": "Has modem kept his synchronization during line port reset ?",
            "nullable": true,
            "readOnly": true
          },
          "idAppointment": {
            "type": "integer",
            "description": "id of appointment chosen (\"possibleValues\" contains choices list with id)",
            "nullable": true,
            "readOnly": true
          },
          "individualSite": {
            "type": "boolean",
            "description": "is non-professional site ?",
            "nullable": true,
            "readOnly": true
          },
          "modemIsSynchronized": {
            "type": "boolean",
            "description": "Is modem synchronized ? (whatever internet connection)",
            "nullable": true,
            "readOnly": true
          },
          "modemMac": {
            "type": "string",
            "description": "modem mac address",
            "nullable": true,
            "readOnly": true
          },
          "modemStillSynchronized": {
            "type": "boolean",
            "description": "Modem still synchronized ? Please check once again.",
            "nullable": true,
            "readOnly": true
          },
          "modemType": {
            "type": "string",
            "description": "modem brand and reference",
            "nullable": true,
            "readOnly": true
          },
          "ovhTicket": {
            "type": "string",
            "description": "Ovh ticket name or ticket ID, only if a ticket is already opened for this problem",
            "nullable": true,
            "readOnly": true
          },
          "problemType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.ProblemTypeEnum"
              }
            ],
            "description": "Problem Type on DSL connection",
            "nullable": true,
            "readOnly": true
          },
          "resolvedAfterTests": {
            "type": "boolean",
            "description": "is access problem solved ?",
            "nullable": true,
            "readOnly": true
          },
          "secureSite": {
            "type": "boolean",
            "description": "is secure site ?",
            "nullable": true,
            "readOnly": true
          },
          "severalInternetConnections": {
            "type": "boolean",
            "description": "Has customer several internal connections ? (on the same place)",
            "nullable": true,
            "readOnly": true
          },
          "siteClosedDays": {
            "type": "string",
            "description": "days or period where site access is not possible",
            "nullable": true,
            "readOnly": true
          },
          "siteDigicode": {
            "type": "string",
            "description": "digicode for site entrance",
            "nullable": true,
            "readOnly": true
          },
          "siteOpening": {
            "type": "string",
            "description": "site opening hours or information",
            "nullable": true,
            "readOnly": true
          },
          "startAfternoonHours": {
            "type": "string",
            "description": "afternoon opening information or time for the site",
            "nullable": true,
            "readOnly": true
          },
          "startMorningHours": {
            "type": "string",
            "description": "morning opening information or time for the site",
            "nullable": true,
            "readOnly": true
          },
          "uploadBandwidthTest": {
            "type": "integer",
            "description": "bandwidth upload value on proof.ovh.net test",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.BandwidthTestUnitEnum": {
        "type": "string",
        "description": "bandwidth unit for proof.ovh.net test values",
        "enum": [
          "Kbps",
          "Mbps"
        ]
      },
      "xdsl.lineDiagnostic.ConnectionInformations": {
        "type": "object",
        "description": "Informations directly get on DSLAM or Modem",
        "properties": {
          "crcError": {
            "type": "integer",
            "description": "Amount of CRC error detected",
            "nullable": true,
            "readOnly": true
          },
          "downstreamAttenuation": {
            "type": "number",
            "description": "Downstream attenuation",
            "nullable": true,
            "readOnly": true
          },
          "downstreamMargin": {
            "type": "number",
            "description": "Downstream margin",
            "nullable": true,
            "readOnly": true
          },
          "downstreamSync": {
            "type": "number",
            "description": "Downstream synchronization",
            "nullable": true,
            "readOnly": true
          },
          "ifName": {
            "type": "string",
            "description": "Modem interface name",
            "nullable": true,
            "readOnly": true
          },
          "profile": {
            "type": "string",
            "description": "Profile on the DSLAM",
            "nullable": true,
            "readOnly": true
          },
          "upstreamAttenuation": {
            "type": "number",
            "description": "Upstream attenuation",
            "nullable": true,
            "readOnly": true
          },
          "upstreamMargin": {
            "type": "number",
            "description": "Upstream margin",
            "nullable": true,
            "readOnly": true
          },
          "upstreamSync": {
            "type": "number",
            "description": "Upstream synchronization",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.CustomerActionToDo": {
        "type": "object",
        "description": "Customer action to do",
        "properties": {
          "description": {
            "type": "string",
            "description": "action's description",
            "readOnly": true
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.CustomerActionsEnum"
              }
            ],
            "description": "Customer possible actions",
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.CustomerActionsEnum": {
        "type": "string",
        "description": "Customer possible actions",
        "enum": [
          "bePreparedToCheckModemSynchronization",
          "changeDslFilterAndPlugInDti",
          "changeExtensionCable",
          "changeProfile",
          "checkConnectionCable",
          "checkConnectionLoginAndParameters",
          "checkFilter",
          "connectModemToOtherPlugs",
          "neutralTest",
          "rebootModem",
          "resetModem",
          "unplugEveryModems",
          "unplugModem"
        ]
      },
      "xdsl.lineDiagnostic.Diagnostic": {
        "type": "object",
        "description": "Diagnostic status and information",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.DiagnosticData"
              }
            ],
            "description": "Diagnostic data and information",
            "readOnly": true
          },
          "faultType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.FaultTypeEnum"
              }
            ],
            "description": "Line diagnostic fault type",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Diagnostic id",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.DiagnosticStatusEnum"
              }
            ],
            "description": "Diagnostic status possible values",
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.DiagnosticData": {
        "type": "object",
        "description": "Diagnostic data and information",
        "properties": {
          "actionsDone": {
            "type": "array",
            "description": "List of actions already done by customer",
            "items": {
              "$ref": "#/components/schemas/xdsl.lineDiagnostic.CustomerActionsEnum"
            },
            "readOnly": true
          },
          "actionsToDo": {
            "type": "array",
            "description": "List of actions that must be done by customer",
            "items": {
              "$ref": "#/components/schemas/xdsl.lineDiagnostic.CustomerActionToDo"
            },
            "readOnly": true
          },
          "answers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.Answers"
              }
            ],
            "description": "Customer answers for line diagnostic",
            "readOnly": true
          },
          "comment": {
            "type": "string",
            "description": "Diagnostic comment. Can be update during any diagnostic step",
            "nullable": true,
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "Diagnostic creation date",
            "format": "date-time",
            "readOnly": true
          },
          "diagnosticDoneDate": {
            "type": "string",
            "description": "End of diagnostic date. Will be null until problem totally identified",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "error": {
            "type": "string",
            "description": "Error message",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Last diagnostic update date",
            "format": "date-time",
            "readOnly": true
          },
          "lineDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.LineDetails"
              }
            ],
            "description": "Line information",
            "readOnly": true
          },
          "robotAction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.RobotActionsEnum"
              }
            ],
            "description": "Current or last robot action",
            "nullable": true,
            "readOnly": true
          },
          "seltTest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.SeltResult"
              }
            ],
            "description": "Customer answers for line diagnostic",
            "readOnly": true
          },
          "timeout": {
            "type": "integer",
            "description": "Diagnostic timeout in minutes. Any action restart timeout",
            "readOnly": true
          },
          "toAnswer": {
            "type": "array",
            "description": "List of questions that must be answered by customer",
            "items": {
              "$ref": "#/components/schemas/xdsl.lineDiagnostic.Question"
            },
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.DiagnosticStatusEnum": {
        "type": "string",
        "description": "Diagnostic status possible values",
        "enum": [
          "cancelled",
          "connectionProblem",
          "genericIncidentPending",
          "haveToConnectModemOnTheRightPlug",
          "init",
          "interventionRequested",
          "noBandwidthFault",
          "noProblemAnymore",
          "noSyncFaultDiagnosticRequired",
          "problem",
          "resolvedAfterTests",
          "sleeping",
          "validationRefused",
          "waitingHuman",
          "waitingRobot",
          "waitingValidation"
        ]
      },
      "xdsl.lineDiagnostic.FaultTypeEnum": {
        "type": "string",
        "description": "Line diagnostic fault type",
        "enum": [
          "alignment",
          "noSync",
          "syncLossOrLowBandwidth",
          "unknown"
        ]
      },
      "xdsl.lineDiagnostic.LineCapabilities": {
        "type": "object",
        "description": "Theoretical line capabilities",
        "properties": {
          "down": {
            "type": "number",
            "description": "Theoretical Downstream synchronization ",
            "nullable": true,
            "readOnly": true
          },
          "mitigation": {
            "type": "string",
            "description": "Theoretical line mitigation",
            "nullable": true,
            "readOnly": true
          },
          "ping": {
            "type": "number",
            "description": "Theoretical ping",
            "nullable": true,
            "readOnly": true
          },
          "up": {
            "type": "number",
            "description": "Theoretical Upstream synchronization ",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.LineDetails": {
        "type": "object",
        "description": "Line information",
        "properties": {
          "accessName": {
            "type": "string",
            "description": "access name",
            "readOnly": true
          },
          "accessPing": {
            "type": "boolean",
            "description": "Access IP ping or not",
            "nullable": true,
            "readOnly": true
          },
          "address": {
            "type": "string",
            "description": "address of the access",
            "nullable": true,
            "readOnly": true
          },
          "connectionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.ConnectionInformations"
              }
            ],
            "description": "information directly get on DSLAM or Modem",
            "nullable": true,
            "readOnly": true
          },
          "contactPhone": {
            "type": "string",
            "description": "customer phone number for contact",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "custom access description",
            "nullable": true,
            "readOnly": true
          },
          "dslamIsSynchronized": {
            "type": "boolean",
            "description": "DSLAM is synchronized or not",
            "nullable": true,
            "readOnly": true
          },
          "gtr": {
            "type": "boolean",
            "description": "is GTR access or not",
            "readOnly": true
          },
          "length": {
            "type": "integer",
            "description": "Line length in meters",
            "readOnly": true
          },
          "lineCapabilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.LineCapabilities"
              }
            ],
            "description": "Theoretical line capabilities",
            "nullable": true,
            "readOnly": true
          },
          "lineType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.DslTypeEnum"
              }
            ],
            "description": "Possible DSL technologies",
            "readOnly": true
          },
          "nra": {
            "type": "string",
            "description": "NRA name",
            "nullable": true,
            "readOnly": true
          },
          "number": {
            "type": "string",
            "description": "line number",
            "readOnly": true
          },
          "operator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ProviderEnum"
              }
            ],
            "description": "The providers",
            "readOnly": true
          },
          "sections": {
            "type": "array",
            "description": "cables sections details",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/xdsl.lineDiagnostic.Section"
            },
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.PossibleValue": {
        "type": "object",
        "description": "possible value for specific answer",
        "properties": {
          "id": {
            "type": "integer",
            "description": "answer id",
            "nullable": true,
            "readOnly": true
          },
          "label": {
            "type": "string",
            "description": "answer choice string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "description": "answer choice value",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.ProblemTypeEnum": {
        "type": "string",
        "description": "Possible customer questions",
        "enum": [
          "lowBandwidth",
          "syncLoss"
        ]
      },
      "xdsl.lineDiagnostic.Question": {
        "type": "object",
        "description": "Question to customer",
        "properties": {
          "defaultValue": {
            "type": "string",
            "description": "question description",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "question description",
            "readOnly": true
          },
          "enumValues": {
            "type": "array",
            "description": "available values for enum",
            "nullable": true,
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.QuestionsEnum"
              }
            ],
            "description": "Possible customer questions",
            "readOnly": true
          },
          "possibleValues": {
            "type": "array",
            "description": "list of possible values",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/xdsl.lineDiagnostic.PossibleValue"
            },
            "readOnly": true
          },
          "required": {
            "type": "boolean",
            "description": "is a required question",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "answer type",
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.QuestionsEnum": {
        "type": "string",
        "description": "Possible customer questions",
        "enum": [
          "bandwidthTestUnit",
          "comment",
          "conditionsAccepted",
          "contactPhone",
          "datetimeOfAppearance",
          "downloadBandwidthTest",
          "endAfternoonHours",
          "endMorningHours",
          "followBySms",
          "hasModemKeptSynchronization",
          "idAppointment",
          "individualSite",
          "modemIsSynchronized",
          "modemMac",
          "modemStillSynchronized",
          "modemType",
          "ovhTicket",
          "problemType",
          "resolvedAfterTests",
          "secureSite",
          "severalInternetConnections",
          "siteClosedDays",
          "siteDigicode",
          "siteOpening",
          "startAfternoonHours",
          "startMorningHours",
          "uploadBandwidthTest"
        ]
      },
      "xdsl.lineDiagnostic.RobotActionsEnum": {
        "type": "string",
        "description": "Diagnostic robot possible actions",
        "enum": [
          "alignmentLockTest",
          "alignmentResetTest",
          "alignmentTestResult",
          "checkCustomerTicket",
          "checkIfAccessPing",
          "checkIfResolvedAfterConnectionTests",
          "checkIfResolvedAfterInstallationCheck",
          "checkIfResolvedAfterTests",
          "checkIfSeveralConnections",
          "checkInstallation",
          "checkProblem",
          "checkSynchronizationWithoutOtherModems",
          "customerPrelocChecks",
          "findProblem",
          "installationCheck",
          "lockUnlock",
          "needToRequestMonitoring",
          "needToRequestOperatorIntervention",
          "needToRequestOvhIntervention",
          "requestMonitoring",
          "requestOperatorIntervention",
          "requestOvhIntervention",
          "seltTest"
        ]
      },
      "xdsl.lineDiagnostic.Section": {
        "type": "object",
        "description": "Cables section details",
        "properties": {
          "length": {
            "type": "integer",
            "description": "cables length in meters",
            "readOnly": true
          },
          "section": {
            "type": "integer",
            "description": "cables section in millimeters",
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.SeltPrelocEnum": {
        "type": "string",
        "description": "Possible SELT test prelocalizations",
        "enum": [
          "CUST",
          "DSLAM",
          "LINE",
          "RE"
        ]
      },
      "xdsl.lineDiagnostic.SeltResult": {
        "type": "object",
        "description": "Customer answers for line diagnostic",
        "properties": {
          "date": {
            "type": "string",
            "description": "SELT test running date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "distance": {
            "type": "integer",
            "description": "Distance of the problem identified on the line (by SELT test), from NRA to customer",
            "nullable": true,
            "readOnly": true
          },
          "preloc": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.SeltPrelocEnum"
              }
            ],
            "description": "Prelocalization of the problem",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.SeltStateEnum"
              }
            ],
            "description": "Problem type identified by SELT test",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.SeltStatusEnum"
              }
            ],
            "description": "SELT test status",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.lineDiagnostic.SeltStateEnum": {
        "type": "string",
        "description": "Possible SELT test states",
        "enum": [
          "open",
          "short",
          "synced",
          "unknown"
        ]
      },
      "xdsl.lineDiagnostic.SeltStatusEnum": {
        "type": "string",
        "description": "Possible SELT test status",
        "enum": [
          "failed",
          "notAvailable",
          "ok"
        ]
      },
      "xdsl.lines.diagnostic.run.post": {
        "type": "object",
        "description": "xdsl.lines.diagnostic.run.post",
        "properties": {
          "actionsDone": {
            "type": "array",
            "description": "Customer possible actions",
            "items": {
              "$ref": "#/components/schemas/xdsl.lineDiagnostic.CustomerActionsEnum"
            }
          },
          "answers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.Answers"
              }
            ],
            "description": "Customer answers for line diagnostic"
          },
          "faultType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.lineDiagnostic.FaultTypeEnum"
              }
            ],
            "description": "Line diagnostic fault type"
          }
        },
        "required": [
          "faultType"
        ]
      },
      "xdsl.lines.dslamPort.changeProfile.post": {
        "type": "object",
        "description": "xdsl.lines.dslamPort.changeProfile.post",
        "properties": {
          "dslamProfileId": {
            "type": "integer",
            "description": "The id of the xdsl.DslamLineProfile"
          }
        },
        "required": [
          "dslamProfileId"
        ]
      },
      "xdsl.mailSending.post": {
        "type": "object",
        "description": "xdsl.mailSending.post",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.mailSendingStatusEnum"
              }
            ],
            "description": "Status allowed for mail sending"
          }
        },
        "required": [
          "status"
        ]
      },
      "xdsl.mailSendingAccessStatusEnum": {
        "type": "string",
        "description": "Status allowed for mail sending",
        "enum": [
          "blockedForSpam",
          "disabled",
          "enabled"
        ]
      },
      "xdsl.mailSendingStatusEnum": {
        "type": "string",
        "description": "Status allowed for mail sending",
        "enum": [
          "disabled",
          "enabled"
        ]
      },
      "xdsl.modem.blocIp.post": {
        "type": "object",
        "description": "xdsl.modem.blocIp.post",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
              }
            ],
            "description": "Status of the service"
          }
        },
        "required": [
          "status"
        ]
      },
      "xdsl.modem.callWaiting.post": {
        "type": "object",
        "description": "xdsl.modem.callWaiting.post",
        "properties": {
          "callWaiting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
              }
            ],
            "description": "Status of the service"
          }
        },
        "required": [
          "callWaiting"
        ]
      },
      "xdsl.modem.comfortExchange.post": {
        "type": "object",
        "description": "xdsl.modem.comfortExchange.post",
        "properties": {
          "contactShipping": {
            "type": "string",
            "description": "Customer identifier for shipping address. By default Internet access address will be used. Allowed values are nichandle or «/me/contact/xyz»"
          }
        }
      },
      "xdsl.modem.contentSharing.post": {
        "type": "object",
        "description": "xdsl.modem.contentSharing.post",
        "properties": {
          "contentSharing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
              }
            ],
            "description": "Status of the service"
          }
        },
        "required": [
          "contentSharing"
        ]
      },
      "xdsl.modem.firmware.post": {
        "type": "object",
        "description": "xdsl.modem.firmware.post",
        "properties": {
          "firmware": {
            "type": "string",
            "description": "The firmware version to upgrade to"
          },
          "todoDate": {
            "type": "string",
            "description": "Date of execution, default is now",
            "format": "date-time"
          }
        },
        "required": [
          "firmware"
        ]
      },
      "xdsl.modem.ftp.post": {
        "type": "object",
        "description": "xdsl.modem.ftp.post",
        "properties": {
          "ftp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
              }
            ],
            "description": "Status of the service"
          }
        },
        "required": [
          "ftp"
        ]
      },
      "xdsl.modem.ipsecAlg.post": {
        "type": "object",
        "description": "xdsl.modem.ipsecAlg.post",
        "properties": {
          "ipsecAlg": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
              }
            ],
            "description": "Status of the service"
          }
        },
        "required": [
          "ipsecAlg"
        ]
      },
      "xdsl.modem.lan.dhcp.DHCPStaticAddresses.post": {
        "type": "object",
        "description": "xdsl.modem.lan.dhcp.DHCPStaticAddresses.post",
        "properties": {
          "IPAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "MACAddress": {
            "type": "string",
            "description": "The MAC address of the device"
          },
          "name": {
            "type": "string",
            "description": "Name of the DHCP static lease"
          }
        },
        "required": [
          "IPAddress",
          "MACAddress"
        ]
      },
      "xdsl.modem.mesh.put": {
        "type": "object",
        "description": "xdsl.modem.mesh.put",
        "properties": {
          "wifiMesh": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
              }
            ],
            "description": "Status of the mesh"
          }
        },
        "required": [
          "wifiMesh"
        ]
      },
      "xdsl.modem.onessid.put": {
        "type": "object",
        "description": "xdsl.modem.onessid.put",
        "properties": {
          "wifiOneSsid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
              }
            ],
            "description": "Status of the onessid"
          }
        },
        "required": [
          "wifiOneSsid"
        ]
      },
      "xdsl.modem.portMappings.post": {
        "type": "object",
        "description": "xdsl.modem.portMappings.post",
        "properties": {
          "allowedRemoteIp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "IPv4 address (e.g., 192.0.2.0)"
          },
          "description": {
            "type": "string",
            "description": "Description of the Port Mapping"
          },
          "externalPortEnd": {
            "type": "integer",
            "description": "The last port of the interval on the External Client that will get the connections"
          },
          "externalPortStart": {
            "type": "integer",
            "description": "External Port that the modem will listen on"
          },
          "internalClient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)"
          },
          "internalPort": {
            "type": "integer",
            "description": "The port on the Internal Client that will get the connections"
          },
          "internalPortEnd": {
            "type": "integer",
            "description": "The last port of the interval on the Internal Client that will get the connections"
          },
          "name": {
            "type": "string",
            "description": "Name of the port mapping entry"
          },
          "protocol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.ProtocolTypeEnum"
              }
            ],
            "description": "Type of protocol for the Port Mapping"
          }
        },
        "required": [
          "externalPortStart",
          "internalClient",
          "internalPort",
          "name",
          "protocol"
        ]
      },
      "xdsl.modem.reboot.post": {
        "type": "object",
        "description": "xdsl.modem.reboot.post",
        "properties": {
          "todoDate": {
            "type": "string",
            "description": "Date when the reboot will start",
            "format": "date-time"
          }
        }
      },
      "xdsl.modem.reset.post": {
        "type": "object",
        "description": "xdsl.modem.reset.post",
        "properties": {
          "resetOvhConfig": {
            "type": "boolean",
            "description": "Reset configuration stored in OVH databases"
          }
        }
      },
      "xdsl.modem.sipAlg.post": {
        "type": "object",
        "description": "xdsl.modem.sipAlg.post",
        "properties": {
          "sipAlg": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
              }
            ],
            "description": "Status of the service"
          }
        },
        "required": [
          "sipAlg"
        ]
      },
      "xdsl.modem.upnp.post": {
        "type": "object",
        "description": "xdsl.modem.upnp.post",
        "properties": {
          "upnp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
              }
            ],
            "description": "Status of the service"
          }
        },
        "required": [
          "upnp"
        ]
      },
      "xdsl.monitoringNotifications.FrequencyEnum": {
        "type": "string",
        "description": "Frequency between notifications.",
        "enum": [
          "1h",
          "5m",
          "6h",
          "once"
        ]
      },
      "xdsl.monitoringNotifications.TypeEnum": {
        "type": "string",
        "description": "Type of notification.",
        "enum": [
          "mail",
          "sms"
        ]
      },
      "xdsl.monitoringNotifications.post": {
        "type": "object",
        "description": "xdsl.monitoringNotifications.post",
        "properties": {
          "allowIncident": {
            "type": "boolean",
            "description": "Whether or not to allow notifications concerning generic incidents"
          },
          "downThreshold": {
            "type": "integer",
            "description": "The number of seconds the access has to be down to trigger the alert"
          },
          "email": {
            "type": "string",
            "description": "The e-mail address, if type is mail"
          },
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.monitoringNotifications.FrequencyEnum"
              }
            ],
            "description": "Frequency between notifications."
          },
          "phone": {
            "type": "string",
            "description": "The phone number, if type is sms"
          },
          "smsAccount": {
            "type": "string",
            "description": "The SMS account which will be debited for each sent SMS, if the type is sms"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.monitoringNotifications.TypeEnum"
              }
            ],
            "description": "Type of notification."
          }
        },
        "required": [
          "frequency",
          "type"
        ]
      },
      "xdsl.orderFollowup.DurationUnitEnum": {
        "type": "string",
        "description": "The duration units",
        "enum": [
          "day",
          "hour",
          "minute"
        ]
      },
      "xdsl.orderFollowup.Step": {
        "type": "object",
        "description": "A step of the order process",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "doneDate": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "durationUnit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.orderFollowup.DurationUnitEnum"
              }
            ],
            "description": "The duration units",
            "readOnly": true
          },
          "expectedDuration": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.orderFollowup.StepNameEnum"
              }
            ],
            "description": "The status of an order step",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.orderFollowup.StepStatusEnum"
              }
            ],
            "description": "The status of an order step",
            "readOnly": true
          }
        }
      },
      "xdsl.orderFollowup.StepNameEnum": {
        "type": "string",
        "description": "The status of an order step",
        "enum": [
          "accessIsOperational",
          "checkInfrastructure",
          "configureAccessOnOVH",
          "orderPayed",
          "orderReceived",
          "orderTreatment",
          "sendModem",
          "sendOrderToProvider",
          "setupCustomerPremisesEquipment",
          "waitingForProviderInstallReport",
          "waitingForWithdrawalPeriodToBeOver"
        ]
      },
      "xdsl.orderFollowup.StepStatusEnum": {
        "type": "string",
        "description": "The status of an order step",
        "enum": [
          "doing",
          "done",
          "error",
          "todo",
          "waitingCustomer"
        ]
      },
      "xdsl.orderMeeting.post": {
        "type": "object",
        "description": "xdsl.orderMeeting.post",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "Meeting end date",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "description": "Meeting start date",
            "format": "date-time"
          },
          "uiCode": {
            "type": "string",
            "description": "Meeting ui code ( code linked to the meeting returned by POST /xdsl/{serviceName}/orderMeetings )"
          }
        },
        "required": [
          "endDate",
          "startDate",
          "uiCode"
        ]
      },
      "xdsl.requestTotalDeconsolidation.post": {
        "type": "object",
        "description": "xdsl.requestTotalDeconsolidation.post",
        "properties": {
          "noPortability": {
            "type": "boolean",
            "description": "Do not port the number"
          },
          "rio": {
            "type": "string",
            "description": "A token to prove the ownership of the line number, needed to port the number"
          }
        }
      },
      "xdsl.resiliate.post": {
        "type": "object",
        "description": "xdsl.resiliate.post",
        "properties": {
          "resiliationDate": {
            "type": "string",
            "description": "The desired resiliation date",
            "format": "date-time"
          },
          "resiliationSurvey": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.ResiliationSurvey"
              }
            ],
            "description": "Information about the reason for the resiliation"
          }
        },
        "required": [
          "resiliationSurvey"
        ]
      },
      "xdsl.rma.changeType.post": {
        "type": "object",
        "description": "xdsl.rma.changeType.post",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.RmaChangeTypeEnum"
              }
            ],
            "description": "Types of return merchandise authorisation you can change to"
          }
        },
        "required": [
          "type"
        ]
      },
      "xdsl.spare.replace.post": {
        "type": "object",
        "description": "xdsl.spare.replace.post",
        "properties": {
          "domain": {
            "type": "string",
            "description": "The modem to replace by the spare"
          }
        },
        "required": [
          "domain"
        ]
      },
      "xdsl.templateModem.DHCP": {
        "type": "object",
        "description": "DHCP Configuration for Modem Template",
        "properties": {
          "defaultGateway": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)",
            "readOnly": true
          },
          "dhcpName": {
            "type": "string",
            "description": "Name of the DHCP",
            "readOnly": true
          },
          "domainName": {
            "type": "string",
            "description": "Domain name provided to the clients",
            "readOnly": true
          },
          "endAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)",
            "readOnly": true
          },
          "leaseTime": {
            "type": "integer",
            "description": "Lease time in seconds of client assigned address (-1 means infinite)",
            "readOnly": true
          },
          "primaryDNS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)",
            "readOnly": true
          },
          "secondaryDNS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "Secondary DNS servers to be given to the clients",
            "nullable": true,
            "readOnly": true
          },
          "serverEnabled": {
            "type": "boolean",
            "description": "State of the DHCP server of the modem",
            "readOnly": true
          },
          "startAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)",
            "readOnly": true
          },
          "subnetMask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)",
            "readOnly": true
          }
        }
      },
      "xdsl.templateModem.LAN": {
        "type": "object",
        "description": "LAN Configuration for Modem Template",
        "properties": {
          "IPAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)",
            "readOnly": true
          },
          "addressingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.AddressingTypeEnum"
              }
            ],
            "description": "How the modem gets its LAN IP Address",
            "readOnly": true
          },
          "lanName": {
            "type": "string",
            "description": "Name of the LAN",
            "readOnly": true
          },
          "subnetMask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)",
            "readOnly": true
          }
        }
      },
      "xdsl.templateModem.ParametersToIgnore": {
        "type": "object",
        "description": "Parameters and values to ignore when apply modem template configuration",
        "properties": {
          "LANandDHCP": {
            "type": "boolean",
            "description": "Ignore LAN and DHCP configurations",
            "nullable": true
          },
          "WLANList": {
            "type": "array",
            "description": "WLAN names list to ignore. Ignore only listed WLAN",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "dmzIP": {
            "type": "boolean",
            "description": "Ignore DMZ configuration",
            "nullable": true
          },
          "mtuSize": {
            "type": "boolean",
            "description": "Ignore MTU Size value",
            "nullable": true
          },
          "portMappingList": {
            "type": "array",
            "description": "PortMapping names list to ignore. Ignore only listed portMapping",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "xdsl.templateModem.PortMapping": {
        "type": "object",
        "description": "PortMapping Configuration for Modem Template",
        "properties": {
          "allowedRemoteIp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "An ip which will access to the defined rule. Default : no restriction applied",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of the Port Mapping",
            "nullable": true,
            "readOnly": true
          },
          "externalPortEnd": {
            "type": "integer",
            "description": "The last port of the interval on the External Client that will get the connections",
            "nullable": true,
            "readOnly": true
          },
          "externalPortStart": {
            "type": "integer",
            "description": "External Port that the modem will listen on. List of externalPorts not available for now in the API : 8, 21, 68, 5060, 21800-21805, 51005",
            "readOnly": true
          },
          "internalClient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ip"
              }
            ],
            "description": "IP address (e.g., 192.0.2.0)",
            "readOnly": true
          },
          "internalPort": {
            "type": "integer",
            "description": "The port on the Internal Client that will get the connections",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the port mapping entry",
            "readOnly": true
          },
          "protocol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.ProtocolTypeEnum"
              }
            ],
            "description": "Type of protocol for the Port Mapping",
            "readOnly": true
          }
        }
      },
      "xdsl.templateModem.SecurityTypeEnum": {
        "type": "string",
        "description": "Type of WLAN security protection",
        "enum": [
          "None",
          "WPA",
          "WPA2",
          "WPA2andWPA3",
          "WPA3",
          "WPAandWPA2"
        ]
      },
      "xdsl.templateModem.WLAN": {
        "type": "object",
        "description": "WLAN Configuration for Modem Template",
        "properties": {
          "SSID": {
            "type": "string",
            "description": "Service Set Identifier of the WLAN interface",
            "readOnly": true
          },
          "SSIDAdvertisementEnabled": {
            "type": "boolean",
            "description": "Control if Wifi is discoverable or hidden",
            "readOnly": true
          },
          "bandSteering": {
            "type": "boolean",
            "description": "Indicate if frequencies 2.4GHz and 5GHz are agregated",
            "readOnly": true
          },
          "channel": {
            "type": "integer",
            "description": "Channel number (Useless if channelMode is set to Auto)",
            "readOnly": true
          },
          "channelMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.ChannelModeEnum"
              }
            ],
            "description": "How the WiFi channel is selected",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Wifi state",
            "readOnly": true
          },
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.FrequencyEnum"
              }
            ],
            "description": "Modem frequency",
            "readOnly": true
          },
          "guest": {
            "type": "boolean",
            "description": "Indicate if it is normal access wifi or guest wifi",
            "readOnly": true
          },
          "securityKey": {
            "type": "string",
            "description": "Encrypted WLAN passphrase",
            "format": "password",
            "readOnly": true
          },
          "securityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.templateModem.SecurityTypeEnum"
              }
            ],
            "description": "Type of WLAN security protection",
            "readOnly": true
          },
          "wifiName": {
            "type": "string",
            "description": "Wifi Name",
            "readOnly": true
          }
        }
      },
      "xdsl.templateModem.post": {
        "type": "object",
        "description": "xdsl.templateModem.post",
        "properties": {
          "name": {
            "type": "string",
            "description": "Modem Template name (only alphanumeric characters)"
          },
          "serviceName": {
            "type": "string",
            "description": "The access name with the config you want to duplicate"
          }
        },
        "required": [
          "name",
          "serviceName"
        ]
      },
      "xdsl.updateInvalidOrMissingRio.post": {
        "type": "object",
        "description": "xdsl.updateInvalidOrMissingRio.post",
        "properties": {
          "relaunchWithoutPortability": {
            "type": "boolean",
            "description": "Do not set RIO, and relaunch order without portability"
          },
          "rio": {
            "type": "string",
            "description": "RIO number for portability"
          }
        },
        "required": [
          "relaunchWithoutPortability"
        ]
      },
      "xdsl.wifiRadio": {
        "type": "object",
        "description": "Wifi Radio Configuration of the Modem",
        "properties": {
          "channel": {
            "type": "integer",
            "description": "Current radio channel"
          },
          "channelBandwidth": {
            "type": "string",
            "description": "Current bandwidth of operating channel",
            "readOnly": true
          },
          "channelMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.ChannelModeEnum"
              }
            ],
            "description": "Change channel selection mode (auto | manual)"
          },
          "enabled": {
            "type": "boolean",
            "description": "Wifi Radio state",
            "readOnly": true
          },
          "frequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/xdsl.xdslModemConfig.FrequencyEnum"
              }
            ],
            "description": "Frequency (2.4GHz | 5GHz)",
            "readOnly": true
          },
          "maxBitRate": {
            "type": "integer",
            "description": "The maximum bitrate supported by this interface in Mbps",
            "readOnly": true
          },
          "radioName": {
            "type": "string",
            "description": "Name of the Wifi Radio",
            "readOnly": true
          },
          "standards": {
            "type": "string",
            "description": "Current radio IEEE 802.11 standards",
            "readOnly": true
          },
          "supportedChannels": {
            "type": "array",
            "description": "Supported channels by this radio",
            "items": {
              "type": "integer"
            },
            "readOnly": true
          },
          "supportedPowers": {
            "type": "array",
            "description": "Supported transmit power levels as percentage of full power",
            "items": {
              "type": "integer"
            },
            "readOnly": true
          },
          "supportedStandards": {
            "type": "array",
            "description": "Supported IEEE 802.11 standards by this radio",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "transmitPower": {
            "type": "integer",
            "description": "Current transmit power level",
            "readOnly": true
          }
        }
      },
      "xdsl.xdslEmailPro": {
        "type": "object",
        "description": "XDSL Email Pro",
        "properties": {
          "currentUsage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Mailbox usage",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "description": "Account display name",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "description": "Email domain",
            "readOnly": true
          },
          "firstName": {
            "type": "string",
            "description": "Account first name",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Account id",
            "readOnly": true
          },
          "initial": {
            "type": "string",
            "description": "Account initials",
            "nullable": true
          },
          "lastLogoffDate": {
            "type": "string",
            "description": "Last logoff",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "lastLogonDate": {
            "type": "string",
            "description": "Last logon",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "lastName": {
            "type": "string",
            "description": "Account last name",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "Account login",
            "readOnly": true
          },
          "passwordLastUpdate": {
            "type": "string",
            "description": "Time of account's password last update",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "primaryEmailAddress": {
            "type": "string",
            "description": "Default email for this mailbox",
            "readOnly": true
          },
          "quota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Account maximum size",
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/email.pro.ObjectStateEnum"
              }
            ],
            "description": "Account state",
            "readOnly": true
          },
          "taskPendingId": {
            "type": "integer",
            "description": "Pending tasks for this account",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.xdslEmailProWithIAM": {
        "type": "object",
        "description": "XDSL Email Pro",
        "properties": {
          "currentUsage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Mailbox usage",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "description": "Account display name",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "description": "Email domain",
            "readOnly": true
          },
          "firstName": {
            "type": "string",
            "description": "Account first name",
            "nullable": true
          },
          "iam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.ResourceMetadata"
              }
            ],
            "description": "IAM resource metadata",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Account id",
            "readOnly": true
          },
          "initial": {
            "type": "string",
            "description": "Account initials",
            "nullable": true
          },
          "lastLogoffDate": {
            "type": "string",
            "description": "Last logoff",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "lastLogonDate": {
            "type": "string",
            "description": "Last logon",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "lastName": {
            "type": "string",
            "description": "Account last name",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "Account login",
            "readOnly": true
          },
          "passwordLastUpdate": {
            "type": "string",
            "description": "Time of account's password last update",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "primaryEmailAddress": {
            "type": "string",
            "description": "Default email for this mailbox",
            "readOnly": true
          },
          "quota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Account maximum size",
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/email.pro.ObjectStateEnum"
              }
            ],
            "description": "Account state",
            "readOnly": true
          },
          "taskPendingId": {
            "type": "integer",
            "description": "Pending tasks for this account",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "xdsl.xdslModemConfig.ACSBackendEnum": {
        "type": "string",
        "description": "ACS backend used by the modem",
        "enum": [
          "beta",
          "dev",
          "stable"
        ]
      },
      "xdsl.xdslModemConfig.AddressingTypeEnum": {
        "type": "string",
        "description": "How the modem gets its LAN IP Address",
        "enum": [
          "DHCP",
          "Static"
        ]
      },
      "xdsl.xdslModemConfig.ChannelModeEnum": {
        "type": "string",
        "description": "How the WiFi channel is selected",
        "enum": [
          "Auto",
          "Manual"
        ]
      },
      "xdsl.xdslModemConfig.ConnectedDeviceAddressSourceEnum": {
        "type": "string",
        "description": "How did the device got its IP Address",
        "enum": [
          "DHCP",
          "Static",
          "Unknown"
        ]
      },
      "xdsl.xdslModemConfig.EasyFirewallLevelEnum": {
        "type": "string",
        "description": "Level of the Firewall ( BlockAll will block all connections, Normal will block all incoming connections except those in PortMapping and let go all outgoing connections , Disabled will disable all the Firewall and let all incoming or outgoing connections pass through )",
        "enum": [
          "BlockAll",
          "Disabled",
          "Normal"
        ]
      },
      "xdsl.xdslModemConfig.FrequencyEnum": {
        "type": "string",
        "description": "Modem frequency",
        "enum": [
          "2.4GHz",
          "5GHz"
        ]
      },
      "xdsl.xdslModemConfig.MTUSizeEnum": {
        "type": "integer",
        "description": "Size of the Maximum Transmission Unit on the modem's interfaces",
        "enum": [
          1432,
          1456,
          1492
        ]
      },
      "xdsl.xdslModemConfig.ProtocolTypeEnum": {
        "type": "string",
        "description": "Type of protocol for the Port Mapping",
        "enum": [
          "TCP",
          "UDP"
        ]
      },
      "xdsl.xdslModemConfig.SecurityTypeEnum": {
        "type": "string",
        "description": "Type of WLAN security protection",
        "enum": [
          "None",
          "WEP",
          "WPA",
          "WPA2",
          "WPA2andWPA3",
          "WPA3",
          "WPAandWPA2"
        ]
      }
    }
  },
  "paths": {
    "/xdsl": {
      "get": {
        "summary": "List available services",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "iamTags",
            "description": "Filter resources on IAM tags",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/iam.resource.TagFilter"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslAccessWithIAM"
      }
    },
    "/xdsl/email/pro": {
      "get": {
        "summary": "List available services",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "iamTags",
            "description": "Filter resources on IAM tags",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/iam.resource.TagFilter"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslEmail:apiovh:get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslXdslEmailProWithIAM"
      }
    },
    "/xdsl/email/pro/{email}": {
      "delete": {
        "summary": "Delete the email",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslEmail:apiovh:delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.xdslEmailProWithIAM"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslEmail:apiovh:get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.xdslEmailPro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslEmail:apiovh:edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/email/pro/{email}/changePassword": {
      "post": {
        "operationId": "changeEmailPassword",
        "summary": "Change the email password",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.email.pro.changePassword.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.email.pro.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslEmail:apiovh:changePassword",
            "required": true
          }
        ]
      }
    },
    "/xdsl/incidents": {
      "get": {
        "summary": "List of incidents",
        "parameters": [
          {
            "in": "query",
            "name": "creationDate",
            "description": "Filter the value of creationDate property (>)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "Filter the value of endDate property (<)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-expanded-response": "XdslIncident"
      }
    },
    "/xdsl/incidents/{id}": {
      "get": {
        "summary": "Get this object properties",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Incident"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/xdsl/spare": {
      "get": {
        "summary": "List available services",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "iamTags",
            "description": "Filter resources on IAM tags",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/iam.resource.TagFilter"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslSpare:apiovh:get",
            "required": true
          }
        ],
        "x-expanded-response": "SpareXdslXdslSpareWithIAM"
      }
    },
    "/xdsl/spare/brands": {
      "get": {
        "summary": "Get all available spare brands",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/xdsl/spare/{spare}": {
      "delete": {
        "summary": "Delete the spare as if it was not belonging to OVH anymore",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "spare",
            "description": "Spare",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslSpare:apiovh:delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "spare",
            "description": "Spare",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spare.xdsl.XdslSpareWithIAM"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslSpare:apiovh:get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/spare/{spare}/compatibleReplacement": {
      "get": {
        "summary": "Return the list of brand compatible to be replaced",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "spare",
            "description": "Spare",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslSpare:apiovh:compatibleReplacement/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/spare/{spare}/replace": {
      "post": {
        "operationId": "replaceModemBySpare",
        "summary": "Replace the modem by its spare",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "spare",
            "description": "Spare",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.spare.replace.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslSpare:apiovh:replace",
            "required": true
          }
        ]
      }
    },
    "/xdsl/spare/{spare}/returnMerchandise": {
      "post": {
        "summary": "Return the broken equipment in instantRefund",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "spare",
            "description": "Spare",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslSpare:apiovh:returnMerchandise",
            "required": true
          }
        ]
      }
    },
    "/xdsl/spare/{spare}/serviceInfos": {
      "get": {
        "summary": "Get service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "spare",
            "description": "Spare",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslSpare:apiovh:serviceInfos/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "spare",
            "description": "Spare",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/services.Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdslSpare:apiovh:serviceInfos/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/templateModem": {
      "get": {
        "operationId": "getModemTemplates",
        "summary": "List of TemplateModem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "account:apiovh:xdslTemplateModem/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslTemplateModem"
      },
      "post": {
        "operationId": "createModemTemplate",
        "summary": "Create new Modem Template from existing modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.templateModem.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.TemplateModem"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "account:apiovh:xdslTemplateModem/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/templateModem/{name}": {
      "delete": {
        "operationId": "deleteModemTemplate",
        "summary": "Delete this Modem Template",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "account:apiovh:xdslTemplateModem/delete",
            "required": true
          }
        ]
      },
      "get": {
        "operationId": "getModemTemplate",
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.TemplateModem"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "account:apiovh:xdslTemplateModem/get",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "updateModemTemplate",
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.TemplateModem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "account:apiovh:xdslTemplateModem/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.AccessWithIAM"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.Access"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:put",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/addressMove/extraIpRange": {
      "get": {
        "summary": "Informations about the extra IP range during address move",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ExtraIpRangeMove"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:addressMove/extraIpRange/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/addressMove/extraIpRangeMove": {
      "post": {
        "summary": "Initiate the extra IP range migration",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:addressMove/extraIpRangeMove",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/antiSpams": {
      "get": {
        "summary": "List antiSpams for this access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ip"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:antiSpams/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslAntiSpam"
      }
    },
    "/xdsl/{serviceName}/antiSpams/{ip}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ip",
            "description": "Ip",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ip"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.AntiSpam"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:antiSpams/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/antiSpams/{ip}/evidences": {
      "get": {
        "summary": "List of evidences stored on PCS for this ip",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ip",
            "description": "Ip",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ip"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.antiSpam.EvidencesInfo"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:antiSpams/evidences/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/applyTemplateToModem": {
      "post": {
        "operationId": "applyTemplateModem",
        "summary": "Apply TemplateModem to existing Modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.applyTemplateToModem.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:applyTemplateToModem",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/canCancelResiliation": {
      "get": {
        "summary": "Get information about the ongoing resiliation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:canCancelResiliation/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/cancelResiliation": {
      "post": {
        "summary": "Cancel the ongoing resiliation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:cancelResiliation",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/changeContact": {
      "post": {
        "operationId": "changeContact",
        "summary": "Launch a contact change procedure",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.changeContact.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:changeContact",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/diagnostic": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.AccessDiagnostic"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:diagnostic/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Run diagnostic on the access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:diagnostic/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/fiberEligibilities": {
      "get": {
        "summary": "List fiber eligibilities for this access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter the value of status property (=)",
            "schema": {
              "$ref": "#/components/schemas/xdsl.FiberEligibilityStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:fiberEligibilities/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslFiberEligibility"
      }
    },
    "/xdsl/{serviceName}/fiberEligibilities/{id}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.FiberEligibility"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:fiberEligibilities/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/incident": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Incident"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:incident/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/ips": {
      "get": {
        "summary": "List of IPs addresses for this access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ip"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:ips/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslIP"
      },
      "post": {
        "summary": "Order an extra /29 range of IPv4 addresses",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:ips/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/ips/{ip}": {
      "delete": {
        "summary": "Stop renewing this extra IPv4 option",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ip",
            "description": "Ip",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ip"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:ips/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ip",
            "description": "Ip",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ip"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.IP"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:ips/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/ipv6": {
      "post": {
        "operationId": "updateIp",
        "summary": "Change the status of the IPv6 for this access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.ipv6.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:ipv6/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/lines": {
      "get": {
        "summary": "The lines of the access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:lines/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslLine"
      }
    },
    "/xdsl/{serviceName}/lines/{number}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Line"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:lines/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/lines/{number}/diagnostic/cancel": {
      "post": {
        "summary": "Cancel line diagnostic if possible",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:lines/diagnostic/cancel",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/lines/{number}/diagnostic/run": {
      "post": {
        "operationId": "updateLineDiagnostic",
        "summary": "Update and get advanced diagnostic of the line",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.lines.diagnostic.run.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.lineDiagnostic.Diagnostic"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:lines/diagnostic/run",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/lines/{number}/dslamPort": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.DslamPort"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:lines/dslamPort/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/lines/{number}/dslamPort/availableProfiles": {
      "get": {
        "summary": "List all availables profiles for this port",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/xdsl.DslamLineProfile"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:lines/dslamPort/availableProfiles/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/lines/{number}/dslamPort/changeProfile": {
      "post": {
        "operationId": "changeLineDSLAMProfile",
        "summary": "Change the profile of the port",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.lines.dslamPort.changeProfile.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:lines/dslamPort/changeProfile",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/lines/{number}/dslamPort/logs": {
      "get": {
        "summary": "Get the logs emitted by the DSLAM for this port",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/xdsl.DslamPortLog"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:lines/dslamPort/logs/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/lines/{number}/dslamPort/reset": {
      "post": {
        "summary": "Reset the port on the DSLAM",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:lines/dslamPort/reset",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/lines/{number}/statistics": {
      "get": {
        "summary": "Get various statistics about the line",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "period",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/xdsl.StatisticsPeriodEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/xdsl.LineStatisticsTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/complexType.UnitAndValues_xdsl.TimestampAndValue"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:lines/statistics/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/mailSending": {
      "post": {
        "operationId": "updateMailSending",
        "summary": "Enable or disable email sending ability",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.mailSending.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:mailSending/update",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Modem"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.Modem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/availableACSBackend": {
      "get": {
        "summary": "List available ACS backend for this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/availableACSBackend/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/availableWLANChannel": {
      "get": {
        "summary": "List available WLAN channel for this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "frequency",
            "description": "WLAN frequency you want to retrieve channels",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/xdsl.WLANFrequencyEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/availableWLANChannel/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/blocIp": {
      "get": {
        "operationId": "getBlocIPStatus",
        "summary": "Get the status of the Bloc IP on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/blocIp/get",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "updateBlocIPStatus",
        "summary": "Change the status of the Bloc IP on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.blocIp.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/blocIp/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/callWaiting": {
      "get": {
        "operationId": "getModemCallWaitingStatus",
        "summary": "Get the status of callWaiting on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/callWaiting/get",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "updateModemCallWaiting",
        "summary": "Change the status of callWaiting on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.callWaiting.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/callWaiting/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/comfortExchange": {
      "get": {
        "operationId": "getAccessModemReplacement",
        "summary": "Get info about access modem replacement by last model.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ModemExchangeInfo"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/comfortExchange/get",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "replaceAccessModem",
        "summary": "Replace access modem by last model, fees will be applied.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.comfortExchange.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/order.Order"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/comfortExchange/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/connectedDevices": {
      "get": {
        "summary": "List of devices connected on this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/connectedDevices/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslConnectedDevice"
      }
    },
    "/xdsl/{serviceName}/modem/connectedDevices/{macAddress}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "macAddress",
            "description": "Mac address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.connectedDevice"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/connectedDevices/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/contentSharing": {
      "get": {
        "operationId": "getContentSharingStatus",
        "summary": "Get the status of contentSharing on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/contentSharing/get",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "updateContentSharingStatus",
        "summary": "Change the status of contentSharing on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.contentSharing.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/contentSharing/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/firmware": {
      "get": {
        "operationId": "getFirmwareVersion",
        "summary": "Get the firmware version installed on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/firmware/get",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "installFrimware",
        "summary": "Launch a task to install target firmware on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.firmware.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/firmware/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/firmwareAvailable": {
      "get": {
        "summary": "List available firmware for this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/firmwareAvailable/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/ftp": {
      "get": {
        "operationId": "getFTPStatus",
        "summary": "Get the status of ftp service on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/ftp/get",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "updateFTPStatus",
        "summary": "Change the status of the ftp service on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.ftp.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/ftp/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/ipsecAlg": {
      "get": {
        "operationId": "getIpsecAlgStatus",
        "summary": "Get the status of ipsec alg service on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/ipsecAlg/get",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "updateIpsecAlgStatus",
        "summary": "Change the status of the ipsec alg service on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.ipsecAlg.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/ipsecAlg/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/lan": {
      "get": {
        "summary": "List of LANs on this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslLAN"
      }
    },
    "/xdsl/{serviceName}/modem/lan/{lanName}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "lanName",
            "description": "Lan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.LAN"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "lanName",
            "description": "Lan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.LAN"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/lan/{lanName}/dhcp": {
      "get": {
        "summary": "List of DHCP on this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "lanName",
            "description": "Lan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/dhcp/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslDHCP"
      }
    },
    "/xdsl/{serviceName}/modem/lan/{lanName}/dhcp/{dhcpName}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dhcpName",
            "description": "Dhcp name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "lanName",
            "description": "Lan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.DHCP"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/dhcp/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dhcpName",
            "description": "Dhcp name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "lanName",
            "description": "Lan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.DHCP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/dhcp/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/lan/{lanName}/dhcp/{dhcpName}/DHCPStaticAddresses": {
      "get": {
        "operationId": "getDHCPStaticAddresses",
        "summary": "List of DHCP Static Address of this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dhcpName",
            "description": "Dhcp name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "lanName",
            "description": "Lan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/dhcp/DHCPStaticAddresses/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslDHCPStaticAddress"
      },
      "post": {
        "operationId": "addDHCPStaticAddress",
        "summary": "Add a DHCP static lease",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dhcpName",
            "description": "Dhcp name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "lanName",
            "description": "Lan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.lan.dhcp.DHCPStaticAddresses.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.DHCPStaticAddress"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/dhcp/DHCPStaticAddresses/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/lan/{lanName}/dhcp/{dhcpName}/DHCPStaticAddresses/{MACAddress}": {
      "delete": {
        "operationId": "removeDHCPStaticAddress",
        "summary": "Delete this port mapping",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "MACAddress",
            "description": " macaddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dhcpName",
            "description": "Dhcp name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "lanName",
            "description": "Lan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/dhcp/DHCPStaticAddresses/delete",
            "required": true
          }
        ]
      },
      "get": {
        "operationId": "getDHCPStaticAddress",
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "MACAddress",
            "description": " macaddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dhcpName",
            "description": "Dhcp name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "lanName",
            "description": "Lan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.DHCPStaticAddress"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/dhcp/DHCPStaticAddresses/get",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "updateDHCPStaticAddress",
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "MACAddress",
            "description": " macaddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dhcpName",
            "description": "Dhcp name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "lanName",
            "description": "Lan name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.DHCPStaticAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/lan/dhcp/DHCPStaticAddresses/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/mesh": {
      "get": {
        "operationId": "getWifiMeshStatus",
        "summary": "Get the status of mesh on this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/mesh/get",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "setWifiMeshStatus",
        "summary": "Change the status of mesh on this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.mesh.put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/mesh/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/onessid": {
      "get": {
        "operationId": "getWifiOneSsidStatus",
        "summary": "Get the status of onessid on this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/onessid/get",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "setWifiOneSsidStatus",
        "summary": "Change the status of onessid on this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.onessid.put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/onessid/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/portMappings": {
      "get": {
        "operationId": "getPortMappings",
        "summary": "List of PortMappings on this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/portMappings/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslPortMapping"
      },
      "post": {
        "operationId": "addPortMapping",
        "summary": "Add a port mapping",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.portMappings.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.PortMapping"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/portMappings/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/portMappings/{name}": {
      "delete": {
        "operationId": "removePortMapping",
        "summary": "Delete this port mapping",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/portMappings/delete",
            "required": true
          }
        ]
      },
      "get": {
        "operationId": "getPortMapping",
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.PortMapping"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/portMappings/get",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "updatePortMapping",
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.PortMapping"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/portMappings/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/reboot": {
      "post": {
        "operationId": "rebootModem",
        "summary": "Reboot the modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.reboot.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/reboot",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/reconfigureVoip": {
      "post": {
        "summary": "Reconfigure voip line on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/reconfigureVoip",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/refreshConnectedDevices": {
      "post": {
        "summary": "Refresh the list of connected devices on the modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/refreshConnectedDevices",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/reset": {
      "post": {
        "operationId": "resetModemConfiguration",
        "summary": "Reset the modem to its default configuration",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.reset.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/reset",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/resetPortMappingConfig": {
      "post": {
        "summary": "Remove all the current port mapping rules",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/resetPortMappingConfig",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/retrieveInfo": {
      "post": {
        "summary": "get general Modem information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.AsyncTask_xdsl.ModemInfo"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/retrieveInfo",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/sipAlg": {
      "get": {
        "operationId": "getSipAlgStatus",
        "summary": "Get the status of sip alg service on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/sipAlg/get",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "updateSipAlgStatus",
        "summary": "Change the status of the sip alg service on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.sipAlg.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/sipAlg/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/upnp": {
      "get": {
        "operationId": "getUpnpStatus",
        "summary": "Get the status of the Upnp on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ServiceStatusEnum"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/upnp/get",
            "required": true
          }
        ]
      },
      "post": {
        "operationId": "updateUpnpStatus",
        "summary": "Change the status of the Upnp on modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.modem.upnp.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/upnp/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/wifi": {
      "get": {
        "summary": "List of WLANs on this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/wifi/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslWLAN"
      }
    },
    "/xdsl/{serviceName}/modem/wifi/{wifiName}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "wifiName",
            "description": "Wifi name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.WLAN"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/wifi/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "wifiName",
            "description": "Wifi name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.WLAN"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/wifi/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/wifi/{wifiName}/qrCode": {
      "get": {
        "summary": "Get the WiFi configuration QR code as base64, if applicable",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "wifiName",
            "description": "Wifi name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/wifi/qrCode/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/modem/wifiRadio": {
      "get": {
        "summary": "List of wifiRadios on this modem",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/wifiRadio/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslWifiRadio"
      }
    },
    "/xdsl/{serviceName}/modem/wifiRadio/{radioName}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "radioName",
            "description": "Radio name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.wifiRadio"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/wifiRadio/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "radioName",
            "description": "Radio name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.wifiRadio"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:modem/wifiRadio/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/monitoringNotifications": {
      "get": {
        "operationId": "getMonitoringNotifications",
        "summary": "List the notifications for this access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:monitoringNotifications/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslMonitoringNotification"
      },
      "post": {
        "operationId": "addMonitoringNotification",
        "summary": "Add a notification",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.monitoringNotifications.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.MonitoringNotification"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:monitoringNotifications/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/monitoringNotifications/{id}": {
      "delete": {
        "operationId": "removeMonitoringNotification",
        "summary": "Delete this notification",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:monitoringNotifications/delete",
            "required": true
          }
        ]
      },
      "get": {
        "operationId": "getMonitoringNotification",
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.MonitoringNotification"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:monitoringNotifications/get",
            "required": true
          }
        ]
      },
      "put": {
        "operationId": "updateMonitoringNotification",
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.MonitoringNotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:monitoringNotifications/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/ont": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Ont"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:ont/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/orderFollowup": {
      "get": {
        "summary": "Get the status of the order",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/xdsl.orderFollowup.Step"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:orderFollowup/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/orderMeeting": {
      "post": {
        "operationId": "bookMeeting",
        "summary": "Book a meeting and relaunch order",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.orderMeeting.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:orderMeeting/create",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/pendingAction": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.PendingAction"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:pendingAction/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/radiusConnectionLogs": {
      "get": {
        "summary": "List the radius connection logs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/xdsl.RadiusConnectionLog"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:radiusConnectionLogs/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/requestPPPLoginMail": {
      "post": {
        "summary": "Renew PPP password and send the PPP login information to the e-mail of the nicAdmin",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:requestPPPLoginMail",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/requestTotalDeconsolidation": {
      "post": {
        "operationId": "requestTotalDeconsolidation",
        "summary": "Switch this access to total deconsolidation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.requestTotalDeconsolidation.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:requestTotalDeconsolidation",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/resiliate": {
      "post": {
        "operationId": "resiliateAccess",
        "summary": "Resiliate the access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.resiliate.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ResiliationFollowUpDetail"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:resiliate",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/resiliationFollowup": {
      "get": {
        "summary": "Get information about the ongoing resiliation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ResiliationFollowUpDetail"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:resiliationFollowup/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/resiliationTerms": {
      "get": {
        "summary": "Get resiliation terms",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "resiliationDate",
            "description": "The desired resiliation date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.ResiliationTerms"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:resiliationTerms/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/rma": {
      "get": {
        "summary": "Return Merchandise Authorisation associated",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:rma/get",
            "required": true
          }
        ],
        "x-expanded-response": "TelephonyRma"
      }
    },
    "/xdsl/{serviceName}/rma/{id}": {
      "delete": {
        "summary": "Cancel the rma",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:rma/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/telephony.Rma"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:rma/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/telephony.Rma"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:rma/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/rma/{id}/changeType": {
      "post": {
        "operationId": "updateRMAType",
        "summary": "Change RMA type",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.rma.changeType.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:rma/changeType",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/searchOrderMeetings": {
      "post": {
        "summary": "Search for available line creation meeting time slots, for order only",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.AsyncTask_connectivity.eligibility.Meetings"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:searchOrderMeetings",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/sendOrderToProvider": {
      "post": {
        "summary": "Unlock order in \"waitingCustomer\" status",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:sendOrderToProvider",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/serviceInfos": {
      "get": {
        "summary": "Get service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:serviceInfos/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/services.Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:serviceInfos/edit",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/statistics": {
      "get": {
        "summary": "Get various statistics about this access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "period",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/xdsl.StatisticsPeriodEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/xdsl.AccessStatisticsTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/complexType.UnitAndValues_xdsl.AccessLatency"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:statistics/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/tasks": {
      "get": {
        "summary": "Tasks scheduled for this access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "function",
            "description": "Filter the value of function property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter the value of status property (=)",
            "schema": {
              "$ref": "#/components/schemas/xdsl.TaskStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:tasks/get",
            "required": true
          }
        ],
        "x-expanded-response": "XdslTask"
      }
    },
    "/xdsl/{serviceName}/tasks/{id}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:tasks/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/tasks/{id}/archive": {
      "post": {
        "summary": "Delete the task in problem from the results",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:tasks/archive",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/totalDeconsolidationTerms": {
      "get": {
        "summary": "Give the price to requestTotalDeconsolidation on the access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/xdsl.DeconsolidationTerms"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:totalDeconsolidationTerms/get",
            "required": true
          }
        ]
      }
    },
    "/xdsl/{serviceName}/updateInvalidOrMissingRio": {
      "post": {
        "operationId": "updateRIO",
        "summary": "Update RIO, or disable portability, for order in error because of missing or invalid RIO",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/xdsl.updateInvalidOrMissingRio.post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "xdsl:apiovh:updateInvalidOrMissingRio",
            "required": true
          }
        ]
      }
    }
  }
}
