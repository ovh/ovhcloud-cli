{
  "openapi": "3.0.0",
  "info": {
    "title": "OVHcloud API specification",
    "description": "Specification for OVHcloud API",
    "version": "1.0",
    "contact": {
      "name": "OVH",
      "email": "api@ml.ovh.net"
    }
  },
  "servers": [
    {
      "url": "https://eu.api.ovh.com/1.0"
    }
  ],
  "components": {
    "schemas": {
      "any": {
        "description": "Can be anything (text, int, bool, json, html, etc.)",
        "example": "This is a content of any type !"
      },
      "complexType.SafeKeyValueCanBeNull_string": {
        "type": "object",
        "description": "Key and value, with proper key strings",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string"
          }
        }
      },
      "complexType.SafeKeyValue_string": {
        "type": "object",
        "description": "Key and value, with proper key strings",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "complexType.UnitAndValue_double": {
        "type": "object",
        "description": "A numeric value tagged with its unit",
        "properties": {
          "unit": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "complexType.UnitAndValue_long": {
        "type": "object",
        "description": "A numeric value tagged with its unit",
        "properties": {
          "unit": {
            "type": "string"
          },
          "value": {
            "type": "integer"
          }
        }
      },
      "complexType.UnitAndValue_string": {
        "type": "object",
        "description": "A numeric value tagged with its unit",
        "properties": {
          "unit": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "dedicated.Availabilities": {
        "type": "object",
        "description": "A structure describing the availabilities of dedicated server",
        "properties": {
          "datacenters": {
            "type": "array",
            "description": "The hardware availability for each datacenter which composed a region",
            "items": {
              "$ref": "#/components/schemas/dedicated.AvailabilityDatacenter"
            },
            "readOnly": true
          },
          "hardware": {
            "type": "string",
            "description": "Name of the hardware",
            "nullable": true,
            "readOnly": true
          },
          "region": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityRegionEnum"
              }
            ],
            "description": "The region",
            "readOnly": true
          }
        }
      },
      "dedicated.AvailabilitiesRaw": {
        "type": "object",
        "description": "A structure describing the availabilities of dedicated server",
        "properties": {
          "availability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityEnum"
              }
            ],
            "description": "The availability",
            "readOnly": true
          },
          "available": {
            "type": "integer",
            "description": "Real stock in database",
            "readOnly": true
          },
          "incomingDatacenter": {
            "type": "integer",
            "description": "Stock in datacenter",
            "nullable": true,
            "readOnly": true
          },
          "lastRule": {
            "type": "string",
            "description": "Last availability rule applied",
            "nullable": true,
            "readOnly": true
          },
          "ordered": {
            "type": "integer",
            "description": "Ordered count",
            "readOnly": true
          },
          "orderedCheck": {
            "type": "integer",
            "description": "Validating order count",
            "nullable": true,
            "readOnly": true
          },
          "parentAvailable": {
            "type": "integer",
            "description": "Blockbuster stock count",
            "nullable": true,
            "readOnly": true
          },
          "reference": {
            "type": "string",
            "description": "Product reference",
            "readOnly": true
          },
          "trueAvailable": {
            "type": "integer",
            "description": "Real stock (considering order in validating)",
            "readOnly": true
          },
          "trueAvailable24H": {
            "type": "integer",
            "description": "24H count",
            "nullable": true,
            "readOnly": true
          },
          "trueAvailable4H": {
            "type": "integer",
            "description": "4H count",
            "nullable": true,
            "readOnly": true
          },
          "zone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityRegionEnum"
              }
            ],
            "description": "The region",
            "readOnly": true
          }
        }
      },
      "dedicated.AvailabilityAvailabilityZoneEnum": {
        "type": "string",
        "description": "The availability zone",
        "enum": [
          "ap-south-1-a",
          "ap-south-mum-a",
          "ap-southeast-sgp-a",
          "ap-southeast-syd-a",
          "ca-east-1-a",
          "ca-east-bhs-a",
          "ca-east-tor-a",
          "eu-central-waw-a",
          "eu-south-mil-a",
          "eu-south-mil-b",
          "eu-south-mil-c",
          "eu-west-1-a",
          "eu-west-1-b",
          "eu-west-1-c",
          "eu-west-eri-a",
          "eu-west-gra-a",
          "eu-west-lim-a",
          "eu-west-par-a",
          "eu-west-par-b",
          "eu-west-par-c",
          "eu-west-rbx-a",
          "eu-west-sbg-a",
          "us-east-vin-a",
          "us-west-hil-a"
        ]
      },
      "dedicated.AvailabilityDatacenter": {
        "type": "object",
        "description": "A structure describing the hardware availability for each datacenter",
        "properties": {
          "availability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityEnum"
              }
            ],
            "description": "The availability",
            "readOnly": true
          },
          "datacenter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityDatacenterEnum"
              }
            ],
            "description": "The datacenter",
            "readOnly": true
          }
        }
      },
      "dedicated.AvailabilityDatacenterEnum": {
        "type": "string",
        "description": "The datacenter",
        "enum": [
          "ap-south-1-a",
          "ap-south-mum-a",
          "ap-southeast-sgp-a",
          "ap-southeast-syd-a",
          "au",
          "bhs",
          "ca",
          "ca-east-1-a",
          "ca-east-bhs-a",
          "ca-east-tor-a",
          "de",
          "default",
          "eu-central-waw-a",
          "eu-south-mil-a",
          "eu-south-mil-b",
          "eu-south-mil-c",
          "eu-west-1-a",
          "eu-west-1-b",
          "eu-west-1-c",
          "eu-west-eri-a",
          "eu-west-gra-a",
          "eu-west-lim-a",
          "eu-west-par-a",
          "eu-west-par-b",
          "eu-west-par-c",
          "eu-west-rbx-a",
          "eu-west-sbg-a",
          "fr",
          "fra",
          "gb",
          "gra",
          "hil",
          "in",
          "lon",
          "par",
          "pl",
          "rbx",
          "rbx-hz",
          "sbg",
          "sg",
          "sgp",
          "syd",
          "us",
          "us-east-vin-a",
          "us-west-hil-a",
          "vin",
          "waw",
          "ynm"
        ]
      },
      "dedicated.AvailabilityEnum": {
        "type": "string",
        "description": "The availability",
        "enum": [
          "120H",
          "1440H",
          "1H-high",
          "1H-low",
          "2160H",
          "240H",
          "24H",
          "480H",
          "720H",
          "72H",
          "comingSoon",
          "unavailable",
          "unknown"
        ]
      },
      "dedicated.AvailabilityRawAvailabilityZones": {
        "type": "object",
        "description": "A structure describing the hardware raw availability for each availability zone",
        "properties": {
          "availability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityEnum"
              }
            ],
            "description": "The availability",
            "readOnly": true
          },
          "availabilityZone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityAvailabilityZoneEnum"
              }
            ],
            "description": "The availability zone",
            "readOnly": true
          },
          "lastRule": {
            "type": "string",
            "description": "Last availability rule applied",
            "nullable": true,
            "readOnly": true
          },
          "parentAvailable": {
            "type": "integer",
            "description": "Real stock including parent references",
            "readOnly": true
          },
          "trueAvailable": {
            "type": "integer",
            "description": "Real stock",
            "readOnly": true
          }
        }
      },
      "dedicated.AvailabilityRawDatacenter": {
        "type": "object",
        "description": "A structure describing the hardware raw availability for each datacenter",
        "properties": {
          "availability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityEnum"
              }
            ],
            "description": "The availability",
            "readOnly": true
          },
          "datacenter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityDatacenterEnum"
              }
            ],
            "description": "The datacenter",
            "readOnly": true
          },
          "lastRule": {
            "type": "string",
            "description": "Last availability rule applied",
            "nullable": true,
            "readOnly": true
          },
          "parentAvailable": {
            "type": "integer",
            "description": "Real stock including parent references",
            "readOnly": true
          },
          "trueAvailable": {
            "type": "integer",
            "description": "Real stock",
            "readOnly": true
          }
        }
      },
      "dedicated.AvailabilityRawRegion": {
        "type": "object",
        "description": "A structure describing the hardware raw availability for each datacenter",
        "properties": {
          "availability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityEnum"
              }
            ],
            "description": "The availability",
            "readOnly": true
          },
          "availabilityZones": {
            "type": "array",
            "description": "Availability for each availability zone",
            "items": {
              "$ref": "#/components/schemas/dedicated.AvailabilityRawAvailabilityZones"
            },
            "readOnly": true
          },
          "lastRule": {
            "type": "string",
            "description": "Last availability rule applied",
            "nullable": true,
            "readOnly": true
          },
          "parentAvailable": {
            "type": "integer",
            "description": "Real stock including parent references",
            "readOnly": true
          },
          "region": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.AvailabilityRegionalizationEnum"
              }
            ],
            "description": "The region",
            "readOnly": true
          },
          "trueAvailable": {
            "type": "integer",
            "description": "Real stock",
            "readOnly": true
          }
        }
      },
      "dedicated.AvailabilityRegionEnum": {
        "type": "string",
        "description": "The region",
        "enum": [
          "ap-south-1-a",
          "ap-south-mum-a",
          "ap-southeast-sgp-a",
          "ap-southeast-syd-a",
          "apac",
          "bhs",
          "ca-east-bhs-a",
          "ca-east-tor-a",
          "canada",
          "crx",
          "eu-central-waw-a",
          "eu-south-mil-a",
          "eu-south-mil-b",
          "eu-south-mil-c",
          "eu-west-1-a",
          "eu-west-1-b",
          "eu-west-1-c",
          "eu-west-eri-a",
          "eu-west-gra-a",
          "eu-west-lim-a",
          "eu-west-par-a",
          "eu-west-par-b",
          "eu-west-par-c",
          "eu-west-rbx-a",
          "eu-west-sbg-a",
          "europe",
          "fr",
          "fra",
          "gra",
          "hil",
          "lil1-int1",
          "lon",
          "northAmerica",
          "par",
          "rbx",
          "rbx-hz",
          "sbg",
          "sgp",
          "syd",
          "us-east-vin-a",
          "us-west-hil-a",
          "vin",
          "waw",
          "ynm"
        ]
      },
      "dedicated.AvailabilityRegionalizationEnum": {
        "type": "string",
        "description": "The region",
        "enum": [
          "ap-south-1",
          "ap-south-mum",
          "ap-southeast-sgp",
          "ap-southeast-syd",
          "ca-east-1",
          "ca-east-bhs",
          "ca-east-tor",
          "eu-central-waw",
          "eu-south-mil",
          "eu-west-1",
          "eu-west-eri",
          "eu-west-gra",
          "eu-west-lim",
          "eu-west-par",
          "eu-west-rbx",
          "eu-west-sbg",
          "us-east-vin",
          "us-west-hil"
        ]
      },
      "dedicated.DatacenterAvailability": {
        "type": "object",
        "description": "A structure describing the availabilities of dedicated server",
        "properties": {
          "datacenters": {
            "type": "array",
            "description": "The hardware availability for each datacenter",
            "items": {
              "$ref": "#/components/schemas/dedicated.AvailabilityDatacenter"
            },
            "readOnly": true
          },
          "fqn": {
            "type": "string",
            "description": "Fully qualified and unique name of the hardware",
            "readOnly": true
          },
          "gpu": {
            "type": "string",
            "description": "Name of the gpu hardware part",
            "nullable": true,
            "readOnly": true
          },
          "memory": {
            "type": "string",
            "description": "Name of the memory hardware part",
            "nullable": true,
            "readOnly": true
          },
          "planCode": {
            "type": "string",
            "description": "Plan code in which the hardware is involved",
            "readOnly": true
          },
          "server": {
            "type": "string",
            "description": "Name of the base hardware",
            "readOnly": true
          },
          "storage": {
            "type": "string",
            "description": "Name of the storage hardware part",
            "nullable": true,
            "readOnly": true
          },
          "systemStorage": {
            "type": "string",
            "description": "Name of the system storage hardware part",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.DatacenterEnum": {
        "type": "string",
        "description": "ovh datacenter",
        "enum": [
          "bhs1",
          "bhs2",
          "bhs3",
          "bhs4",
          "bhs5",
          "bhs6",
          "bhs7",
          "bhs8",
          "cch01",
          "crx1",
          "crx2",
          "dc1",
          "eri1",
          "eri2",
          "gra04",
          "gra1",
          "gra2",
          "gra3",
          "gsw",
          "hdf01",
          "hil1",
          "ieb01",
          "lil1-int1",
          "lim1",
          "lim2",
          "lim3",
          "mr901",
          "p19",
          "rbx",
          "rbx-hz",
          "rbx1",
          "rbx10",
          "rbx2",
          "rbx3",
          "rbx4",
          "rbx5",
          "rbx6",
          "rbx7",
          "rbx8",
          "rbx9",
          "sbg1",
          "sbg2",
          "sbg3",
          "sbg4",
          "sbg5",
          "sgp02",
          "sgp1",
          "syd03",
          "syd1",
          "syd2",
          "vin1",
          "waw1",
          "ynm1",
          "yyz01"
        ]
      },
      "dedicated.DatacenterRawAvailability": {
        "type": "object",
        "description": "A structure describing the raw availabilities of dedicated server",
        "properties": {
          "datacenters": {
            "type": "array",
            "description": "The hardware raw availability for each datacenter",
            "items": {
              "$ref": "#/components/schemas/dedicated.AvailabilityRawDatacenter"
            },
            "readOnly": true
          },
          "fqn": {
            "type": "string",
            "description": "Fully qualified and unique name of the hardware",
            "readOnly": true
          },
          "gpu": {
            "type": "string",
            "description": "Name of the gpu hardware part",
            "nullable": true,
            "readOnly": true
          },
          "memory": {
            "type": "string",
            "description": "Name of the memory hardware part",
            "nullable": true,
            "readOnly": true
          },
          "planCode": {
            "type": "string",
            "description": "Plan code in which the hardware is involved",
            "readOnly": true
          },
          "regions": {
            "type": "array",
            "description": "The hardware raw availability for each datacenter",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.AvailabilityRawRegion"
            },
            "readOnly": true
          },
          "server": {
            "type": "string",
            "description": "Name of the base hardware",
            "readOnly": true
          },
          "storage": {
            "type": "string",
            "description": "Name of the storage hardware part",
            "nullable": true,
            "readOnly": true
          },
          "systemStorage": {
            "type": "string",
            "description": "Name of the system storage hardware part",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.ExposedTask": {
        "type": "object",
        "description": "A task for a dedicated server",
        "properties": {
          "datacenter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.DatacenterEnum"
              }
            ],
            "description": "Location of the server"
          },
          "description": {
            "type": "string",
            "description": "Short text describing the entry"
          },
          "server": {
            "type": "string",
            "description": "Name of the dedicated server"
          },
          "todoDate": {
            "type": "string",
            "description": "Timestamp for processing",
            "format": "date-time"
          }
        }
      },
      "dedicated.OperationFunctionEnum": {
        "type": "string",
        "description": "List of operation type",
        "enum": [
          "bmc/javaKvm",
          "bmc/restart",
          "bmc/revokeSessions",
          "bmc/sshSol",
          "bmc/testPassword",
          "bmc/testPing",
          "bmc/testWeb",
          "bmc/webKvm",
          "bmc/webSol"
        ]
      },
      "dedicated.PlannedInterventionStatusEnum": {
        "type": "string",
        "description": "Intervention status",
        "enum": [
          "doing",
          "done",
          "todo"
        ]
      },
      "dedicated.PlannedInterventionTimeSlot": {
        "type": "object",
        "description": "A time slot for a planned intervention",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "End date for the planned intervention",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "description": "Start date for the planned intervention",
            "format": "date-time"
          }
        }
      },
      "dedicated.PlannedInterventionTypeEnum": {
        "type": "string",
        "description": "Intervention type",
        "enum": [
          "HARDWARE_UPGRADE_ON_ACTIVE_SERVER"
        ]
      },
      "dedicated.PublicLog": {
        "type": "object",
        "description": "List of logs",
        "properties": {
          "cacheDate": {
            "type": "string",
            "description": "Cache store timestamp",
            "nullable": true,
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "description": "Total amount of lines"
          },
          "data": {
            "type": "array",
            "description": "Logs",
            "items": {
              "$ref": "#/components/schemas/dedicated.PublicLogEntry"
            }
          }
        }
      },
      "dedicated.PublicLogEntry": {
        "type": "object",
        "description": "A log entry for a specific server",
        "properties": {
          "datetime": {
            "type": "string",
            "description": "Timestamp logged",
            "format": "date-time"
          },
          "resume": {
            "type": "string",
            "description": "Short text describing the entry"
          },
          "server": {
            "type": "string",
            "description": "Name of the dedicated server"
          }
        }
      },
      "dedicated.StatusEnum": {
        "type": "string",
        "description": "enable or disable",
        "enum": [
          "disable",
          "enable"
        ]
      },
      "dedicated.TaskFunctionEnum": {
        "type": "string",
        "description": "different task operation",
        "enum": [
          "INFRA_002_VirtualNetworkInterface",
          "INFRA_002_VirtualNetworkInterface_group",
          "INFRA_002_VirtualNetworkInterface_ungroup",
          "INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_group",
          "INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_ungroup",
          "INFRA_ONE_NETWORK_VirtualNetworkInterface_group",
          "INFRA_ONE_NETWORK_VirtualNetworkInterface_ungroup",
          "addVirtualMac",
          "addWindowSplaFromExistingSerial",
          "applyBackupFtpAcls",
          "applyBackupFtpQuota",
          "bypassAntiDDosGame",
          "changePasswordBackupFTP",
          "changeRipeOrg",
          "checkAndReleaseIp",
          "createBackupFTP",
          "createOrUpdateRipeOrg",
          "createPrivateNetwork",
          "disableFirewall",
          "enableFirewall",
          "genericMoveFloatingIp",
          "hardReboot",
          "hardware_update",
          "ipmi/configureSGX",
          "migrateBackupFTP",
          "moveFloatingIp",
          "moveVirtualMac",
          "reagregateBlock",
          "rebootPower8To",
          "reinstallServer",
          "releaseIp",
          "removeBackupFTP",
          "removeVirtualMac",
          "requestAccessIPMI",
          "resetIPMI",
          "resetIPMISession",
          "testIPMIhttp",
          "testIPMIpassword",
          "testIPMIping",
          "virtualMacAdd",
          "virtualMacDelete"
        ]
      },
      "dedicated.TaskStatusEnum": {
        "type": "string",
        "description": "different task status",
        "enum": [
          "cancelled",
          "customerError",
          "doing",
          "done",
          "init",
          "ovhError",
          "todo"
        ]
      },
      "dedicated.biosSettings.BiosSettings": {
        "type": "object",
        "description": "Your BiosSettings",
        "properties": {
          "supportedSettings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BiosSettingsSupport"
              }
            ],
            "description": "List supported setting",
            "readOnly": true
          }
        }
      },
      "dedicated.biosSettingsSgx.BiosSettingsSgx": {
        "type": "object",
        "description": "Your BiosSettings for SGX feature",
        "properties": {
          "prmrr": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BiosSettingsSgxPrmrrEnum"
              }
            ],
            "description": "Settings sections",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BiosSettingsSgxStatusEnum"
              }
            ],
            "description": "Settings sections",
            "readOnly": true
          }
        }
      },
      "dedicated.networkInterfaceController.NetworkInterfaceController": {
        "type": "object",
        "description": "Your networkInterfaceController",
        "properties": {
          "linkType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.networkInterfaceController.NetworkInterfaceControllerLinkTypeEnum"
              }
            ],
            "description": "NetworkInterfaceController linkType",
            "readOnly": true
          },
          "mac": {
            "allOf": [
              {
                "$ref": "#/components/schemas/macAddress"
              }
            ],
            "description": "NetworkInterfaceController mac",
            "readOnly": true
          },
          "virtualNetworkInterface": {
            "type": "string",
            "description": "VirtualNetworkInterface bound to this NetworkInterfaceController",
            "nullable": true,
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "dedicated.networkInterfaceController.NetworkInterfaceControllerLinkTypeEnum": {
        "type": "string",
        "description": "List NetworkInterfaceController linktype",
        "enum": [
          "isolated",
          "private",
          "private_lag",
          "provisioning",
          "provisioning_lag",
          "public",
          "public_lag"
        ]
      },
      "dedicated.server.Access": {
        "type": "object",
        "description": "A structure describing the server's access",
        "properties": {
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "format": "password"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.AccessTypeEnum"
              }
            ],
            "description": "Application access type"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true
          },
          "user": {
            "type": "string",
            "description": "Login",
            "nullable": true
          }
        }
      },
      "dedicated.server.AccessTypeEnum": {
        "type": "string",
        "description": "Application access type",
        "enum": [
          "DIRECTADMIN_PANEL",
          "PLESK_PANEL",
          "PROXMOX_PANEL",
          "RDP",
          "SQL_SERVER",
          "SSH",
          "WEB_PANEL"
        ]
      },
      "dedicated.server.AddonFamilyEnum": {
        "type": "string",
        "description": "Addon family",
        "enum": [
          "memory",
          "storage"
        ]
      },
      "dedicated.server.AvailabilityByRegion": {
        "type": "object",
        "description": "A structure describing the hardware availability for each region",
        "properties": {
          "availability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.AvailabilityEnum"
              }
            ],
            "description": "The availability",
            "readOnly": true
          },
          "availabilityZones": {
            "type": "array",
            "description": "Availability zones",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.AvailabilityZones"
            },
            "readOnly": true
          },
          "region": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.AvailabilityRegionalizationEnum"
              }
            ],
            "description": "The region",
            "readOnly": true
          }
        }
      },
      "dedicated.server.AvailabilityEnum": {
        "type": "string",
        "description": "The availability",
        "enum": [
          "120H",
          "1440H",
          "1H-high",
          "1H-low",
          "2160H",
          "240H",
          "24H",
          "480H",
          "720H",
          "72H",
          "comingSoon",
          "unavailable",
          "unknown"
        ]
      },
      "dedicated.server.AvailabilityRegionalizationEnum": {
        "type": "string",
        "description": "The region",
        "enum": [
          "ap-south-1",
          "ap-southeast-sgp",
          "ap-southeast-syd",
          "ca-east-1",
          "ca-east-bhs",
          "eu-central-waw",
          "eu-west-eri",
          "eu-west-gra",
          "eu-west-lim",
          "eu-west-par",
          "eu-west-rbx",
          "eu-west-sbg",
          "us-east-vin",
          "us-west-hil"
        ]
      },
      "dedicated.server.AvailabilityZones": {
        "type": "object",
        "description": "A structure describing the hardware availability for each availability zone",
        "properties": {
          "availability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.AvailabilityEnum"
              }
            ],
            "description": "The availability",
            "readOnly": true
          },
          "availabilityZone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.AvailabilityZonesEnum"
              }
            ],
            "description": "The availability zone",
            "readOnly": true
          }
        }
      },
      "dedicated.server.AvailabilityZonesEnum": {
        "type": "string",
        "description": "The availability zone",
        "enum": [
          "ap-south-1-a",
          "ap-south-mum-a",
          "ap-southeast-sgp-a",
          "ap-southeast-syd-a",
          "ca-east-1-a",
          "ca-east-bhs-a",
          "ca-east-tor-a",
          "eu-central-waw-a",
          "eu-south-mil-a",
          "eu-south-mil-b",
          "eu-south-mil-c",
          "eu-west-1-a",
          "eu-west-1-b",
          "eu-west-1-c",
          "eu-west-eri-a",
          "eu-west-gra-a",
          "eu-west-lim-a",
          "eu-west-par-a",
          "eu-west-par-b",
          "eu-west-par-c",
          "eu-west-rbx-a",
          "eu-west-sbg-a",
          "us-east-vin-a",
          "us-west-hil-a"
        ]
      },
      "dedicated.server.BMC": {
        "type": "object",
        "description": "Server BMC interface (formerly named IPMI)",
        "properties": {
          "available": {
            "type": "boolean",
            "description": "True, if a BMC is available on this server",
            "readOnly": true
          },
          "supportedFeatures": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BmcSupportedFeatures"
              }
            ],
            "description": "A structure describing the BMC supported features",
            "readOnly": true
          }
        }
      },
      "dedicated.server.BackupCloud": {
        "type": "object",
        "description": "Backup Cloud assigned to this server",
        "properties": {
          "agreements": {
            "type": "array",
            "description": "Agreement ids waiting for validation",
            "nullable": true,
            "items": {
              "type": "integer"
            },
            "readOnly": true
          },
          "archive": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.backup.BackupContainer"
              }
            ],
            "description": "Archive space info.",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.backup.BackupStatus"
              }
            ],
            "description": "Status of the container.",
            "readOnly": true
          },
          "storage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.backup.BackupContainer"
              }
            ],
            "description": "Storage space info.",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.server.BackupFtp": {
        "type": "object",
        "description": "Backup Ftp assigned to this server",
        "properties": {
          "ftpBackupName": {
            "type": "string",
            "description": "The backup FTP server name",
            "readOnly": true
          },
          "quota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "The disk space available in gigabytes",
            "nullable": true,
            "readOnly": true
          },
          "readOnlyDate": {
            "type": "string",
            "description": "If not-null, gives the date since when your account was set in read-only mode because the quota was exceeded",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BackupStorageTypeEnum"
              }
            ],
            "description": "The backup FTP type",
            "readOnly": true
          },
          "usage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "The disk space currently used on your backup FTP in percent",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.server.BackupFtpAcl": {
        "type": "object",
        "description": "Backup Ftp ACL for this server and Backup Ftp",
        "properties": {
          "cifs": {
            "type": "boolean",
            "description": "Whether to allow the CIFS (SMB) protocol for this ACL"
          },
          "ftp": {
            "type": "boolean",
            "description": "Whether to allow the FTP protocol for this ACL"
          },
          "ipBlock": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipBlock"
              }
            ],
            "description": "The IP Block specific to this ACL",
            "readOnly": true
          },
          "isApplied": {
            "type": "boolean",
            "description": "Whether the rule has been applied on the Backup Ftp",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Date of the last object modification",
            "format": "date-time",
            "readOnly": true
          },
          "nfs": {
            "type": "boolean",
            "description": "Whether to allow the NFS protocol for this ACL"
          }
        }
      },
      "dedicated.server.BackupStorageCapacityEnum": {
        "type": "integer",
        "description": "Different backup storage capacity in gigabytes",
        "enum": [
          500,
          1000,
          5000,
          10000
        ]
      },
      "dedicated.server.BackupStorageOrderable": {
        "type": "object",
        "description": "A structure describing informations storage backup orderable for this dedicated server",
        "properties": {
          "capacities": {
            "type": "array",
            "description": "Backup storage orderable capacities in gigabytes",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.BackupStorageCapacityEnum"
            }
          },
          "orderable": {
            "type": "boolean",
            "description": "Is a backup storage is orderable for this server"
          }
        }
      },
      "dedicated.server.BackupStorageTypeEnum": {
        "type": "string",
        "description": "Different backup storage type",
        "enum": [
          "included",
          "storage"
        ]
      },
      "dedicated.server.BandwidthDetails": {
        "type": "object",
        "description": "A structure describing bandwidth informations about this dedicated server",
        "properties": {
          "InternetToOvh": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "bandwidth limitation Internet to OVH",
            "nullable": true
          },
          "OvhToInternet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "bandwidth limitation OVH to Internet",
            "nullable": true
          },
          "OvhToOvh": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "bandwidth limitation OVH to OVH",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BandwidthTypeEnum"
              }
            ],
            "description": "bandwidth offer type",
            "nullable": true
          }
        }
      },
      "dedicated.server.BandwidthOrderEnum": {
        "type": "integer",
        "description": " Different Bandwidth orderable in Mbps",
        "enum": [
          1000,
          2000,
          3000
        ]
      },
      "dedicated.server.BandwidthOrderable": {
        "type": "object",
        "description": "A structure describing informations bandwidth orderable for this dedicated server",
        "properties": {
          "orderable": {
            "type": "boolean",
            "description": "Is bandwidth orderable for this server"
          },
          "platinum": {
            "type": "array",
            "description": "Bandwidth \"platinum\" orderable in mbps",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.BandwidthOrderEnum"
            }
          },
          "premium": {
            "type": "array",
            "description": "Bandwidth \"premium\" orderable in mbps",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.BandwidthOrderEnum"
            }
          },
          "ultimate": {
            "type": "array",
            "description": "Bandwidth \"ultimate\" orderable in mbps",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.BandwidthOrderEnum"
            }
          }
        }
      },
      "dedicated.server.BandwidthTypeEnum": {
        "type": "string",
        "description": " Different Bandwidth type",
        "enum": [
          "improved",
          "included",
          "platinum",
          "premium",
          "standard",
          "ultimate"
        ]
      },
      "dedicated.server.BandwidthvRackDetails": {
        "type": "object",
        "description": "A structure describing vRack bandwidth informations about this dedicated server",
        "properties": {
          "bandwidth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "vrack bandwidth limitation",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BandwidthvRackTypeEnum"
              }
            ],
            "description": "bandwidth offer type",
            "nullable": true
          }
        }
      },
      "dedicated.server.BandwidthvRackOrderEnum": {
        "type": "integer",
        "description": " Different vRack Bandwidth orderable in Mbps",
        "enum": [
          1000,
          3000
        ]
      },
      "dedicated.server.BandwidthvRackOrderable": {
        "type": "object",
        "description": "A structure describing informations bandwidth orderable for this dedicated server",
        "properties": {
          "orderable": {
            "type": "boolean",
            "description": "Is bandwidth orderable for this server"
          },
          "vrack": {
            "type": "array",
            "description": "vRack Bandwidth orderable in mbps",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.BandwidthvRackOrderEnum"
            }
          }
        }
      },
      "dedicated.server.BandwidthvRackTypeEnum": {
        "type": "string",
        "description": " Different Bandwidth type",
        "enum": [
          "included",
          "standard"
        ]
      },
      "dedicated.server.BillingAddon": {
        "type": "object",
        "description": "Dedicated server addon.",
        "properties": {
          "family": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.AddonFamilyEnum"
              }
            ],
            "description": "Addon family"
          },
          "planCode": {
            "type": "string",
            "description": "Plan code to order"
          }
        }
      },
      "dedicated.server.BiosSettingsSgxPrmrrEnum": {
        "type": "string",
        "description": "SGX PRMRR value enum",
        "enum": [
          "128",
          "131072",
          "16384",
          "2048",
          "256",
          "32",
          "32768",
          "4096",
          "512",
          "64",
          "65536",
          "8192"
        ]
      },
      "dedicated.server.BiosSettingsSgxStatusEnum": {
        "type": "string",
        "description": "SGX Status enum",
        "enum": [
          "disabled",
          "enabled",
          "software controlled"
        ]
      },
      "dedicated.server.BiosSettingsSupport": {
        "type": "object",
        "description": "A structure describing supported bios settings",
        "properties": {
          "sgx": {
            "type": "boolean",
            "description": "SGX feature support"
          },
          "sgxOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BiosSettingsSupportSgxOptions"
              }
            ],
            "description": "Supported SGX options"
          }
        }
      },
      "dedicated.server.BiosSettingsSupportSgxOptions": {
        "type": "object",
        "description": "A structure describing supported SGX options values",
        "properties": {
          "prmrr": {
            "type": "array",
            "description": "Supported SGX prmrr values",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.BiosSettingsSgxPrmrrEnum"
            }
          },
          "status": {
            "type": "array",
            "description": "Supported SGX statuses",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.BiosSettingsSgxStatusEnum"
            }
          }
        }
      },
      "dedicated.server.BmcJavaKvmValue": {
        "type": "object",
        "description": "Java KVM session information",
        "properties": {
          "expirationDate": {
            "type": "string",
            "description": "Date on which the credentials will no longer be retrievable",
            "format": "date-time"
          },
          "jnlp": {
            "type": "string",
            "description": "value"
          }
        }
      },
      "dedicated.server.BmcSshSolValue": {
        "type": "object",
        "description": "Ssh SOL session information",
        "properties": {
          "expirationDate": {
            "type": "string",
            "description": "Date on which the credentials will no longer be retrievable",
            "format": "date-time"
          },
          "uri": {
            "type": "string",
            "description": "Ssh user and host in \"user@host\" format"
          }
        }
      },
      "dedicated.server.BmcSupportedFeatures": {
        "type": "object",
        "description": "A structure describing the BMC supported features",
        "properties": {
          "javaKvm": {
            "type": "boolean",
            "description": "Access to the KVM through a Java web launch application"
          },
          "sshSol": {
            "type": "boolean",
            "description": "Access to the virtual serial port of your server through a SSH client"
          },
          "testPassword": {
            "type": "boolean",
            "description": "Test that the access to the BMC is operational"
          },
          "testPing": {
            "type": "boolean",
            "description": "Test that the BMC is reachable"
          },
          "testWeb": {
            "type": "boolean",
            "description": "Test that the Web interface of the BMC is operational"
          },
          "webKvm": {
            "type": "boolean",
            "description": "Access to the KVM through a Web interface"
          },
          "webSol": {
            "type": "boolean",
            "description": "Access to the virtual serial port of your server through a Web interface"
          }
        }
      },
      "dedicated.server.BmcTestResult": {
        "type": "object",
        "description": "A structure describing BMC test result",
        "properties": {
          "expirationDate": {
            "type": "string",
            "description": "Date of expiration of the result of this test",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "Error message, null if the test is successfully executed",
            "nullable": true
          },
          "status": {
            "type": "boolean",
            "description": "Test result, true if successful"
          }
        }
      },
      "dedicated.server.BmcTestTypeEnum": {
        "type": "string",
        "description": "List of tests to run on a BMC",
        "enum": [
          "password",
          "ping",
          "web"
        ]
      },
      "dedicated.server.BmcWebKvmValue": {
        "type": "object",
        "description": "Web KVM session information",
        "properties": {
          "expirationDate": {
            "type": "string",
            "description": "Date on which the credentials will no longer be retrievable",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "description": "URL of the Web KVM session"
          }
        }
      },
      "dedicated.server.BmcWebSolValue": {
        "type": "object",
        "description": "Web SOL session information",
        "properties": {
          "expirationDate": {
            "type": "string",
            "description": "Date on which the credentials will no longer be retrievable",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "description": "URL of the Web SOL session"
          }
        }
      },
      "dedicated.server.BootModeEnum": {
        "type": "string",
        "description": "Server boot mode",
        "enum": [
          "legacy",
          "uefi",
          "uefi-legacy"
        ]
      },
      "dedicated.server.BootOptionEnum": {
        "type": "string",
        "description": "Different option activated on netboot ",
        "enum": [
          "cpufamily",
          "grsec",
          "ipv6",
          "smp"
        ]
      },
      "dedicated.server.BootTypeEnum": {
        "type": "string",
        "description": " Different netboot boot",
        "enum": [
          "harddisk",
          "internal",
          "network",
          "power",
          "rescue"
        ]
      },
      "dedicated.server.BurstStatusEnum": {
        "type": "string",
        "description": "Dedicated server bandwidth burst",
        "enum": [
          "active",
          "inactive",
          "inactiveLocked"
        ]
      },
      "dedicated.server.CacheTTLEnum": {
        "type": "integer",
        "description": "Time to live in minutes for cache",
        "enum": [
          1,
          3,
          5,
          10,
          15
        ]
      },
      "dedicated.server.CpuFamilyEnum": {
        "type": "string",
        "description": "cpu family ",
        "enum": [
          "arm64",
          "armhf32",
          "ppc64",
          "x86",
          "x86-ht",
          "x86_64"
        ]
      },
      "dedicated.server.Dedicated": {
        "type": "object",
        "description": "Server informations",
        "properties": {
          "availabilityZone": {
            "type": "string",
            "description": "dedicated AZ localisation",
            "readOnly": true
          },
          "bootId": {
            "type": "integer",
            "nullable": true
          },
          "bootScript": {
            "type": "string",
            "description": "Ipxe script served on boot",
            "nullable": true
          },
          "commercialRange": {
            "type": "string",
            "description": "dedicater server commercial range",
            "nullable": true,
            "readOnly": true
          },
          "datacenter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.DatacenterEnum"
              }
            ],
            "description": "dedicated datacenter localisation",
            "readOnly": true
          },
          "efiBootloaderPath": {
            "type": "string",
            "description": "EfiBootloader path",
            "nullable": true
          },
          "ip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "dedicated server ip",
            "readOnly": true
          },
          "linkSpeed": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "monitoring": {
            "type": "boolean",
            "description": "Icmp monitoring state"
          },
          "name": {
            "type": "string",
            "description": "dedicated server name",
            "readOnly": true
          },
          "newUpgradeSystem": {
            "type": "boolean",
            "readOnly": true
          },
          "noIntervention": {
            "type": "boolean",
            "description": "Prevent datacenter intervention"
          },
          "os": {
            "type": "string",
            "description": "Operating system",
            "readOnly": true
          },
          "powerState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.PowerStateEnum"
              }
            ],
            "description": "Power state of the server",
            "readOnly": true
          },
          "professionalUse": {
            "type": "boolean",
            "description": "Does this server have professional use option",
            "readOnly": true
          },
          "rack": {
            "type": "string",
            "readOnly": true
          },
          "region": {
            "type": "string",
            "description": "dedicated region localisation",
            "readOnly": true
          },
          "rescueMail": {
            "type": "string",
            "description": "Custom email used to receive rescue credentials",
            "nullable": true
          },
          "rescueSshKey": {
            "type": "string",
            "description": "Public SSH Key used in the rescue mode",
            "nullable": true
          },
          "reverse": {
            "type": "string",
            "description": "dedicated server reverse",
            "nullable": true,
            "readOnly": true
          },
          "rootDevice": {
            "type": "string",
            "nullable": true
          },
          "serverId": {
            "type": "integer",
            "description": "your server id",
            "readOnly": true
          },
          "state": {
            "$ref": "#/components/schemas/dedicated.server.StateEnum"
          },
          "supportLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.SupportLevelEnum"
              }
            ],
            "description": "Dedicated server support level",
            "readOnly": true
          }
        }
      },
      "dedicated.server.DedicatedWithIAM": {
        "type": "object",
        "description": "Server informations",
        "properties": {
          "availabilityZone": {
            "type": "string",
            "description": "dedicated AZ localisation",
            "readOnly": true
          },
          "bootId": {
            "type": "integer",
            "nullable": true
          },
          "bootScript": {
            "type": "string",
            "description": "Ipxe script served on boot",
            "nullable": true
          },
          "commercialRange": {
            "type": "string",
            "description": "dedicater server commercial range",
            "nullable": true,
            "readOnly": true
          },
          "datacenter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.DatacenterEnum"
              }
            ],
            "description": "dedicated datacenter localisation",
            "readOnly": true
          },
          "efiBootloaderPath": {
            "type": "string",
            "description": "EfiBootloader path",
            "nullable": true
          },
          "iam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.ResourceMetadata"
              }
            ],
            "description": "IAM resource metadata",
            "nullable": true,
            "readOnly": true
          },
          "ip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "dedicated server ip",
            "readOnly": true
          },
          "linkSpeed": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "monitoring": {
            "type": "boolean",
            "description": "Icmp monitoring state"
          },
          "name": {
            "type": "string",
            "description": "dedicated server name",
            "readOnly": true
          },
          "newUpgradeSystem": {
            "type": "boolean",
            "readOnly": true
          },
          "noIntervention": {
            "type": "boolean",
            "description": "Prevent datacenter intervention"
          },
          "os": {
            "type": "string",
            "description": "Operating system",
            "readOnly": true
          },
          "powerState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.PowerStateEnum"
              }
            ],
            "description": "Power state of the server",
            "readOnly": true
          },
          "professionalUse": {
            "type": "boolean",
            "description": "Does this server have professional use option",
            "readOnly": true
          },
          "rack": {
            "type": "string",
            "readOnly": true
          },
          "region": {
            "type": "string",
            "description": "dedicated region localisation",
            "readOnly": true
          },
          "rescueMail": {
            "type": "string",
            "description": "Custom email used to receive rescue credentials",
            "nullable": true
          },
          "rescueSshKey": {
            "type": "string",
            "description": "Public SSH Key used in the rescue mode",
            "nullable": true
          },
          "reverse": {
            "type": "string",
            "description": "dedicated server reverse",
            "nullable": true,
            "readOnly": true
          },
          "rootDevice": {
            "type": "string",
            "nullable": true
          },
          "serverId": {
            "type": "integer",
            "description": "your server id",
            "readOnly": true
          },
          "state": {
            "$ref": "#/components/schemas/dedicated.server.StateEnum"
          },
          "supportLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.SupportLevelEnum"
              }
            ],
            "description": "Dedicated server support level",
            "readOnly": true
          }
        }
      },
      "dedicated.server.DiskTypeEnum": {
        "type": "string",
        "description": "Disk interface type enum",
        "enum": [
          "NVMe",
          "SAS",
          "SATA",
          "SSD",
          "Unknown"
        ]
      },
      "dedicated.server.Firewall": {
        "type": "object",
        "description": "Firewall attached to this server",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "firewall": {
            "type": "string",
            "readOnly": true
          },
          "ip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "Firewall management IP",
            "readOnly": true
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.FirewallModeEnum"
              }
            ],
            "description": "transparent mode : device is invisible on the network; routed mode : the security appliance is considered to be a router hop in the network",
            "readOnly": true
          },
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.FirewallModelEnum"
              }
            ],
            "description": "Firewall model",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.server.FirewallModeEnum": {
        "type": "string",
        "description": "Dedicated server firewall mode",
        "enum": [
          "routed",
          "transparent"
        ]
      },
      "dedicated.server.FirewallModelEnum": {
        "type": "string",
        "description": "Firewall model name",
        "enum": [
          "asa5505",
          "asa5510",
          "asa5520"
        ]
      },
      "dedicated.server.FormFactorEnum": {
        "type": "string",
        "description": "Server form factor",
        "enum": [
          "0.25u",
          "0.5u",
          "1u",
          "2u",
          "3u",
          "4u"
        ]
      },
      "dedicated.server.HardwareRaidConfiguration": {
        "type": "object",
        "description": "Simulated result of how the hardware RAID template will be configured on this server",
        "properties": {
          "capacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "RAID total capacity"
          },
          "diskCount": {
            "type": "integer",
            "description": "Disk count"
          },
          "diskSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Disk capacity"
          },
          "diskSpanSize": {
            "type": "integer",
            "description": "Size of disk spans on RAID"
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.HardwareSpecificationsRaidHardEnum"
              }
            ],
            "description": "RAID mode"
          },
          "name": {
            "type": "string",
            "description": "RAID configuration name"
          },
          "type": {
            "type": "string",
            "description": "RAID controller type"
          }
        }
      },
      "dedicated.server.HardwareRaidController": {
        "type": "object",
        "description": "RAID controller configuration",
        "properties": {
          "disks": {
            "type": "array",
            "description": "Connected disk type",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.HardwareRaidDiskGroup"
            }
          },
          "model": {
            "type": "string",
            "description": "Raid controler model"
          },
          "type": {
            "type": "string",
            "description": "Raid controler type"
          }
        }
      },
      "dedicated.server.HardwareRaidDiskGroup": {
        "type": "object",
        "description": "Disk attached to a RAID controller",
        "properties": {
          "capacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Disk capacity"
          },
          "diskGroupId": {
            "type": "integer",
            "description": "Disk Group Id"
          },
          "names": {
            "type": "array",
            "description": "Disk names",
            "items": {
              "type": "string"
            }
          },
          "speed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_string"
              }
            ],
            "description": "Disk insterface speed"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.DiskTypeEnum"
              }
            ],
            "description": "Disk type"
          }
        }
      },
      "dedicated.server.HardwareRaidProfile": {
        "type": "object",
        "description": "A structure describing the server's hardware RAID configuration",
        "properties": {
          "controllers": {
            "type": "array",
            "description": "Hardware RAID controller list",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.HardwareRaidController"
            }
          }
        }
      },
      "dedicated.server.HardwareRaidSize": {
        "type": "object",
        "description": "A structure describing the server's resulting layout after RAID configuration",
        "properties": {
          "configurations": {
            "type": "array",
            "description": "Hardware RAID configuration list",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.HardwareRaidConfiguration"
            }
          }
        }
      },
      "dedicated.server.HardwareSpecifications": {
        "type": "object",
        "description": "A structure describing informations about this dedicated server",
        "properties": {
          "bootMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BootModeEnum"
              }
            ],
            "description": "Server boot mode"
          },
          "coresPerProcessor": {
            "type": "integer",
            "description": "number of cores per processor",
            "nullable": true
          },
          "defaultHardwareRaidSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Default hardware raid size for this server",
            "nullable": true
          },
          "defaultHardwareRaidType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.HardwareSpecificationsRaidHardEnum"
              }
            ],
            "description": "Default hardware raid type configured on this server",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "commercial name of this server",
            "nullable": true
          },
          "diskGroups": {
            "type": "array",
            "description": "details about the groups of disks in the server",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.HardwareSpecificationsDisk"
            }
          },
          "expansionCards": {
            "type": "array",
            "description": "details about the server's expansion cards",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.HardwareSpecificationsExpansionCard"
            }
          },
          "formFactor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.FormFactorEnum"
              }
            ],
            "description": "Server form factor",
            "nullable": true
          },
          "memorySize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "ram capacity",
            "nullable": true
          },
          "motherboard": {
            "type": "string",
            "description": "server motherboard",
            "nullable": true
          },
          "numberOfProcessors": {
            "type": "integer",
            "description": "number of processors in this dedicated server",
            "nullable": true
          },
          "processorArchitecture": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.CpuFamilyEnum"
              }
            ],
            "description": "processor architecture bit",
            "nullable": true
          },
          "processorName": {
            "type": "string",
            "description": "processor name",
            "nullable": true
          },
          "threadsPerProcessor": {
            "type": "integer",
            "description": "number of threads per processor",
            "nullable": true
          },
          "usbKeys": {
            "type": "array",
            "description": "Capacity of the USB keys installed on your server, if any",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/complexType.UnitAndValue_long"
            }
          }
        }
      },
      "dedicated.server.HardwareSpecificationsDisk": {
        "type": "object",
        "description": "A structure describing informations about server disks",
        "properties": {
          "defaultHardwareRaidSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "default hardware raid size for this disk group",
            "nullable": true
          },
          "defaultHardwareRaidType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.HardwareSpecificationsRaidHardEnum"
              }
            ],
            "description": "default hardware raid type for this disk group",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "human readable description of this disk group",
            "nullable": true
          },
          "diskGroupId": {
            "type": "integer",
            "description": "identifier of this disk group",
            "nullable": true
          },
          "diskSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "disk capacity",
            "nullable": true
          },
          "diskType": {
            "type": "string",
            "description": "type of the disk (SSD, SATA, SAS, ...)",
            "nullable": true
          },
          "numberOfDisks": {
            "type": "integer",
            "description": "number of disks in this group",
            "nullable": true
          },
          "raidController": {
            "type": "string",
            "description": "raid controller, if any, managing this group of disks",
            "nullable": true
          }
        }
      },
      "dedicated.server.HardwareSpecificationsExpansionCard": {
        "type": "object",
        "description": "A structure describing informations about server expansion cards",
        "properties": {
          "description": {
            "type": "string",
            "description": "expansion card description"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.HardwareSpecificationsExpansionCardTypeEnum"
              }
            ],
            "description": "expansion card type"
          }
        }
      },
      "dedicated.server.HardwareSpecificationsExpansionCardTypeEnum": {
        "type": "string",
        "description": "Expansion card type enum",
        "enum": [
          "fpga",
          "gpu"
        ]
      },
      "dedicated.server.HardwareSpecificationsRaidHardEnum": {
        "type": "string",
        "description": "Raid hard configuration",
        "enum": [
          "raid0",
          "raid1",
          "raid10",
          "raid1E",
          "raid5",
          "raid50",
          "raid6",
          "raid60"
        ]
      },
      "dedicated.server.HardwareUpgradeTimeslot": {
        "type": "object",
        "description": "A time slot for a planned intervention",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "End date for the planned intervention",
            "format": "date-time",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date for the planned intervention",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "dedicated.server.InstallCustom": {
        "type": "object",
        "description": "A structure describing informations about installation custom",
        "properties": {
          "customHostname": {
            "type": "string",
            "description": "Personnal hostname to use in server reinstallation",
            "nullable": true
          },
          "diskGroupId": {
            "type": "integer",
            "description": "Disk group id to process install on (only available for some templates)",
            "nullable": true
          },
          "noRaid": {
            "type": "boolean",
            "description": "true if you want to install only on the first disk",
            "nullable": true
          },
          "postInstallationScriptLink": {
            "type": "string",
            "description": "the url to your custom install script",
            "nullable": true
          },
          "postInstallationScriptReturn": {
            "type": "string",
            "description": " the return of your script if everythings ok. Advice: your script should return a unique validation string in case of succes. A good example is \"loh1Xee7eo OK OK OK UGh8Ang1Gu",
            "nullable": true
          },
          "softRaidDevices": {
            "type": "integer",
            "description": "Number of devices to use for system's software RAID",
            "nullable": true
          }
        }
      },
      "dedicated.server.InstallTemplate": {
        "type": "object",
        "description": "A structure describing informations about an Installation templates",
        "properties": {
          "ovh": {
            "type": "array",
            "description": "Names list of ovh installationtemplates compatibles with this server",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "personal": {
            "type": "array",
            "description": "Names list of yours installation templates compatibles with this server",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "dedicated.server.InstallationProgressStatus": {
        "type": "object",
        "description": "A structure describing informations about this dedicated server installation status",
        "properties": {
          "elapsedTime": {
            "type": "integer",
            "description": "Elapsed time in seconds since installation beggining"
          },
          "progress": {
            "type": "array",
            "description": "Installation steps",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.InstallationProgressSteps"
            }
          }
        }
      },
      "dedicated.server.InstallationProgressStatusEnum": {
        "type": "string",
        "description": "Distinct Installation status",
        "enum": [
          "doing",
          "done",
          "error",
          "expired",
          "idle",
          "pending",
          "stopping",
          "todo"
        ]
      },
      "dedicated.server.InstallationProgressSteps": {
        "type": "object",
        "description": "A structure describing informations about this dedicated server installation steps",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Informations about this installation step"
          },
          "error": {
            "type": "string",
            "description": "Error details if state is error",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.InstallationProgressStatusEnum"
              }
            ],
            "description": "Status of this installation step"
          }
        }
      },
      "dedicated.server.Interfaces": {
        "type": "object",
        "description": "Interface or interfaces aggregation",
        "properties": {
          "macs": {
            "type": "array",
            "description": "Mac address or list of mac addresses",
            "items": {
              "$ref": "#/components/schemas/macAddress"
            }
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.NetworkingTypeEnum"
              }
            ],
            "description": "Network type"
          }
        }
      },
      "dedicated.server.Intervention": {
        "type": "object",
        "description": "Intervention made on this server",
        "properties": {
          "date": {
            "type": "string",
            "description": "the intervention start date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "interventionId": {
            "type": "integer",
            "description": "The intervention id",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "the intervention type",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.server.IpBlockSizeEnum": {
        "type": "integer",
        "description": "IP block size",
        "enum": [
          1,
          4,
          8,
          16,
          32,
          64,
          128,
          256
        ]
      },
      "dedicated.server.IpCountryEnum": {
        "type": "string",
        "description": "Available localization for this static IP",
        "enum": [
          "au",
          "be",
          "ca",
          "cz",
          "de",
          "es",
          "fi",
          "fr",
          "ie",
          "in",
          "it",
          "lt",
          "nl",
          "pl",
          "pt",
          "sg",
          "uk",
          "us"
        ]
      },
      "dedicated.server.IpOrderable": {
        "type": "object",
        "description": "A structure describing informations about orderable IP address",
        "properties": {
          "ipv4": {
            "type": "array",
            "description": "Orderable IP v4 details",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.IpOrderableDetails"
            }
          },
          "ipv6": {
            "type": "array",
            "description": "Orderable IP v6 details",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.IpOrderableDetails"
            }
          }
        }
      },
      "dedicated.server.IpOrderableDetails": {
        "type": "object",
        "description": "A structure describing informations about orderable IP address",
        "properties": {
          "blockSizes": {
            "type": "array",
            "description": "Orderable IP blocks sizes",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.IpBlockSizeEnum"
            }
          },
          "included": {
            "type": "boolean",
            "description": "Are those IP included with your offer"
          },
          "ipNumber": {
            "type": "integer",
            "description": "Total number of IP that can be routed to this server",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Total number of prefixes that can be routed to this server"
          },
          "optionRequired": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.OptionRequiredEnum"
              }
            ],
            "description": "Which option is required to order this type of IP",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.IpTypeOrderableEnum"
              }
            ],
            "description": "this IP type"
          }
        }
      },
      "dedicated.server.IpTypeOrderableEnum": {
        "type": "string",
        "description": "Orderable IP type",
        "enum": [
          "failover",
          "static",
          "unshielded"
        ]
      },
      "dedicated.server.Ipmi": {
        "type": "object",
        "description": "Server IPMI interface",
        "properties": {
          "activated": {
            "type": "boolean",
            "description": "true, if IPMI is available on this server",
            "readOnly": true
          },
          "supportedFeatures": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.IpmiSupportedFeatures"
              }
            ],
            "description": "A structure describing the IPMI supported features",
            "readOnly": true
          }
        }
      },
      "dedicated.server.IpmiAccessTypeEnum": {
        "type": "string",
        "description": "Distinct way to acces a KVM IPMI session",
        "enum": [
          "kvmipHtml5URL",
          "kvmipJnlp",
          "serialOverLanSshKey",
          "serialOverLanURL"
        ]
      },
      "dedicated.server.IpmiAccessValue": {
        "type": "object",
        "description": "A structure describing ipmi access value",
        "properties": {
          "expiration": {
            "type": "string",
            "description": "Session expiration date",
            "nullable": true,
            "format": "date-time"
          },
          "value": {
            "type": "string",
            "description": "value",
            "nullable": true
          }
        }
      },
      "dedicated.server.IpmiSupportedFeatures": {
        "type": "object",
        "description": "A structure describing the IPMI supported features",
        "properties": {
          "kvmipHtml5URL": {
            "type": "boolean",
            "description": "Access to the KVM through an HTML web interface"
          },
          "kvmipJnlp": {
            "type": "boolean",
            "description": "Access to the KVM through a Java web launch application"
          },
          "serialOverLanSshKey": {
            "type": "boolean",
            "description": "Access to the virtual serial port of your server through an SSH client"
          },
          "serialOverLanURL": {
            "type": "boolean",
            "description": "Access to the virtual serial port of your server through an HTML command line interface"
          }
        }
      },
      "dedicated.server.IpmiTestResult": {
        "type": "object",
        "description": "A structure describing IPMI test result",
        "properties": {
          "date": {
            "type": "string",
            "description": "Test running date",
            "nullable": true,
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Test result",
            "nullable": true
          }
        }
      },
      "dedicated.server.IpmiTestTypeEnum": {
        "type": "string",
        "description": "Different test can be made on IPMI interface",
        "enum": [
          "http",
          "password",
          "ping"
        ]
      },
      "dedicated.server.MrtgPeriodEnum": {
        "type": "string",
        "description": "distincts MRTG period",
        "enum": [
          "daily",
          "hourly",
          "monthly",
          "weekly",
          "yearly"
        ]
      },
      "dedicated.server.MrtgTimestampValue": {
        "type": "object",
        "description": "A timestamp associated to a value",
        "properties": {
          "timestamp": {
            "type": "integer"
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "nullable": true
          }
        }
      },
      "dedicated.server.MrtgTypeEnum": {
        "type": "string",
        "description": "distincts MRTG type",
        "enum": [
          "errors:download",
          "errors:upload",
          "packets:download",
          "packets:upload",
          "traffic:download",
          "traffic:upload"
        ]
      },
      "dedicated.server.Netboot": {
        "type": "object",
        "description": "Available boots",
        "properties": {
          "bootId": {
            "type": "integer",
            "description": "boot id",
            "readOnly": true
          },
          "bootType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BootTypeEnum"
              }
            ],
            "description": "the boot system",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "the boot description",
            "readOnly": true
          },
          "kernel": {
            "type": "string",
            "description": "The boot kernel",
            "readOnly": true
          }
        }
      },
      "dedicated.server.NetworkSpecifications": {
        "type": "object",
        "description": "A structure describing network informations about this dedicated server",
        "properties": {
          "bandwidth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BandwidthDetails"
              }
            ],
            "description": "Bandwidth details",
            "nullable": true
          },
          "connection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Network connection flow rate",
            "nullable": true
          },
          "ola": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.OlaDetails"
              }
            ],
            "description": "OLA details",
            "nullable": true
          },
          "routing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.RoutingDetails"
              }
            ],
            "description": "Routing details",
            "nullable": true
          },
          "switching": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.SwitchingDetails"
              }
            ],
            "description": "Switching details",
            "nullable": true
          },
          "traffic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.TrafficDetails"
              }
            ],
            "description": "Traffic details",
            "nullable": true
          },
          "vmac": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.VmacDetails"
              }
            ],
            "description": "A structure describing VMAC Infos for this dedicated server"
          },
          "vrack": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BandwidthvRackDetails"
              }
            ],
            "description": "vRack details",
            "nullable": true
          }
        }
      },
      "dedicated.server.Networking": {
        "type": "object",
        "description": "Network configuration",
        "properties": {
          "description": {
            "type": "string",
            "description": "Operation description",
            "nullable": true,
            "readOnly": true
          },
          "interfaces": {
            "type": "array",
            "description": "Interface or interfaces aggregation",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.Interfaces"
            },
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.NetworkingOperationEnum"
              }
            ],
            "description": "Operation status",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.server.NetworkingOperationEnum": {
        "type": "string",
        "description": "Network operation states",
        "enum": [
          "active",
          "deploying"
        ]
      },
      "dedicated.server.NetworkingTypeEnum": {
        "type": "string",
        "description": "Network type",
        "enum": [
          "public",
          "vrack"
        ]
      },
      "dedicated.server.OlaAvailableModes": {
        "type": "object",
        "description": "A structure describing OVH Link Aggregation available modes",
        "properties": {
          "default": {
            "type": "boolean",
            "description": "Is it the default configuration of the server"
          },
          "interfaces": {
            "type": "array",
            "description": "Interface layout",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.OlaInterface"
            }
          },
          "name": {
            "type": "string",
            "description": "Mode name"
          }
        }
      },
      "dedicated.server.OlaDetails": {
        "type": "object",
        "description": "A structure describing OVH Link Aggregation available modes for this dedicated server",
        "properties": {
          "available": {
            "type": "boolean",
            "description": "Is the OLA feature available"
          },
          "availableModes": {
            "type": "array",
            "description": "What modes are supported",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.OlaAvailableModes"
            }
          },
          "supportedModes": {
            "type": "array",
            "description": "(DEPRECATED) What modes are supported",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.virtualNetworkInterface.VirtualNetworkInterfaceModeEnum"
            }
          }
        }
      },
      "dedicated.server.OlaInterface": {
        "type": "object",
        "description": "A structure describing OVH Link Aggregation interface configuration",
        "properties": {
          "aggregation": {
            "type": "boolean",
            "description": "Interface aggregation status"
          },
          "count": {
            "type": "integer",
            "description": "Interface count"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.OlaInterfaceModeEnum"
              }
            ],
            "description": "Interface mode"
          }
        }
      },
      "dedicated.server.OlaInterfaceModeEnum": {
        "type": "string",
        "description": "An enum describing OVH Link Aggregation interface types",
        "enum": [
          "public",
          "vrack"
        ]
      },
      "dedicated.server.Operation": {
        "type": "object",
        "description": "Server operations",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Details of this task",
            "nullable": true,
            "readOnly": true
          },
          "doneDate": {
            "type": "string",
            "description": "Completion date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "function": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.OperationFunctionEnum"
              }
            ],
            "description": "Function name",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Last update",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "operationId": {
            "type": "string",
            "description": "The unique identifier of the operation",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "description": "Task Creation date",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.TaskStatusEnum"
              }
            ],
            "description": "Task status",
            "readOnly": true
          }
        }
      },
      "dedicated.server.Option": {
        "type": "object",
        "description": "Information about the options of a dedicated server",
        "properties": {
          "option": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.OptionEnum"
              }
            ],
            "description": "The option name",
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.OptionStateEnum"
              }
            ],
            "description": "The state of the option",
            "readOnly": true
          }
        }
      },
      "dedicated.server.OptionEnum": {
        "type": "string",
        "description": "All options a dedicated server can have and release",
        "enum": [
          "BACKUPPROTOCOL",
          "BANDWIDTH",
          "BANDWIDTH_VRACK",
          "OLA",
          "SGX",
          "TRAFFIC",
          "TRAFFIC_DISCOVER",
          "TUNING",
          "TUNING_FIREWALL",
          "TUNING_KVM",
          "USB_KVM_IP"
        ]
      },
      "dedicated.server.OptionRequiredEnum": {
        "type": "string",
        "description": "Required option",
        "enum": [
          "professionalUse"
        ]
      },
      "dedicated.server.OptionStateEnum": {
        "type": "string",
        "description": "All states a dedicated server option can be in",
        "enum": [
          "released",
          "subscribed"
        ]
      },
      "dedicated.server.OrderableSysFeatureEnum": {
        "type": "string",
        "description": "Dedicated server orderable features",
        "enum": [
          "backupProtocol",
          "monitoring"
        ]
      },
      "dedicated.server.PlannedIntervention": {
        "type": "object",
        "description": "Planned intervention on the server",
        "properties": {
          "expectedEndDate": {
            "type": "string",
            "description": "Expected end date for this intervention",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "ID of the intervention",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.PlannedInterventionStatusEnum"
              }
            ],
            "description": "Status of the intervention",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.PlannedInterventionTypeEnum"
              }
            ],
            "description": "Operation purpose",
            "readOnly": true
          },
          "wantedStartDate": {
            "type": "string",
            "description": "Wanted start date for this intervention",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "dedicated.server.PowerStateEnum": {
        "type": "string",
        "description": "Power states of a Dedicated",
        "enum": [
          "poweroff",
          "poweron"
        ]
      },
      "dedicated.server.RegionAvailability": {
        "type": "object",
        "description": "A structure describing the availabilities of dedicated server",
        "properties": {
          "fqn": {
            "type": "string",
            "description": "Fully qualified and unique name of the hardware",
            "readOnly": true
          },
          "gpu": {
            "type": "string",
            "description": "Name of the gpu hardware part",
            "nullable": true,
            "readOnly": true
          },
          "memory": {
            "type": "string",
            "description": "Name of the memory hardware part",
            "nullable": true,
            "readOnly": true
          },
          "planCode": {
            "type": "string",
            "description": "Plan code in which the hardware is involved",
            "readOnly": true
          },
          "regions": {
            "type": "array",
            "description": "The hardware availability for each region",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.AvailabilityByRegion"
            },
            "readOnly": true
          },
          "server": {
            "type": "string",
            "description": "Name of the base hardware",
            "readOnly": true
          },
          "storage": {
            "type": "string",
            "description": "Name of the storage hardware part",
            "nullable": true,
            "readOnly": true
          },
          "systemStorage": {
            "type": "string",
            "description": "Name of the system storage hardware part",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.server.Reinstall": {
        "type": "object",
        "description": "OS reinstallation payload",
        "properties": {
          "customizations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.Customizations"
              }
            ],
            "description": "OS reinstallation customizations"
          },
          "operatingSystem": {
            "type": "string",
            "description": "Operating System name to install (available values for this server can be retrieved using GET /dedicated/server/{serviceName}/install/compatibleTemplates)"
          },
          "properties": {
            "type": "object",
            "description": "Arbitrary properties to pass to cloud-init's config drive datasource",
            "additionalProperties": {
              "type": "string"
            }
          },
          "storage": {
            "type": "array",
            "description": "OS reinstallation storage configurations",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.reinstall.Storage"
            }
          }
        },
        "required": [
          "operatingSystem"
        ]
      },
      "dedicated.server.RoutingDetails": {
        "type": "object",
        "description": "A structure describing routing informations about this dedicated server",
        "properties": {
          "ipv4": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.RoutingDetailsIpv4"
              }
            ],
            "description": "Ipv4 routing details",
            "nullable": true
          },
          "ipv6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.RoutingDetailsIpv6"
              }
            ],
            "description": "Ipv6 routing details",
            "nullable": true
          }
        }
      },
      "dedicated.server.RoutingDetailsIpv4": {
        "type": "object",
        "description": "A structure describing IPv4 routing informations about this dedicated server",
        "properties": {
          "gateway": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "Server gateway",
            "nullable": true
          },
          "ip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "Server main IP",
            "nullable": true
          },
          "network": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4Block"
              }
            ],
            "description": "Server network",
            "nullable": true
          }
        }
      },
      "dedicated.server.RoutingDetailsIpv6": {
        "type": "object",
        "description": "A structure describing IPv6 routing informations about this dedicated server",
        "properties": {
          "gateway": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6"
              }
            ],
            "description": "Server gateway",
            "nullable": true
          },
          "ip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6Block"
              }
            ],
            "description": "Server main IP",
            "nullable": true
          },
          "network": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6Block"
              }
            ],
            "description": "Server network",
            "nullable": true
          }
        }
      },
      "dedicated.server.ScheduleUpgradePayload": {
        "type": "object",
        "description": "Define a date to perform the upgrade intervention",
        "properties": {
          "hasPerformedBackup": {
            "type": "boolean",
            "description": "A backup has been performed by the user prior to the intervention date"
          },
          "wantedBeginningDate": {
            "type": "string",
            "description": "Wanted beginning date for the upgrade intervention",
            "format": "date-time"
          }
        },
        "required": [
          "hasPerformedBackup",
          "wantedBeginningDate"
        ]
      },
      "dedicated.server.ServerBurst": {
        "type": "object",
        "description": "Server bandwidth burst details",
        "properties": {
          "capacity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Bandwidth busrt capacity",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BurstStatusEnum"
              }
            ],
            "description": "indicates whether burstable bandwidth is currently active, allowing it to temporarily exceed the normally included bandwidth.OvhToInternet amount, within the limits indicated by the burst.capacity item. It can also be inactiveLocked when temporarily disabled due to overuse, capping it to the included non-burstable bandwidth capacity of bandwidth.OvhToInternet"
          }
        }
      },
      "dedicated.server.SplaStatusEnum": {
        "type": "string",
        "description": "SPLA license status",
        "enum": [
          "terminated",
          "used",
          "waitingToCheck"
        ]
      },
      "dedicated.server.SplaTypeEnum": {
        "type": "string",
        "description": "SPLA license type",
        "enum": [
          "os",
          "sqlstd",
          "sqlweb"
        ]
      },
      "dedicated.server.StateEnum": {
        "type": "string",
        "description": "All states a Dedicated can in",
        "enum": [
          "error",
          "hacked",
          "hackedBlocked",
          "ok"
        ]
      },
      "dedicated.server.SupportLevelEnum": {
        "type": "string",
        "description": "distincts support level",
        "enum": [
          "critical",
          "fastpath",
          "gs",
          "pro"
        ]
      },
      "dedicated.server.SupportLevelOrderable": {
        "type": "object",
        "description": "A structure describing informations support level orderable for this dedicated server",
        "properties": {
          "levels": {
            "type": "array",
            "description": "Support level  orderable",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.SupportLevelOrderableEnum"
            }
          },
          "orderable": {
            "type": "boolean",
            "description": "Is a support level is orderable for this server"
          }
        }
      },
      "dedicated.server.SupportLevelOrderableEnum": {
        "type": "string",
        "description": "distincts support level",
        "enum": [
          "critical",
          "fastpath",
          "gs"
        ]
      },
      "dedicated.server.SupportReplaceHddInfo": {
        "type": "object",
        "description": "Hdd replace support request details. ",
        "properties": {
          "disk_serial": {
            "type": "string",
            "description": "Disk serial number"
          },
          "slot_id": {
            "type": "integer",
            "description": "Disk slotId (if any)",
            "nullable": true
          }
        }
      },
      "dedicated.server.SwitchingDetails": {
        "type": "object",
        "description": "A structure describing switching informations about this dedicated server",
        "properties": {
          "name": {
            "type": "string",
            "description": "Switch name",
            "nullable": true
          }
        }
      },
      "dedicated.server.Task": {
        "type": "object",
        "description": "Server tasks",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Details of this task",
            "nullable": true,
            "readOnly": true
          },
          "doneDate": {
            "type": "string",
            "description": "Completion date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "function": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.TaskFunctionEnum"
              }
            ],
            "description": "Function name",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "last update",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "needSchedule": {
            "type": "boolean",
            "description": "Whether this task need to be scheduled or not",
            "readOnly": true
          },
          "note": {
            "type": "string",
            "description": "Extra information about this task",
            "nullable": true,
            "readOnly": true
          },
          "plannedInterventionId": {
            "type": "integer",
            "description": "ID of the planned intervention for this task",
            "nullable": true,
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "description": "Task Creation date",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.TaskStatusEnum"
              }
            ],
            "description": "Task status",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "description": "Task result tags output",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/complexType.SafeKeyValueCanBeNull_string"
            },
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "the id of the task",
            "readOnly": true
          },
          "ticketReference": {
            "type": "string",
            "description": "Reference of the thread on the support tool",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.server.TrafficDetails": {
        "type": "object",
        "description": "A structure describing traffic informations about this dedicated server",
        "properties": {
          "inputQuotaSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Monthly input traffic quota allowed",
            "nullable": true
          },
          "inputQuotaUsed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Monthly input traffic consumed this month",
            "nullable": true
          },
          "isThrottled": {
            "type": "boolean",
            "description": "Is bandwidth throttleted for being over quota",
            "nullable": true
          },
          "outputQuotaSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Monthly output traffic quota allowed",
            "nullable": true
          },
          "outputQuotaUsed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Monthly output traffic consumed this month",
            "nullable": true
          },
          "resetQuotaDate": {
            "type": "string",
            "description": "Next reset quota date for traffic counter",
            "nullable": true
          }
        }
      },
      "dedicated.server.TrafficOrderEnum": {
        "type": "string",
        "description": " traffic orderable ",
        "enum": [
          "100Mbps-Unlimited",
          "250Mbps-Unlimited",
          "500Mbps-Unlimited"
        ]
      },
      "dedicated.server.TrafficOrderable": {
        "type": "object",
        "description": "A structure describing informations bandwidth orderable for this dedicated server",
        "properties": {
          "orderable": {
            "type": "boolean",
            "description": "Is traffic orderable for this server"
          },
          "traffic": {
            "type": "array",
            "description": "traffic orderable",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/dedicated.server.TrafficOrderEnum"
            }
          }
        }
      },
      "dedicated.server.UsbKeyCapacityEnum": {
        "type": "integer",
        "description": " Different USB key capacity in gigabytes",
        "enum": [
          16,
          32,
          64,
          128,
          256
        ]
      },
      "dedicated.server.UsbKeyOrderableDetails": {
        "type": "object",
        "description": "A structure describing informations about orderable USB keys",
        "properties": {
          "capacity": {
            "type": "array",
            "description": "Orderable USB keys capacity in gigabytes",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.UsbKeyCapacityEnum"
            }
          },
          "number": {
            "type": "integer",
            "description": "Number of USB keys that can be ordered for this server"
          },
          "optionRequired": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.OptionRequiredEnum"
              }
            ],
            "description": "Which option is required to order an USB key",
            "nullable": true
          },
          "orderable": {
            "type": "boolean",
            "description": "Is USB keys orderable for this server"
          }
        }
      },
      "dedicated.server.VirtualMac": {
        "type": "object",
        "description": "A virtual MAC address associated to one or more IPs",
        "properties": {
          "macAddress": {
            "type": "string",
            "description": "Virtual MAC address in 00:00:00:00:00:00 format",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.VmacTypeEnum"
              }
            ],
            "description": "Virtual MAC address type",
            "readOnly": true
          }
        }
      },
      "dedicated.server.VirtualMacManagement": {
        "type": "object",
        "description": " ip address linked with this virtual mac address",
        "properties": {
          "ipAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "IP address",
            "readOnly": true
          },
          "virtualMachineName": {
            "type": "string",
            "description": "Friendly name of your Virtual Machine behind this IP/MAC",
            "readOnly": true
          }
        }
      },
      "dedicated.server.VirtualNetworkInterface": {
        "type": "object",
        "description": "Your VirtualNetworkInterface",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "VirtualNetworkInterface activation state",
            "readOnly": true
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.virtualNetworkInterface.VirtualNetworkInterfaceModeEnum"
              }
            ],
            "description": "Available VirtualNetworkInterface modes",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "User defined VirtualNetworkInterface name",
            "readOnly": true
          },
          "networkInterfaceController": {
            "type": "array",
            "description": "NetworkInterfaceControllers bound to this VirtualNetworkInterface",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "serverName": {
            "type": "string",
            "description": "Server bound to this VirtualNetworkInterface",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "description": "VirtualNetworkInterface unique id",
            "format": "uuid",
            "readOnly": true
          },
          "vrack": {
            "type": "string",
            "description": "vRack name",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.server.VmacDetails": {
        "type": "object",
        "description": "A structure describing VMAC Infos for this dedicated server",
        "properties": {
          "quota": {
            "type": "integer",
            "description": "Maximum number of VirtualMacs allowed on this server"
          },
          "supported": {
            "type": "boolean",
            "description": "Server is compatible vmac or not"
          }
        }
      },
      "dedicated.server.VmacTypeEnum": {
        "type": "string",
        "description": "Distinct type of virtual mac",
        "enum": [
          "ovh",
          "vmware"
        ]
      },
      "dedicated.server.backup.BackupContainer": {
        "type": "object",
        "description": "A structure describing informations about the backup cloud feature",
        "properties": {
          "cloudProject": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.backup.BackupProject"
              }
            ],
            "description": "/cloud project which the container belongs to.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Container id (can also be used to retrieve the resource in the /cloud api).",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Container name.",
            "nullable": true
          },
          "quota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.backup.BackupQuota"
              }
            ],
            "description": "Quota on the current container",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "The cloud region which the container belongs to.",
            "nullable": true
          },
          "sftp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.backup.BackupSftp"
              }
            ],
            "description": "Sftp connection info",
            "nullable": true
          },
          "swift": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.backup.BackupSwift"
              }
            ],
            "description": "Swift related information to reach the container",
            "nullable": true
          }
        }
      },
      "dedicated.server.backup.BackupOffer": {
        "type": "object",
        "description": "Backup cloud offer description for a dedicated server",
        "properties": {
          "maxArchive": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Archive container max size.",
            "nullable": true
          },
          "maxBandwidthArchive": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Archive volume r/w bandwidth limit: read/write volume offered per month on the container.",
            "nullable": true
          },
          "maxBandwidthStorage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Storage volume r/w bandwidth limit: read/write volume offered per month on the container.",
            "nullable": true
          },
          "maxStorage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Storage container max size.",
            "nullable": true
          }
        }
      },
      "dedicated.server.backup.BackupPassword": {
        "type": "object",
        "description": "A structure describing regenerated passwords",
        "properties": {
          "sftpArchive": {
            "type": "string",
            "description": "Password to reach the archive container through the sftp gw.",
            "nullable": true,
            "format": "password"
          },
          "sftpStorage": {
            "type": "string",
            "description": "Password to reach the storage container through the sftp gw.",
            "nullable": true,
            "format": "password"
          },
          "swiftArchive": {
            "type": "string",
            "description": "Password to reach the archive container through swift.",
            "nullable": true,
            "format": "password"
          },
          "swiftStorage": {
            "type": "string",
            "description": "Password to reach the storage container through swift.",
            "nullable": true,
            "format": "password"
          }
        }
      },
      "dedicated.server.backup.BackupProject": {
        "type": "object",
        "description": "Cloud project struct.",
        "properties": {
          "description": {
            "type": "string",
            "description": "Project description.",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "description": "Project id.",
            "nullable": true
          }
        }
      },
      "dedicated.server.backup.BackupQuota": {
        "type": "object",
        "description": "A structure describing quota associated to the current container",
        "properties": {
          "maxBandwidth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Volume r/w bandwidth limit: read/write volume offered per month on the container.",
            "nullable": true
          },
          "maxStorage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Container max size.",
            "nullable": true
          },
          "storageUsed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Volume usage.",
            "nullable": true
          },
          "usagePercent": {
            "type": "number",
            "description": "Volume usage in percent",
            "nullable": true
          }
        }
      },
      "dedicated.server.backup.BackupSftp": {
        "type": "object",
        "description": "A structure describing the SFTP access to a container",
        "properties": {
          "password": {
            "type": "string",
            "description": "Sftp password.",
            "nullable": true,
            "format": "password"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Username",
            "nullable": true
          }
        }
      },
      "dedicated.server.backup.BackupStatus": {
        "type": "object",
        "description": "A structure describing the status of your backup",
        "properties": {
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.backup.BackupStatusCodeEnum"
              }
            ],
            "description": "Status code"
          },
          "reason": {
            "type": "string",
            "description": "Status code reason (when not ok)",
            "nullable": true
          }
        }
      },
      "dedicated.server.backup.BackupStatusCodeEnum": {
        "type": "string",
        "description": "Possible values for backup status code",
        "enum": [
          "DELETING",
          "ERROR",
          "OK",
          "SUSPENDED",
          "SUSPENDING",
          "UNKNOWN",
          "WAITING_AGREEMENTS_VALIDATION"
        ]
      },
      "dedicated.server.backup.BackupSwift": {
        "type": "object",
        "description": "A structure describing the information related to Openstack to reach the container.",
        "properties": {
          "authUrl": {
            "type": "string",
            "description": "Auth url.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Openstack password.",
            "nullable": true,
            "format": "password"
          },
          "username": {
            "type": "string",
            "description": "Openstack username to use swift.",
            "nullable": true
          }
        }
      },
      "dedicated.server.kvm": {
        "type": "object",
        "description": "Physical KVM",
        "properties": {
          "expiration": {
            "type": "string",
            "description": "KVM expiration date",
            "format": "date-time",
            "readOnly": true
          },
          "ip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "KVM access ip",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "KVM hostname",
            "readOnly": true
          }
        }
      },
      "dedicated.server.netbootOption": {
        "type": "object",
        "description": "Available boot options",
        "properties": {
          "option": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.BootOptionEnum"
              }
            ],
            "description": "The option of this boot",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "description": "the value of this option",
            "readOnly": true
          }
        }
      },
      "dedicated.server.reinstall.Customizations": {
        "type": "object",
        "description": "OS reinstallation customizations",
        "properties": {
          "configDriveUserData": {
            "type": "string",
            "description": "Config Drive UserData"
          },
          "efiBootloaderPath": {
            "type": "string",
            "description": "Path of the EFI bootloader from the OS installed on the server"
          },
          "hostname": {
            "type": "string",
            "description": "Custom hostname"
          },
          "httpHeaders": {
            "type": "object",
            "description": "Image HTTP Headers",
            "additionalProperties": {
              "type": "string",
              "format": "password"
            }
          },
          "imageCheckSum": {
            "type": "string",
            "description": "Image checksum"
          },
          "imageCheckSumType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.customizations.ImageCheckSumTypeEnum"
              }
            ],
            "description": "Checksum type"
          },
          "imageType": {
            "$ref": "#/components/schemas/dedicated.server.reinstall.customizations.ImageTypeEnum",
            "description": "Image Type"
          },
          "imageURL": {
            "type": "string",
            "description": "Image URL"
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.customizations.LanguageEnum"
              }
            ],
            "description": "Display Language"
          },
          "postInstallationScript": {
            "type": "string",
            "description": "Post-Installation Script"
          },
          "postInstallationScriptExtension": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.customizations.PostInstallationScriptExtensionEnum"
              }
            ],
            "description": "Post-Installation Script File Extension"
          },
          "sshKey": {
            "type": "string",
            "description": "SSH Public Key"
          }
        }
      },
      "dedicated.server.reinstall.Storage": {
        "type": "object",
        "description": "OS reinstallation storage configuration",
        "properties": {
          "diskGroupId": {
            "type": "integer",
            "description": "Disk group id (default is 0, meaning automatic)"
          },
          "hardwareRaid": {
            "type": "array",
            "description": "Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode)",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.reinstall.storage.HardwareRaid"
            }
          },
          "partitioning": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.storage.Partitioning"
              }
            ],
            "description": "Partitioning configuration"
          }
        }
      },
      "dedicated.server.reinstall.customizations.ImageCheckSumTypeEnum": {
        "type": "string",
        "description": "Checksum type",
        "enum": [
          "md5",
          "sha1",
          "sha256",
          "sha512"
        ]
      },
      "dedicated.server.reinstall.customizations.ImageTypeEnum": {
        "type": "string",
        "description": "Image Type",
        "enum": [
          "qcow2",
          "raw"
        ]
      },
      "dedicated.server.reinstall.customizations.LanguageEnum": {
        "type": "string",
        "description": "Display Language",
        "enum": [
          "cs-cz",
          "de-de",
          "en-us",
          "es-es",
          "fr-fr",
          "it-it",
          "nl-nl",
          "pl-pl",
          "pt-pt"
        ]
      },
      "dedicated.server.reinstall.customizations.PostInstallationScriptExtensionEnum": {
        "type": "string",
        "description": "Post-Installation Script File Extension",
        "enum": [
          "cmd",
          "ps1"
        ]
      },
      "dedicated.server.reinstall.storage.HardwareRaid": {
        "type": "object",
        "description": "Hardware Raid configuration",
        "properties": {
          "arrays": {
            "type": "integer",
            "description": "Number of arrays (default is 1)"
          },
          "disks": {
            "type": "integer",
            "description": "Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)"
          },
          "raidLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.storage.hardwareRaid.RaidLevelEnum"
              }
            ],
            "description": "Hardware raid type (default is 1)"
          },
          "spares": {
            "type": "integer",
            "description": "Number of disks in the disk group involved in the spare (default is 0)"
          }
        }
      },
      "dedicated.server.reinstall.storage.Partitioning": {
        "type": "object",
        "description": "Partitioning configuration",
        "properties": {
          "disks": {
            "type": "integer",
            "description": "Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)"
          },
          "layout": {
            "type": "array",
            "description": "Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme)",
            "items": {
              "$ref": "#/components/schemas/dedicated.server.reinstall.storage.partitioning.Layout"
            }
          },
          "schemeName": {
            "type": "string",
            "description": "Partitioning scheme (if applicable with selected operating system)"
          }
        }
      },
      "dedicated.server.reinstall.storage.hardwareRaid.RaidLevelEnum": {
        "type": "integer",
        "description": "Hardware raid types",
        "enum": [
          0,
          1,
          5,
          6,
          10,
          50,
          60
        ]
      },
      "dedicated.server.reinstall.storage.partitioning.Layout": {
        "type": "object",
        "description": "Custom partition parameters",
        "properties": {
          "extras": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.storage.partitioning.layout.Extras"
              }
            ],
            "description": "Partition extras parameters"
          },
          "fileSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.storage.partitioning.layout.FileSystemEnum"
              }
            ],
            "description": "File system type"
          },
          "mountPoint": {
            "type": "string",
            "description": "Mount point"
          },
          "raidLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.storage.partitioning.layout.RaidLevelEnum"
              }
            ],
            "description": "Software raid type (default is 1)"
          },
          "size": {
            "type": "integer",
            "description": "Partition size in MiB (default value is 0 which means to fill the disk with that partition)"
          }
        },
        "required": [
          "fileSystem",
          "mountPoint"
        ]
      },
      "dedicated.server.reinstall.storage.partitioning.layout.Extras": {
        "type": "object",
        "description": "Partition extras parameters",
        "properties": {
          "lv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.storage.partitioning.layout.extras.Lv"
              }
            ],
            "description": "LVM-specific parameters"
          },
          "zp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.reinstall.storage.partitioning.layout.extras.Zp"
              }
            ],
            "description": "ZFS-specific parameters"
          }
        }
      },
      "dedicated.server.reinstall.storage.partitioning.layout.FileSystemEnum": {
        "type": "string",
        "description": "File system types",
        "enum": [
          "btrfs",
          "ext3",
          "ext4",
          "fat16",
          "none",
          "ntfs",
          "reiserfs",
          "swap",
          "ufs",
          "vmfs5",
          "vmfs6",
          "vmfsl",
          "xfs",
          "zfs"
        ]
      },
      "dedicated.server.reinstall.storage.partitioning.layout.RaidLevelEnum": {
        "type": "integer",
        "description": "Software raid types",
        "enum": [
          0,
          1,
          5,
          6,
          7,
          10
        ]
      },
      "dedicated.server.reinstall.storage.partitioning.layout.extras.Lv": {
        "type": "object",
        "description": "LVM-specific parameters",
        "properties": {
          "name": {
            "type": "string",
            "description": "Logical volume name"
          }
        }
      },
      "dedicated.server.reinstall.storage.partitioning.layout.extras.Zp": {
        "type": "object",
        "description": "ZFS-specific parameters",
        "properties": {
          "name": {
            "type": "string",
            "description": "zpool name (generated automatically if not specified, note that multiple ZFS partitions with same zpool names will be configured as multiple datasets belonging to the same zpool if compatible)"
          }
        }
      },
      "dedicated.server.spla": {
        "type": "object",
        "description": "SPLA licenses management",
        "properties": {
          "id": {
            "type": "integer",
            "description": "License id",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Last update timestamp",
            "format": "date-time",
            "readOnly": true
          },
          "serialNumber": {
            "type": "string",
            "description": "License serial number"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.SplaStatusEnum"
              }
            ],
            "description": "Status of license",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.SplaTypeEnum"
              }
            ],
            "description": "License type",
            "readOnly": true
          }
        }
      },
      "dedicated.server.task.FunctionEnum": {
        "type": "string",
        "description": "Task operation types",
        "enum": [
          "INFRA_002_VirtualNetworkInterface",
          "INFRA_002_VirtualNetworkInterface_group",
          "INFRA_002_VirtualNetworkInterface_ungroup",
          "INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_group",
          "INFRA_ONE_NETWORK_ONEAPI_VirtualNetworkInterface_ungroup",
          "INFRA_ONE_NETWORK_VirtualNetworkInterface_group",
          "INFRA_ONE_NETWORK_VirtualNetworkInterface_ungroup",
          "addVirtualMac",
          "addWindowSplaFromExistingSerial",
          "applyBackupFtpAcls",
          "applyBackupFtpQuota",
          "bypassAntiDDosGame",
          "changePasswordBackupFTP",
          "changeRipeOrg",
          "checkAndReleaseIp",
          "createBackupFTP",
          "createOrUpdateRipeOrg",
          "createPrivateNetwork",
          "disableFirewall",
          "enableFirewall",
          "genericMoveFloatingIp",
          "hardReboot",
          "hardware_update",
          "ipmi/configureSGX",
          "migrateBackupFTP",
          "moveFloatingIp",
          "moveVirtualMac",
          "reagregateBlock",
          "rebootPower8To",
          "reinstallServer",
          "releaseIp",
          "removeBackupFTP",
          "removeVirtualMac",
          "requestAccessIPMI",
          "resetIPMI",
          "resetIPMISession",
          "testIPMIhttp",
          "testIPMIpassword",
          "testIPMIping",
          "virtualMacAdd",
          "virtualMacDelete"
        ]
      },
      "dedicated.server.task.Response": {
        "type": "object",
        "description": "Dedicated server task",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Details of this task",
            "readOnly": true
          },
          "doneDate": {
            "type": "string",
            "description": "Task Completion date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "function": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.task.FunctionEnum"
              }
            ],
            "description": "Task operation type",
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "description": "Task Creation date",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.server.task.StatusEnum"
              }
            ],
            "description": "Task status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "Task id",
            "readOnly": true
          }
        }
      },
      "dedicated.server.task.StatusEnum": {
        "type": "string",
        "description": "Task statuses",
        "enum": [
          "cancelled",
          "customerError",
          "doing",
          "done",
          "init",
          "ovhError",
          "todo"
        ]
      },
      "dedicated.virtualNetworkInterface.VirtualNetworkInterface": {
        "type": "object",
        "description": "Your VirtualNetworkInterface",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "VirtualNetworkInterface activation state",
            "readOnly": true
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dedicated.virtualNetworkInterface.VirtualNetworkInterfaceModeEnum"
              }
            ],
            "description": "VirtualNetworkInterface mode"
          },
          "name": {
            "type": "string",
            "description": "User defined VirtualNetworkInterface name"
          },
          "networkInterfaceController": {
            "type": "array",
            "description": "NetworkInterfaceControllers bound to this VirtualNetworkInterface",
            "items": {
              "$ref": "#/components/schemas/macAddress"
            },
            "readOnly": true
          },
          "serverName": {
            "type": "string",
            "description": "Server bound to this VirtualNetworkInterface",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "description": "VirtualNetworkInterface unique id",
            "format": "uuid",
            "readOnly": true
          },
          "vrack": {
            "type": "string",
            "description": "vRack name",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "dedicated.virtualNetworkInterface.VirtualNetworkInterfaceModeEnum": {
        "type": "string",
        "description": "Available VirtualNetworkInterface modes",
        "enum": [
          "public",
          "public_aggregation",
          "vrack",
          "vrack_aggregation"
        ]
      },
      "duration": {
        "type": "string",
        "description": "Duration (e.g., P1Y2M3DT4H6M9S)",
        "example": "P1Y2M3DT4H6M9S"
      },
      "email": {
        "type": "string",
        "description": "Email address (e.g., api@ml.ovh.net)",
        "format": "email",
        "example": "api@ml.ovh.net"
      },
      "iam.ResourceMetadata": {
        "type": "object",
        "description": "IAM resource metadata embedded in services models",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Resource display name",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the resource",
            "format": "uuid",
            "readOnly": true
          },
          "tags": {
            "type": "object",
            "description": "Resource tags. Tags that were internally computed are prefixed with ovh:",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            },
            "readOnly": true
          },
          "urn": {
            "type": "string",
            "description": "Unique resource name used in policies",
            "readOnly": true
          }
        }
      },
      "iam.resource.TagFilter": {
        "type": "object",
        "description": "Resource tag filter",
        "properties": {
          "operator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.resource.TagFilter.OperatorEnum"
              }
            ],
            "description": "Operator to use in order to filter on the value (defaults to 'EQ')",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "description": "Value to use in order to filter tags",
            "readOnly": true
          }
        }
      },
      "iam.resource.TagFilter.OperatorEnum": {
        "type": "string",
        "description": "Operator that can be used in order to filter resources tags",
        "enum": [
          "EQ",
          "EXISTS",
          "ILIKE",
          "LIKE",
          "NEQ",
          "NEXISTS"
        ]
      },
      "internationalPhoneNumber": {
        "type": "string",
        "description": "International phone number",
        "format": "phone-number"
      },
      "ip": {
        "type": "string",
        "description": "IP address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipBlock": {
        "type": "string",
        "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)",
        "format": "ip-block",
        "example": "192.0.2.0/24"
      },
      "ipInterface": {
        "type": "string",
        "description": "IP address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipv4": {
        "type": "string",
        "description": "IPv4 address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipv4Block": {
        "type": "string",
        "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)",
        "format": "ipv4-block",
        "example": "192.0.2.0/24"
      },
      "ipv6": {
        "type": "string",
        "description": "IPv6 address (e.g., 2001:41d0:1:1994::1)",
        "format": "ipv6",
        "example": "2001:41d0:1:1994::1"
      },
      "ipv6Block": {
        "type": "string",
        "description": "IPv6 CIDR notation (e.g., 2001:41d0::/128)",
        "format": "ipv6-block",
        "example": "2001:41d0::/128"
      },
      "license.WindowsOsVersionEnum": {
        "type": "string",
        "description": "All versions for Windows products",
        "enum": [
          "WINDOWS_SERVER_2003_ENTERPRISE_EDITION",
          "WINDOWS_SERVER_2003_ENTERPRISE_EDITION_2_CPU",
          "WINDOWS_SERVER_2003_STANDARD_EDITION",
          "WINDOWS_SERVER_2003_WEB_EDITION",
          "WINDOWS_SERVER_2003_WEB_EDITION_2_CPU",
          "WINDOWS_SERVER_2003_WEB_ENHANCED_EDITION",
          "WINDOWS_SERVER_2003_WEB_STANDARD_EDITION",
          "WINDOWS_SERVER_2003_WEB_STANDARD_EDITION_2_CPU",
          "WINDOWS_SERVER_2008_DATACENTER_EDITION",
          "WINDOWS_SERVER_2008_DATACENTER_EDITION_2_CPU",
          "WINDOWS_SERVER_2008_DATACENTER_EDITION_4_CPU",
          "WINDOWS_SERVER_2008_ENTERPRISE_EDITION",
          "WINDOWS_SERVER_2008_ENTERPRISE_EDITION_2_CPU",
          "WINDOWS_SERVER_2008_ENTERPRISE_EDITION_4_CPU",
          "WINDOWS_SERVER_2008_STANDARD_EDITION",
          "WINDOWS_SERVER_2008_STANDARD_EDITION_2_CPU",
          "WINDOWS_SERVER_2008_STANDARD_EDITION_4_CPU",
          "WINDOWS_SERVER_2008_WEB_EDITION",
          "WINDOWS_SERVER_2008_WEB_EDITION_2_CPU",
          "WINDOWS_SERVER_2008_WEB_EDITION_4_CPU",
          "WINDOWS_SERVER_2008_WEB_STANDARD_EDITION",
          "WINDOWS_SERVER_2012_DATACENTER_EDITION",
          "WINDOWS_SERVER_2012_DATACENTER_EDITION_2_CPU",
          "WINDOWS_SERVER_2012_DATACENTER_EDITION_4_CPU",
          "WINDOWS_SERVER_2012_ENTERPRISE_EDITION",
          "WINDOWS_SERVER_2012_ENTERPRISE_EDITION_2_CPU",
          "WINDOWS_SERVER_2012_STANDARD_EDITION",
          "WINDOWS_SERVER_2012_STANDARD_EDITION_2_CPU",
          "WINDOWS_SERVER_2012_STANDARD_EDITION_4_CPU",
          "WINDOWS_SERVER_2012_WEB_EDITION",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_10_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_12_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_14_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_16_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_18_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_20_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_22_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_24_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_32_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_48_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_64_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_1_CPU_8_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_10_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_12_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_14_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_16_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_18_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_20_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_22_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_24_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_32_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_2_CPU_8_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_10_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_12_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_14_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_16_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_18_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_20_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_22_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_24_CORES",
          "WINDOWS_SERVER_2016_DATACENTER_EDITION_4_CPU_8_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_10_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_12_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_14_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_16_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_18_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_20_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_22_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_24_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_32_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_48_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_64_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_1_CPU_8_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_10_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_12_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_14_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_16_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_18_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_20_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_22_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_24_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_32_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_2_CPU_8_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_10_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_12_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_14_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_16_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_18_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_20_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_22_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_24_CORES",
          "WINDOWS_SERVER_2016_STANDARD_EDITION_4_CPU_8_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_10_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_128_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_12_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_14_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_16_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_18_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_20_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_22_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_24_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_256_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_26_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_28_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_30_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_32_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_34_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_36_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_38_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_40_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_42_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_44_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_46_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_48_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_50_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_512_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_52_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_54_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_56_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_58_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_60_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_62_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_64_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_72_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_8_CORES",
          "WINDOWS_SERVER_2019_DATACENTER_EDITION_96_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_10_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_128_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_12_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_14_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_16_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_18_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_20_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_22_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_24_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_256_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_26_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_28_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_30_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_32_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_34_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_36_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_38_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_40_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_42_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_44_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_46_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_48_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_50_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_512_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_52_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_54_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_56_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_58_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_60_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_62_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_64_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_72_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_8_CORES",
          "WINDOWS_SERVER_2019_STANDARD_EDITION_96_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_10_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_128_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_12_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_14_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_16_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_18_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_20_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_22_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_24_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_256_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_26_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_28_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_30_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_32_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_34_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_36_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_38_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_40_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_42_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_44_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_46_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_48_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_50_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_512_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_52_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_54_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_56_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_58_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_60_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_62_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_64_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_72_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_8_CORES",
          "WINDOWS_SERVER_2022_DATACENTER_EDITION_96_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_10_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_128_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_12_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_14_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_16_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_18_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_20_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_22_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_24_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_256_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_26_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_28_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_30_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_32_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_34_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_36_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_38_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_40_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_42_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_44_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_46_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_48_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_50_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_512_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_52_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_54_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_56_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_58_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_60_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_62_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_64_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_72_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_8_CORES",
          "WINDOWS_SERVER_2022_STANDARD_EDITION_96_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_10_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_128_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_12_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_14_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_16_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_18_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_20_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_22_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_24_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_256_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_26_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_28_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_30_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_32_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_34_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_36_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_38_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_40_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_42_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_44_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_46_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_48_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_50_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_512_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_52_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_54_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_56_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_58_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_60_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_62_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_64_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_72_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_8_CORES",
          "WINDOWS_SERVER_2025_DATACENTER_EDITION_96_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_10_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_128_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_12_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_14_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_16_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_18_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_20_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_22_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_24_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_256_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_26_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_28_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_30_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_32_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_34_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_36_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_38_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_40_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_42_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_44_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_46_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_48_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_50_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_512_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_52_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_54_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_56_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_58_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_60_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_62_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_64_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_72_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_8_CORES",
          "WINDOWS_SERVER_2025_STANDARD_EDITION_96_CORES",
          "windows-server-2008-license-datacenter-edition-1-cpu",
          "windows-server-2008-license-datacenter-edition-2-cpu",
          "windows-server-2008-license-datacenter-edition-4-cpu",
          "windows-server-2008-license-enterprise-edition-1-cpu",
          "windows-server-2008-license-enterprise-edition-2-cpu",
          "windows-server-2008-license-enterprise-edition-4-cpu",
          "windows-server-2008-license-standard-edition-1-cpu",
          "windows-server-2008-license-standard-edition-2-cpu",
          "windows-server-2008-license-standard-edition-4-cpu",
          "windows-server-2008-license-web-edition-1-cpu",
          "windows-server-2008-license-web-edition-2-cpu",
          "windows-server-2008-license-web-edition-4-cpu",
          "windows-server-2012-license-datacenter-edition-1-cpu",
          "windows-server-2012-license-datacenter-edition-2-cpu",
          "windows-server-2012-license-datacenter-edition-4-cpu",
          "windows-server-2012-license-standard-edition-1-cpu",
          "windows-server-2012-license-standard-edition-2-cpu",
          "windows-server-2012-license-standard-edition-4-cpu",
          "windows-server-2016-license-datacenter-edition-1-cpu-10-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-12-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-14-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-16-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-18-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-20-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-22-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-24-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-32-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-48-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-64-cores",
          "windows-server-2016-license-datacenter-edition-1-cpu-8-cores",
          "windows-server-2016-license-datacenter-edition-2-cpu-10-cores",
          "windows-server-2016-license-datacenter-edition-2-cpu-12-cores",
          "windows-server-2016-license-datacenter-edition-2-cpu-14-cores",
          "windows-server-2016-license-datacenter-edition-2-cpu-16-cores",
          "windows-server-2016-license-datacenter-edition-2-cpu-18-cores",
          "windows-server-2016-license-datacenter-edition-2-cpu-20-cores",
          "windows-server-2016-license-datacenter-edition-2-cpu-22-cores",
          "windows-server-2016-license-datacenter-edition-2-cpu-24-cores",
          "windows-server-2016-license-datacenter-edition-2-cpu-32-cores",
          "windows-server-2016-license-datacenter-edition-2-cpu-8-cores",
          "windows-server-2016-license-datacenter-edition-4-cpu-10-cores",
          "windows-server-2016-license-datacenter-edition-4-cpu-12-cores",
          "windows-server-2016-license-datacenter-edition-4-cpu-14-cores",
          "windows-server-2016-license-datacenter-edition-4-cpu-16-cores",
          "windows-server-2016-license-datacenter-edition-4-cpu-18-cores",
          "windows-server-2016-license-datacenter-edition-4-cpu-20-cores",
          "windows-server-2016-license-datacenter-edition-4-cpu-22-cores",
          "windows-server-2016-license-datacenter-edition-4-cpu-24-cores",
          "windows-server-2016-license-datacenter-edition-4-cpu-8-cores",
          "windows-server-2016-license-standard-edition-1-cpu-10-cores",
          "windows-server-2016-license-standard-edition-1-cpu-12-cores",
          "windows-server-2016-license-standard-edition-1-cpu-14-cores",
          "windows-server-2016-license-standard-edition-1-cpu-16-cores",
          "windows-server-2016-license-standard-edition-1-cpu-18-cores",
          "windows-server-2016-license-standard-edition-1-cpu-20-cores",
          "windows-server-2016-license-standard-edition-1-cpu-22-cores",
          "windows-server-2016-license-standard-edition-1-cpu-24-cores",
          "windows-server-2016-license-standard-edition-1-cpu-32-cores",
          "windows-server-2016-license-standard-edition-1-cpu-48-cores",
          "windows-server-2016-license-standard-edition-1-cpu-64-cores",
          "windows-server-2016-license-standard-edition-1-cpu-8-cores",
          "windows-server-2016-license-standard-edition-2-cpu-10-cores",
          "windows-server-2016-license-standard-edition-2-cpu-12-cores",
          "windows-server-2016-license-standard-edition-2-cpu-14-cores",
          "windows-server-2016-license-standard-edition-2-cpu-16-cores",
          "windows-server-2016-license-standard-edition-2-cpu-18-cores",
          "windows-server-2016-license-standard-edition-2-cpu-20-cores",
          "windows-server-2016-license-standard-edition-2-cpu-22-cores",
          "windows-server-2016-license-standard-edition-2-cpu-24-cores",
          "windows-server-2016-license-standard-edition-2-cpu-32-cores",
          "windows-server-2016-license-standard-edition-2-cpu-8-cores",
          "windows-server-2016-license-standard-edition-4-cpu-10-cores",
          "windows-server-2016-license-standard-edition-4-cpu-12-cores",
          "windows-server-2016-license-standard-edition-4-cpu-14-cores",
          "windows-server-2016-license-standard-edition-4-cpu-16-cores",
          "windows-server-2016-license-standard-edition-4-cpu-18-cores",
          "windows-server-2016-license-standard-edition-4-cpu-20-cores",
          "windows-server-2016-license-standard-edition-4-cpu-22-cores",
          "windows-server-2016-license-standard-edition-4-cpu-24-cores",
          "windows-server-2016-license-standard-edition-4-cpu-8-cores",
          "windows-server-2019-license-datacenter-edition-10-cores",
          "windows-server-2019-license-datacenter-edition-12-cores",
          "windows-server-2019-license-datacenter-edition-128-cores",
          "windows-server-2019-license-datacenter-edition-14-cores",
          "windows-server-2019-license-datacenter-edition-16-cores",
          "windows-server-2019-license-datacenter-edition-18-cores",
          "windows-server-2019-license-datacenter-edition-20-cores",
          "windows-server-2019-license-datacenter-edition-22-cores",
          "windows-server-2019-license-datacenter-edition-24-cores",
          "windows-server-2019-license-datacenter-edition-256-cores",
          "windows-server-2019-license-datacenter-edition-26-cores",
          "windows-server-2019-license-datacenter-edition-28-cores",
          "windows-server-2019-license-datacenter-edition-30-cores",
          "windows-server-2019-license-datacenter-edition-32-cores",
          "windows-server-2019-license-datacenter-edition-34-cores",
          "windows-server-2019-license-datacenter-edition-36-cores",
          "windows-server-2019-license-datacenter-edition-38-cores",
          "windows-server-2019-license-datacenter-edition-40-cores",
          "windows-server-2019-license-datacenter-edition-42-cores",
          "windows-server-2019-license-datacenter-edition-44-cores",
          "windows-server-2019-license-datacenter-edition-46-cores",
          "windows-server-2019-license-datacenter-edition-48-cores",
          "windows-server-2019-license-datacenter-edition-50-cores",
          "windows-server-2019-license-datacenter-edition-512-cores",
          "windows-server-2019-license-datacenter-edition-52-cores",
          "windows-server-2019-license-datacenter-edition-54-cores",
          "windows-server-2019-license-datacenter-edition-56-cores",
          "windows-server-2019-license-datacenter-edition-58-cores",
          "windows-server-2019-license-datacenter-edition-60-cores",
          "windows-server-2019-license-datacenter-edition-62-cores",
          "windows-server-2019-license-datacenter-edition-64-cores",
          "windows-server-2019-license-datacenter-edition-72-cores",
          "windows-server-2019-license-datacenter-edition-8-cores",
          "windows-server-2019-license-datacenter-edition-96-cores",
          "windows-server-2019-license-standard-edition-10-cores",
          "windows-server-2019-license-standard-edition-12-cores",
          "windows-server-2019-license-standard-edition-128-cores",
          "windows-server-2019-license-standard-edition-14-cores",
          "windows-server-2019-license-standard-edition-16-cores",
          "windows-server-2019-license-standard-edition-18-cores",
          "windows-server-2019-license-standard-edition-20-cores",
          "windows-server-2019-license-standard-edition-22-cores",
          "windows-server-2019-license-standard-edition-24-cores",
          "windows-server-2019-license-standard-edition-256-cores",
          "windows-server-2019-license-standard-edition-26-cores",
          "windows-server-2019-license-standard-edition-28-cores",
          "windows-server-2019-license-standard-edition-30-cores",
          "windows-server-2019-license-standard-edition-32-cores",
          "windows-server-2019-license-standard-edition-34-cores",
          "windows-server-2019-license-standard-edition-36-cores",
          "windows-server-2019-license-standard-edition-38-cores",
          "windows-server-2019-license-standard-edition-40-cores",
          "windows-server-2019-license-standard-edition-42-cores",
          "windows-server-2019-license-standard-edition-44-cores",
          "windows-server-2019-license-standard-edition-46-cores",
          "windows-server-2019-license-standard-edition-48-cores",
          "windows-server-2019-license-standard-edition-50-cores",
          "windows-server-2019-license-standard-edition-512-cores",
          "windows-server-2019-license-standard-edition-52-cores",
          "windows-server-2019-license-standard-edition-54-cores",
          "windows-server-2019-license-standard-edition-56-cores",
          "windows-server-2019-license-standard-edition-58-cores",
          "windows-server-2019-license-standard-edition-60-cores",
          "windows-server-2019-license-standard-edition-62-cores",
          "windows-server-2019-license-standard-edition-64-cores",
          "windows-server-2019-license-standard-edition-72-cores",
          "windows-server-2019-license-standard-edition-8-cores",
          "windows-server-2019-license-standard-edition-96-cores",
          "windows-server-2022-license-datacenter-edition-10-cores",
          "windows-server-2022-license-datacenter-edition-12-cores",
          "windows-server-2022-license-datacenter-edition-128-cores",
          "windows-server-2022-license-datacenter-edition-14-cores",
          "windows-server-2022-license-datacenter-edition-16-cores",
          "windows-server-2022-license-datacenter-edition-18-cores",
          "windows-server-2022-license-datacenter-edition-20-cores",
          "windows-server-2022-license-datacenter-edition-22-cores",
          "windows-server-2022-license-datacenter-edition-24-cores",
          "windows-server-2022-license-datacenter-edition-256-cores",
          "windows-server-2022-license-datacenter-edition-26-cores",
          "windows-server-2022-license-datacenter-edition-28-cores",
          "windows-server-2022-license-datacenter-edition-30-cores",
          "windows-server-2022-license-datacenter-edition-32-cores",
          "windows-server-2022-license-datacenter-edition-34-cores",
          "windows-server-2022-license-datacenter-edition-36-cores",
          "windows-server-2022-license-datacenter-edition-38-cores",
          "windows-server-2022-license-datacenter-edition-40-cores",
          "windows-server-2022-license-datacenter-edition-42-cores",
          "windows-server-2022-license-datacenter-edition-44-cores",
          "windows-server-2022-license-datacenter-edition-46-cores",
          "windows-server-2022-license-datacenter-edition-48-cores",
          "windows-server-2022-license-datacenter-edition-50-cores",
          "windows-server-2022-license-datacenter-edition-512-cores",
          "windows-server-2022-license-datacenter-edition-52-cores",
          "windows-server-2022-license-datacenter-edition-54-cores",
          "windows-server-2022-license-datacenter-edition-56-cores",
          "windows-server-2022-license-datacenter-edition-58-cores",
          "windows-server-2022-license-datacenter-edition-60-cores",
          "windows-server-2022-license-datacenter-edition-62-cores",
          "windows-server-2022-license-datacenter-edition-64-cores",
          "windows-server-2022-license-datacenter-edition-72-cores",
          "windows-server-2022-license-datacenter-edition-8-cores",
          "windows-server-2022-license-datacenter-edition-96-cores",
          "windows-server-2022-license-standard-edition-10-cores",
          "windows-server-2022-license-standard-edition-12-cores",
          "windows-server-2022-license-standard-edition-128-cores",
          "windows-server-2022-license-standard-edition-14-cores",
          "windows-server-2022-license-standard-edition-16-cores",
          "windows-server-2022-license-standard-edition-18-cores",
          "windows-server-2022-license-standard-edition-20-cores",
          "windows-server-2022-license-standard-edition-22-cores",
          "windows-server-2022-license-standard-edition-24-cores",
          "windows-server-2022-license-standard-edition-256-cores",
          "windows-server-2022-license-standard-edition-26-cores",
          "windows-server-2022-license-standard-edition-28-cores",
          "windows-server-2022-license-standard-edition-30-cores",
          "windows-server-2022-license-standard-edition-32-cores",
          "windows-server-2022-license-standard-edition-34-cores",
          "windows-server-2022-license-standard-edition-36-cores",
          "windows-server-2022-license-standard-edition-38-cores",
          "windows-server-2022-license-standard-edition-40-cores",
          "windows-server-2022-license-standard-edition-42-cores",
          "windows-server-2022-license-standard-edition-44-cores",
          "windows-server-2022-license-standard-edition-46-cores",
          "windows-server-2022-license-standard-edition-48-cores",
          "windows-server-2022-license-standard-edition-50-cores",
          "windows-server-2022-license-standard-edition-512-cores",
          "windows-server-2022-license-standard-edition-52-cores",
          "windows-server-2022-license-standard-edition-54-cores",
          "windows-server-2022-license-standard-edition-56-cores",
          "windows-server-2022-license-standard-edition-58-cores",
          "windows-server-2022-license-standard-edition-60-cores",
          "windows-server-2022-license-standard-edition-62-cores",
          "windows-server-2022-license-standard-edition-64-cores",
          "windows-server-2022-license-standard-edition-72-cores",
          "windows-server-2022-license-standard-edition-8-cores",
          "windows-server-2022-license-standard-edition-96-cores",
          "windows-server-2025-license-datacenter-edition-10-cores",
          "windows-server-2025-license-datacenter-edition-12-cores",
          "windows-server-2025-license-datacenter-edition-128-cores",
          "windows-server-2025-license-datacenter-edition-14-cores",
          "windows-server-2025-license-datacenter-edition-16-cores",
          "windows-server-2025-license-datacenter-edition-18-cores",
          "windows-server-2025-license-datacenter-edition-20-cores",
          "windows-server-2025-license-datacenter-edition-22-cores",
          "windows-server-2025-license-datacenter-edition-24-cores",
          "windows-server-2025-license-datacenter-edition-256-cores",
          "windows-server-2025-license-datacenter-edition-26-cores",
          "windows-server-2025-license-datacenter-edition-28-cores",
          "windows-server-2025-license-datacenter-edition-30-cores",
          "windows-server-2025-license-datacenter-edition-32-cores",
          "windows-server-2025-license-datacenter-edition-34-cores",
          "windows-server-2025-license-datacenter-edition-36-cores",
          "windows-server-2025-license-datacenter-edition-38-cores",
          "windows-server-2025-license-datacenter-edition-40-cores",
          "windows-server-2025-license-datacenter-edition-42-cores",
          "windows-server-2025-license-datacenter-edition-44-cores",
          "windows-server-2025-license-datacenter-edition-46-cores",
          "windows-server-2025-license-datacenter-edition-48-cores",
          "windows-server-2025-license-datacenter-edition-50-cores",
          "windows-server-2025-license-datacenter-edition-512-cores",
          "windows-server-2025-license-datacenter-edition-52-cores",
          "windows-server-2025-license-datacenter-edition-54-cores",
          "windows-server-2025-license-datacenter-edition-56-cores",
          "windows-server-2025-license-datacenter-edition-58-cores",
          "windows-server-2025-license-datacenter-edition-60-cores",
          "windows-server-2025-license-datacenter-edition-62-cores",
          "windows-server-2025-license-datacenter-edition-64-cores",
          "windows-server-2025-license-datacenter-edition-72-cores",
          "windows-server-2025-license-datacenter-edition-8-cores",
          "windows-server-2025-license-datacenter-edition-96-cores",
          "windows-server-2025-license-standard-edition-10-cores",
          "windows-server-2025-license-standard-edition-12-cores",
          "windows-server-2025-license-standard-edition-128-cores",
          "windows-server-2025-license-standard-edition-14-cores",
          "windows-server-2025-license-standard-edition-16-cores",
          "windows-server-2025-license-standard-edition-18-cores",
          "windows-server-2025-license-standard-edition-20-cores",
          "windows-server-2025-license-standard-edition-22-cores",
          "windows-server-2025-license-standard-edition-24-cores",
          "windows-server-2025-license-standard-edition-256-cores",
          "windows-server-2025-license-standard-edition-26-cores",
          "windows-server-2025-license-standard-edition-28-cores",
          "windows-server-2025-license-standard-edition-30-cores",
          "windows-server-2025-license-standard-edition-32-cores",
          "windows-server-2025-license-standard-edition-34-cores",
          "windows-server-2025-license-standard-edition-36-cores",
          "windows-server-2025-license-standard-edition-38-cores",
          "windows-server-2025-license-standard-edition-40-cores",
          "windows-server-2025-license-standard-edition-42-cores",
          "windows-server-2025-license-standard-edition-44-cores",
          "windows-server-2025-license-standard-edition-46-cores",
          "windows-server-2025-license-standard-edition-48-cores",
          "windows-server-2025-license-standard-edition-50-cores",
          "windows-server-2025-license-standard-edition-512-cores",
          "windows-server-2025-license-standard-edition-52-cores",
          "windows-server-2025-license-standard-edition-54-cores",
          "windows-server-2025-license-standard-edition-56-cores",
          "windows-server-2025-license-standard-edition-58-cores",
          "windows-server-2025-license-standard-edition-60-cores",
          "windows-server-2025-license-standard-edition-62-cores",
          "windows-server-2025-license-standard-edition-64-cores",
          "windows-server-2025-license-standard-edition-72-cores",
          "windows-server-2025-license-standard-edition-8-cores",
          "windows-server-2025-license-standard-edition-96-cores"
        ]
      },
      "license.WindowsSqlVersionEnum": {
        "type": "string",
        "description": "All SQL Server versions for Windows products",
        "enum": [
          "SQL_SERVER_2008_STANDARD_EDITION",
          "SQL_SERVER_2008_STANDARD_EDITION_2_CPU",
          "SQL_SERVER_2008_WEB_EDITION",
          "SQL_SERVER_2008_WEB_EDITION_2_CPU",
          "SQL_SERVER_2012_STANDARD_EDITION",
          "SQL_SERVER_2012_STANDARD_EDITION_12_CORES",
          "SQL_SERVER_2012_STANDARD_EDITION_16_CORES",
          "SQL_SERVER_2012_STANDARD_EDITION_18_CORES",
          "SQL_SERVER_2012_STANDARD_EDITION_20_CORES",
          "SQL_SERVER_2012_STANDARD_EDITION_24_CORES",
          "SQL_SERVER_2012_STANDARD_EDITION_2_CPU",
          "SQL_SERVER_2012_STANDARD_EDITION_32_CORES",
          "SQL_SERVER_2012_STANDARD_EDITION_4_CORES",
          "SQL_SERVER_2012_STANDARD_EDITION_6_CORES",
          "SQL_SERVER_2012_STANDARD_EDITION_8_CORES",
          "SQL_SERVER_2012_WEB_EDITION_12_CORES",
          "SQL_SERVER_2012_WEB_EDITION_16_CORES",
          "SQL_SERVER_2012_WEB_EDITION_18_CORES",
          "SQL_SERVER_2012_WEB_EDITION_20_CORES",
          "SQL_SERVER_2012_WEB_EDITION_24_CORES",
          "SQL_SERVER_2012_WEB_EDITION_32_CORES",
          "SQL_SERVER_2012_WEB_EDITION_4_CORES",
          "SQL_SERVER_2012_WEB_EDITION_6_CORES",
          "SQL_SERVER_2012_WEB_EDITION_8_CORES"
        ]
      },
      "macAddress": {
        "type": "string",
        "description": "MAC address (e.g., 2001:4860:4860::8844)",
        "format": "mac-address",
        "example": "2001:4860:4860::8888. 2001:4860:4860::8844"
      },
      "nichandle.OvhSubsidiaryEnum": {
        "type": "string",
        "description": "OVH subsidiaries",
        "enum": [
          "CZ",
          "DE",
          "ES",
          "EU",
          "FI",
          "FR",
          "GB",
          "IE",
          "IT",
          "LT",
          "MA",
          "NL",
          "PL",
          "PT",
          "SN",
          "TN"
        ]
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number",
        "format": "phone-number"
      },
      "secondaryDns.SecondaryDNS": {
        "type": "object",
        "description": "Secondary dns infos",
        "properties": {
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "dns": {
            "type": "string",
            "description": "secondary dns server",
            "readOnly": true
          },
          "domain": {
            "type": "string",
            "description": "domain on slave server",
            "readOnly": true
          },
          "ipMaster": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "master ip"
          }
        }
      },
      "secondaryDns.SecondaryDNSCheckField": {
        "type": "object",
        "description": "A structure describing informations about secondary dns check field",
        "properties": {
          "fieldType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/zone.NamedResolutionFieldTypeEnum"
              }
            ],
            "description": "The field type to add on your DNS zone for this subDomain"
          },
          "fieldValue": {
            "type": "string",
            "description": "The field value to add on your DNS zone for this subDomain"
          },
          "subDomain": {
            "type": "string",
            "description": "The subdomain to add on your DNS zone for the domain"
          }
        }
      },
      "secondaryDns.SecondaryDNSNameServer": {
        "type": "object",
        "description": "A structure describing informations about available nameserver for secondary dns ",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "the name server"
          },
          "ip": {
            "$ref": "#/components/schemas/ipv4"
          },
          "ipv6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6"
              }
            ],
            "nullable": true
          }
        }
      },
      "service.RenewType": {
        "type": "object",
        "description": "Map a possible renew for a specific service",
        "properties": {
          "automatic": {
            "type": "boolean",
            "description": "The service is automatically renewed"
          },
          "deleteAtExpiration": {
            "type": "boolean",
            "description": "The service will be deleted at expiration"
          },
          "forced": {
            "type": "boolean",
            "description": "The service forced to be renewed"
          },
          "manualPayment": {
            "type": "boolean",
            "description": "The service needs to be manually renewed and paid",
            "nullable": true
          },
          "period": {
            "type": "integer",
            "description": "period of renew in month",
            "nullable": true
          }
        }
      },
      "service.RenewalTypeEnum": {
        "type": "string",
        "description": "Detailed renewal type of a service",
        "enum": [
          "automaticForcedProduct",
          "automaticV2012",
          "automaticV2014",
          "automaticV2016",
          "automaticV2024",
          "manual",
          "oneShot",
          "option"
        ]
      },
      "service.StateEnum": {
        "type": "string",
        "enum": [
          "autorenewInProgress",
          "expired",
          "inCreation",
          "ok",
          "pendingDebt",
          "unPaid"
        ]
      },
      "service.TerminationFutureUseEnum": {
        "type": "string",
        "description": "All future uses you can provide for a service termination",
        "enum": [
          "NOT_REPLACING_SERVICE",
          "OTHER",
          "SUBSCRIBE_AN_OTHER_SERVICE",
          "SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR",
          "SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR"
        ]
      },
      "service.TerminationReasonEnum": {
        "type": "string",
        "description": "All reasons you can provide for a service termination",
        "enum": [
          "FEATURES_DONT_SUIT_ME",
          "LACK_OF_PERFORMANCES",
          "MIGRATED_TO_ANOTHER_OVH_PRODUCT",
          "MIGRATED_TO_COMPETITOR",
          "NOT_ENOUGH_RECOGNITION",
          "NOT_NEEDED_ANYMORE",
          "NOT_RELIABLE",
          "NO_ANSWER",
          "OTHER",
          "PRODUCT_DIMENSION_DONT_SUIT_ME",
          "PRODUCT_TOOLS_DONT_SUIT_ME",
          "TOO_EXPENSIVE",
          "TOO_HARD_TO_USE",
          "UNSATIFIED_BY_CUSTOMER_SUPPORT"
        ]
      },
      "services.Service": {
        "type": "object",
        "description": "Details about a Service",
        "properties": {
          "canDeleteAtExpiration": {
            "type": "boolean",
            "description": "Indicates that the service can be set up to be deleted at expiration",
            "readOnly": true
          },
          "contactAdmin": {
            "type": "string",
            "readOnly": true
          },
          "contactBilling": {
            "type": "string",
            "readOnly": true
          },
          "contactTech": {
            "type": "string",
            "readOnly": true
          },
          "creation": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "domain": {
            "type": "string",
            "readOnly": true
          },
          "engagedUpTo": {
            "type": "string",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "expiration": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "possibleRenewPeriod": {
            "type": "array",
            "description": "All the possible renew period of your service in month",
            "nullable": true,
            "items": {
              "type": "integer"
            },
            "readOnly": true
          },
          "renew": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.RenewType"
              }
            ],
            "description": "Way of handling the renew",
            "nullable": true
          },
          "renewalType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.RenewalTypeEnum"
              }
            ],
            "readOnly": true
          },
          "serviceId": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.StateEnum"
              }
            ],
            "readOnly": true
          }
        }
      },
      "support.NewMessageInfo": {
        "type": "object",
        "description": "Newly created support identifiers",
        "properties": {
          "additionalNotice": {
            "type": "string",
            "description": "Notice or warning",
            "nullable": true
          },
          "messageId": {
            "type": "integer",
            "description": "Message identifier"
          },
          "ticketId": {
            "type": "integer",
            "description": "Ticket identifier"
          },
          "ticketNumber": {
            "type": "integer",
            "description": "Ticket external number"
          }
        }
      },
      "time": {
        "type": "string",
        "description": "Time (e.g., 15:04:05)",
        "format": "time",
        "example": "15:04:05"
      },
      "vrack.Task": {
        "type": "object",
        "description": "vrack tasks",
        "properties": {
          "function": {
            "type": "string",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "orderId": {
            "type": "integer",
            "nullable": true,
            "readOnly": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/vrack.TaskStatusEnum"
              }
            ],
            "description": "Task status",
            "readOnly": true
          },
          "targetDomain": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "todoDate": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "vrack.TaskStatusEnum": {
        "type": "string",
        "description": "All states a vRack Task can be in",
        "enum": [
          "cancelled",
          "doing",
          "done",
          "init",
          "todo"
        ]
      },
      "vrack.dedicatedServer": {
        "type": "object",
        "description": "vrack dedicated server interfaces (LEGACY)",
        "properties": {
          "dedicatedServer": {
            "type": "string",
            "description": "Dedicated Server",
            "readOnly": true
          },
          "vrack": {
            "type": "string",
            "description": "vrack name",
            "readOnly": true
          }
        }
      },
      "zone.NamedResolutionFieldTypeEnum": {
        "type": "string",
        "description": "Resource record fieldType",
        "enum": [
          "A",
          "AAAA",
          "CAA",
          "CNAME",
          "DKIM",
          "DMARC",
          "DNAME",
          "LOC",
          "MX",
          "NAPTR",
          "NS",
          "PTR",
          "SPF",
          "SRV",
          "SSHFP",
          "TLSA",
          "TXT"
        ]
      }
    }
  },
  "paths": {
    "/dedicated/server": {
      "get": {
        "summary": "List available services",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "iamTags",
            "description": "Filter resources on IAM tags",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/iam.resource.TagFilter"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerDedicatedWithIAM"
      }
    },
    "/dedicated/server/availabilities": {
      "get": {
        "summary": "List the availability of dedicated server",
        "deprecated": true,
        "x-deprecation-date": "2023-02-20T00:00:00Z",
        "x-deletion-date": "2024-02-20T00:00:00Z",
        "x-replacement-route": "/1.0/dedicated/server/datacenter/availabilities",
        "parameters": [
          {
            "in": "query",
            "name": "country",
            "description": "The subsidiary company where the availability is requested",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/nichandle.OvhSubsidiaryEnum"
            }
          },
          {
            "in": "query",
            "name": "hardware",
            "description": "The kind of hardware which is requested",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.Availabilities"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ]
      }
    },
    "/dedicated/server/availabilities/raw": {
      "get": {
        "summary": "List the availability of dedicated server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.AvailabilitiesRaw"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/dedicated/server/datacenter/availabilities": {
      "get": {
        "summary": "List the availability of dedicated server",
        "parameters": [
          {
            "in": "query",
            "name": "datacenters",
            "description": "The names of datacenters separated by commas",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "excludeDatacenters",
            "description": "If true, all datacenters are returned except those listed in datacenters parameter",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "gpu",
            "description": "The name of the gpu hardware part",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "memory",
            "description": "The name of the memory hardware part",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "planCode",
            "description": "The plan code in which the hardware is involved",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "server",
            "description": "The name of the base hardware",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "storage",
            "description": "The name of the storage hardware part",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "systemStorage",
            "description": "The name of the system storage hardware part",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.DatacenterAvailability"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/dedicated/server/datacenter/availabilities/raw": {
      "get": {
        "summary": "List the raw availability of dedicated server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "datacenters",
            "description": "The names of datacenters separated by commas",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "excludeDatacenters",
            "description": "If true, all datacenters are returned except those listed in datacenters parameter",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "gpu",
            "description": "The name of the gpu hardware part",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "memory",
            "description": "The name of the memory hardware part",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "planCode",
            "description": "The plan code in which the hardware is involved",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "server",
            "description": "The name of the base hardware",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "storage",
            "description": "The name of the storage hardware part",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "systemStorage",
            "description": "The name of the system storage hardware part",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.DatacenterRawAvailability"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/dedicated/server/log": {
      "get": {
        "summary": "Get public logs for servers",
        "deprecated": true,
        "x-deprecation-date": "0001-01-01T00:00:00Z",
        "x-deletion-date": "0001-01-01T00:00:00Z",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "datacenter",
            "description": "Restrict on the given datacenter",
            "schema": {
              "$ref": "#/components/schemas/dedicated.DatacenterEnum"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Amount of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page to display",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "server",
            "description": "Restrict on the given server",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.PublicLog"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:log/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/osAvailabilities": {
      "get": {
        "summary": "List the os available for a specified hardware reference",
        "parameters": [
          {
            "in": "query",
            "name": "hardware",
            "description": "Hardware reference requested",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/dedicated/server/region/availabilities": {
      "get": {
        "summary": "List the availability of dedicated server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "excludeRegions",
            "description": "If true, all regions are returned except those listed in regions parameter",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "gpu",
            "description": "The name of the gpu hardware part",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "memory",
            "description": "The name of the memory hardware part",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "planCode",
            "description": "The plan code in which the hardware is involved",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "regions",
            "description": "The names of regions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/dedicated.server.AvailabilityRegionalizationEnum"
              }
            }
          },
          {
            "in": "query",
            "name": "server",
            "description": "The name of the base hardware",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "storage",
            "description": "The name of the storage hardware part",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "systemStorage",
            "description": "The name of the system storage hardware part",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.RegionAvailability"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ]
      }
    },
    "/dedicated/server/virtualNetworkInterface/{uuid}": {
      "get": {
        "summary": "Get VirtualNetworkInterface details",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "description": "Uuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.VirtualNetworkInterface"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-response-identifier": "uuid"
      }
    },
    "/dedicated/server/{serviceName}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.DedicatedWithIAM"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dedicated.server.Dedicated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:put",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/antiDDosGame/activate": {
      "post": {
        "summary": "Enable // Disable global filtering of anti DDoS Game protection on dedicated Game Server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enable": {
                    "type": "boolean",
                    "description": "scheduling operation to activate anti DDoS protection (0=disable || 1=enable)"
                  }
                },
                "required": [
                  "enable"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:antiDDosGame/activate",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/antiDDosGame/status": {
      "get": {
        "summary": "Get anti DDoS Game status",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.StatusEnum"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:antiDDosGame/status/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/authenticationSecret": {
      "post": {
        "summary": "Retrieve secret to connect to the server / application",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.Access"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:authenticationSecret/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/backupCloudOfferDetails": {
      "get": {
        "summary": "Get details on offered backup cloud if available for the current server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.backup.BackupOffer"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:backupCloudOfferDetails/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/biosSettings": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.biosSettings.BiosSettings"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:biosSettings/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/biosSettings/sgx": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.biosSettingsSgx.BiosSettingsSgx"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:biosSettings/sgx/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/biosSettings/sgx/configure": {
      "post": {
        "summary": "Enable or disable SGX and configure PRMRR size",
        "description": "Enable or disable SGX and configure PRMRR size. This will cause your server to reboot one or several time(s).",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prmrr": {
                    "description": "Size of the Processor Reserved Memory",
                    "$ref": "#/components/schemas/dedicated.server.BiosSettingsSgxPrmrrEnum"
                  },
                  "status": {
                    "description": "Desired SGX status",
                    "$ref": "#/components/schemas/dedicated.server.BiosSettingsSgxStatusEnum"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:biosSettings/sgx/configure",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/boot": {
      "get": {
        "summary": "Server compatibles netboots",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bootType",
            "description": "Filter the value of bootType property (=)",
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.BootTypeEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:boot/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerNetboot"
      }
    },
    "/dedicated/server/{serviceName}/boot/{bootId}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bootId",
            "description": "boot id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Netboot"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:boot/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/boot/{bootId}/option": {
      "get": {
        "summary": "Option used on this netboot",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bootId",
            "description": "boot id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.BootOptionEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:boot/option/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerNetbootOption"
      }
    },
    "/dedicated/server/{serviceName}/boot/{bootId}/option/{option}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bootId",
            "description": "boot id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "option",
            "description": "The option of this boot",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.BootOptionEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.netbootOption"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:boot/option/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/burst": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.ServerBurst"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:burst/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dedicated.server.ServerBurst"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:burst/edit",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/changeContact": {
      "post": {
        "summary": "Launch a contact change procedure",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactAdmin": {
                    "type": "string",
                    "description": "The contact to set as admin contact"
                  },
                  "contactBilling": {
                    "type": "string",
                    "description": "The contact to set as billing contact"
                  },
                  "contactTech": {
                    "type": "string",
                    "description": "The contact to set as tech contact"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:changeContact",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/confirmTermination": {
      "post": {
        "summary": "Confirm service termination",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "commentary": {
                    "type": "string",
                    "description": "Commentary about your termination request"
                  },
                  "futureUse": {
                    "description": "What next after your termination request",
                    "$ref": "#/components/schemas/service.TerminationFutureUseEnum"
                  },
                  "reason": {
                    "description": "Reason of your termination request",
                    "$ref": "#/components/schemas/service.TerminationReasonEnum"
                  },
                  "token": {
                    "type": "string",
                    "description": "The termination token sent by email to the admin contact"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:confirmTermination",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/backupCloud": {
      "delete": {
        "summary": "Deactivate the cloud backup associated to the server. This does not delete container data.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupCloud/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BackupCloud"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupCloud/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create a new storage backup space associated to server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cloudProjectId": {
                    "type": "string",
                    "description": "cloud project id"
                  },
                  "projectDescription": {
                    "type": "string",
                    "description": "Project description of the project to be created (ignored when an existing project is already specified)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BackupCloud"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupCloud/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/backupCloud/password": {
      "post": {
        "summary": "Change your cloud account password",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.backup.BackupPassword"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupCloud/password/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/backupFTP": {
      "delete": {
        "summary": "Terminate your Backup FTP service, ALL DATA WILL BE PERMANENTLY DELETED",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupFTP/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BackupFtp"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupFTP/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create a new Backup FTP space",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupFTP/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/backupFTP/access": {
      "get": {
        "summary": "List of IP blocks (and protocols to allow on these blocks) authorized on your backup FTP",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ipBlock"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupFTP/access/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerBackupFtpAcl"
      },
      "post": {
        "summary": "Create a new Backup FTP ACL",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cifs": {
                    "type": "boolean",
                    "description": "Whether to allow the CIFS (SMB) protocol for this ACL"
                  },
                  "ftp": {
                    "type": "boolean",
                    "description": "Whether to allow the FTP protocol for this ACL"
                  },
                  "ipBlock": {
                    "description": "The IP Block specific to this ACL. It musts belong to your server.",
                    "$ref": "#/components/schemas/ipBlock"
                  },
                  "nfs": {
                    "type": "boolean",
                    "description": "Whether to allow the NFS protocol for this ACL"
                  }
                },
                "required": [
                  "cifs",
                  "ipBlock",
                  "nfs"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupFTP/access/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/backupFTP/access/{ipBlock}": {
      "delete": {
        "summary": "Revoke this ACL",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ipBlock",
            "description": "The IP Block specific to this ACL",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ipBlock"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupFTP/access/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ipBlock",
            "description": "The IP Block specific to this ACL",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ipBlock"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BackupFtpAcl"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupFTP/access/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ipBlock",
            "description": "The IP Block specific to this ACL",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ipBlock"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dedicated.server.BackupFtpAcl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupFTP/access/edit",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/backupFTP/authorizableBlocks": {
      "get": {
        "summary": "Get all IP blocks that can be used in the ACL",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ipBlock"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupFTP/authorizableBlocks/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/backupFTP/password": {
      "post": {
        "summary": "Change your Backup FTP password",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/backupFTP/password/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/bmc": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BMC"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/bmc/javaKvm": {
      "get": {
        "summary": "Get the session credentials",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "operationId",
            "description": "The ID of the request access operation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BmcJavaKvmValue"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/javaKvm/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Request a Java KVM access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ipToAllow": {
                    "description": "IP to allow connection from for this KVM session, default value is caller IP",
                    "$ref": "#/components/schemas/ipv4"
                  },
                  "ttl": {
                    "description": "Time to live in minutes to get session credentials, default is 5 minutes",
                    "$ref": "#/components/schemas/dedicated.server.CacheTTLEnum"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/javaKvm/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/bmc/restart": {
      "post": {
        "summary": "Restart the BMC module",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/restart",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/bmc/revokeSessions": {
      "post": {
        "summary": "Revoke access of all sessions related to this BMC",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/revokeSessions",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/bmc/sshSol": {
      "get": {
        "summary": "Get the session credentials",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "operationId",
            "description": "The ID of the request access operation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BmcSshSolValue"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/sshSol/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Request an SSH SOL access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sshKey": {
                    "type": "string",
                    "description": "Public SSH key to use for this session"
                  },
                  "ttl": {
                    "description": "Time to live in minutes to get session credentials, default is 5 minutes",
                    "$ref": "#/components/schemas/dedicated.server.CacheTTLEnum"
                  }
                },
                "required": [
                  "sshKey"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/sshSol/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/bmc/test": {
      "get": {
        "summary": "Result of test on BMC interface",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "operationId",
            "description": "The ID of the test operation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Test to execute on the BMC interface",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.BmcTestTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BmcTestResult"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/test/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Launch basic test on BMC interface",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ttl": {
                    "description": "Result time to live in minutes",
                    "$ref": "#/components/schemas/dedicated.server.CacheTTLEnum"
                  },
                  "type": {
                    "description": "Test to execute on the BMC interface",
                    "$ref": "#/components/schemas/dedicated.server.BmcTestTypeEnum"
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/test/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/bmc/webKvm": {
      "get": {
        "summary": "Get the session credentials",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "operationId",
            "description": "The ID of the request access operation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BmcWebKvmValue"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/webKvm/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Request a Web KVM access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ipToAllow": {
                    "description": "IP to allow connection from for this KVM session, default value is caller IP",
                    "$ref": "#/components/schemas/ipv4"
                  },
                  "ttl": {
                    "description": "Time to live in minutes to get session credentials, default is 5 minutes",
                    "$ref": "#/components/schemas/dedicated.server.CacheTTLEnum"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/webKvm/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/bmc/webSol": {
      "get": {
        "summary": "Get the session credentials",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "operationId",
            "description": "The ID of the request access operation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BmcWebSolValue"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/webSol/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Request a Web SOL access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ipToAllow": {
                    "description": "IP to allow connection from for this Web SOL session, default value is caller IP",
                    "$ref": "#/components/schemas/ipv4"
                  },
                  "ttl": {
                    "description": "Time to live in minutes to get session credentials, default is 5 minutes",
                    "$ref": "#/components/schemas/dedicated.server.CacheTTLEnum"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/bmc/webSol/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/firewall": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Firewall"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/firewall/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dedicated.server.Firewall"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/firewall/edit",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/ipmi": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Ipmi"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/ipmi/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/ipmi/access": {
      "get": {
        "summary": "IPMI access method",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "IPMI console access",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.IpmiAccessTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.IpmiAccessValue"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/ipmi/access/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Request an acces on KVM IPMI interface",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ipToAllow": {
                    "description": "IP to allow connection from for this IPMI session",
                    "$ref": "#/components/schemas/ipv4"
                  },
                  "sshKey": {
                    "type": "string",
                    "description": "Public SSH key for Serial Over Lan SSH access | ⚠️ Starting 2024-08-27, SSH key name will no longer be accepted and only raw public SSH key will remain accepted"
                  },
                  "ttl": {
                    "description": "Session access time to live in minutes",
                    "$ref": "#/components/schemas/dedicated.server.CacheTTLEnum"
                  },
                  "type": {
                    "description": "IPMI console access",
                    "$ref": "#/components/schemas/dedicated.server.IpmiAccessTypeEnum"
                  }
                },
                "required": [
                  "ttl",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/ipmi/access/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/ipmi/resetInterface": {
      "post": {
        "summary": "Reset KVM IPMI interface",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/ipmi/resetInterface",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/ipmi/resetSessions": {
      "post": {
        "summary": "Reset KVM IPMI sessions",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/ipmi/resetSessions",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/ipmi/test": {
      "get": {
        "summary": "Result of http, ping and identification tests on IPMI interface",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Test type result on KVM IPMI interface",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.IpmiTestTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.IpmiTestResult"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/ipmi/test/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Launch test on KVM IPMI interface",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ttl": {
                    "description": "Result time to live in minutes",
                    "$ref": "#/components/schemas/dedicated.server.CacheTTLEnum"
                  },
                  "type": {
                    "description": "Test to make on KVM IPMI interface",
                    "$ref": "#/components/schemas/dedicated.server.IpmiTestTypeEnum"
                  }
                },
                "required": [
                  "ttl",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/ipmi/test/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/features/kvm": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.kvm"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:features/kvm/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/install/compatibleTemplatePartitionSchemes": {
      "get": {
        "summary": "Retrieve compatible  install template partitions scheme",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:install/compatibleTemplatePartitionSchemes/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/install/compatibleTemplates": {
      "get": {
        "summary": "Retrieve compatible  install templates names",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.InstallTemplate"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:install/compatibleTemplates/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/install/hardwareRaidProfile": {
      "get": {
        "summary": "Retrieve hardware RAID profile",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.HardwareRaidProfile"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:install/hardwareRaidProfile/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/install/hardwareRaidSize": {
      "get": {
        "summary": "Get hardware RAID size for a given configuration",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "partitionSchemeName",
            "description": "Partition scheme name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "templateName",
            "description": "Template name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.HardwareRaidSize"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:install/hardwareRaidSize/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/install/start": {
      "post": {
        "summary": "Install or reinstall an operating system - Try 🆕 /dedicated/server/{serviceName}/reinstall route",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "details": {
                    "description": "parameters for default install",
                    "$ref": "#/components/schemas/dedicated.server.InstallCustom"
                  },
                  "partitionSchemeName": {
                    "type": "string",
                    "description": "Partition scheme name"
                  },
                  "templateName": {
                    "type": "string",
                    "description": "Template name"
                  },
                  "userMetadata": {
                    "type": "array",
                    "description": "Metadata",
                    "items": {
                      "$ref": "#/components/schemas/complexType.SafeKeyValue_string"
                    }
                  }
                },
                "required": [
                  "templateName"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:install/start",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/install/status": {
      "get": {
        "summary": "Get installation status",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.InstallationProgressStatus"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:install/status/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/intervention": {
      "get": {
        "summary": "technical intervention history",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:intervention/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerIntervention"
      }
    },
    "/dedicated/server/{serviceName}/intervention/{interventionId}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "interventionId",
            "description": "The intervention id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Intervention"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:intervention/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/ipBlockMerge": {
      "post": {
        "summary": "Merge a splitted block and route it to the choosen server. You cannot undo this operation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "block": {
                    "description": "The splitted block you want to merge",
                    "$ref": "#/components/schemas/ipBlock"
                  }
                },
                "required": [
                  "block"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:ipBlockMerge",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/ipCanBeMovedTo": {
      "get": {
        "summary": "Check if given IP can be moved to this server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ip",
            "description": "The ip to move to this server",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ipBlock"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:ipCanBeMovedTo/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/ipCountryAvailable": {
      "get": {
        "summary": "Retrieve available country for IP order",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.IpCountryEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:ipCountryAvailable/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/ipMove": {
      "post": {
        "summary": "Move an Ip failover to this server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "description": "The ip to move to this server",
                    "$ref": "#/components/schemas/ipBlock"
                  }
                },
                "required": [
                  "ip"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:ipMove",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/ips": {
      "get": {
        "summary": "List all ip from server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ipBlock"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:ips/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/license/compliantWindows": {
      "get": {
        "summary": "Get the windows license compliant with your server.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/license.WindowsOsVersionEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:license/compliantWindows/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/license/compliantWindowsSqlServer": {
      "get": {
        "summary": "Get the windows SQL server license compliant with your server.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/license.WindowsSqlVersionEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:license/compliantWindowsSqlServer/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/license/windows": {
      "post": {
        "summary": "Add your existing windows license serial to this dedicated server",
        "description": "Add your existing windows license serial to this dedicated server. Will be manageable in /license/windows.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "licenseId": {
                    "type": "string",
                    "description": "Your license serial number"
                  },
                  "version": {
                    "description": "Your license version",
                    "$ref": "#/components/schemas/license.WindowsOsVersionEnum"
                  }
                },
                "required": [
                  "licenseId",
                  "version"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:license/windows/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/mrtg": {
      "get": {
        "summary": "Retrieve traffic graph values",
        "deprecated": true,
        "x-deprecation-date": "2017-10-23T00:00:00+01:00",
        "x-deletion-date": "2018-04-23T00:00:00+01:00",
        "x-replacement-route": "/dedicated/server/{serviceName}/networkInterfaceController",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "period",
            "description": "mrtg period",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.MrtgPeriodEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "mrtg type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.MrtgTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.MrtgTimestampValue"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:mrtg/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/networkInterfaceController": {
      "get": {
        "summary": "List server networkInterfaceController",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "linkType",
            "description": "Filter the value of linkType property (=)",
            "schema": {
              "$ref": "#/components/schemas/dedicated.networkInterfaceController.NetworkInterfaceControllerLinkTypeEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/macAddress"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:networkInterfaceController/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedNetworkInterfaceControllerNetworkInterfaceController"
      }
    },
    "/dedicated/server/{serviceName}/networkInterfaceController/{mac}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mac",
            "description": "NetworkInterfaceController mac",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/macAddress"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.networkInterfaceController.NetworkInterfaceController"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:networkInterfaceController/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/networkInterfaceController/{mac}/mrtg": {
      "get": {
        "summary": "Retrieve traffic graph values",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mac",
            "description": "NetworkInterfaceController mac",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/macAddress"
            }
          },
          {
            "in": "query",
            "name": "period",
            "description": "mrtg period",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.MrtgPeriodEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "mrtg type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.MrtgTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.MrtgTimestampValue"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:networkInterfaceController/mrtg/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/networking": {
      "delete": {
        "summary": "Reset your network configuration",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Networking"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:networking/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Networking"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:networking/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Apply a new network configuration",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "interfaces": {
                    "type": "array",
                    "description": "Interface or interfaces aggregation",
                    "items": {
                      "$ref": "#/components/schemas/dedicated.server.Interfaces"
                    }
                  }
                },
                "required": [
                  "interfaces"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Networking"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:networking/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/ola/aggregation": {
      "post": {
        "summary": "OLA : Group interfaces into an aggregation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resulting VirtualNetworkInterface name"
                  },
                  "virtualNetworkInterfaces": {
                    "type": "array",
                    "description": "Interfaces to aggregate",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "required": [
                  "name",
                  "virtualNetworkInterfaces"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:ola/aggregation/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/ola/group": {
      "post": {
        "summary": "OLA : Group interfaces into an aggregation",
        "deprecated": true,
        "x-deprecation-date": "2021-01-08T00:00:00+01:00",
        "x-deletion-date": "2021-04-08T00:00:00+01:00",
        "x-replacement-route": "/dedicated/server/{serviceName}/ola/aggregation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resulting VirtualNetworkInterface name"
                  },
                  "virtualNetworkInterfaces": {
                    "type": "array",
                    "description": "Interfaces to aggregate",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "required": [
                  "name",
                  "virtualNetworkInterfaces"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:ola/group/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/ola/reset": {
      "post": {
        "summary": "OLA : Reset interfaces to default configuration",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "virtualNetworkInterface": {
                    "type": "string",
                    "description": "Interface to reset",
                    "format": "uuid"
                  }
                },
                "required": [
                  "virtualNetworkInterface"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:ola/reset",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/ola/ungroup": {
      "post": {
        "summary": "OLA : Ungroup interfaces",
        "deprecated": true,
        "x-deprecation-date": "2021-01-08T00:00:00+01:00",
        "x-deletion-date": "2021-04-08T00:00:00+01:00",
        "x-replacement-route": "/dedicated/server/{serviceName}/ola/reset",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "virtualNetworkInterface": {
                    "type": "string",
                    "description": "Interface to ungroup",
                    "format": "uuid"
                  }
                },
                "required": [
                  "virtualNetworkInterface"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.Task"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:ola/ungroup",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/ongoing": {
      "get": {
        "summary": "What is ongoing on this server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.ExposedTask"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:ongoing/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/operation": {
      "get": {
        "summary": "Dedicated server operation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "function",
            "description": "Filter the value of function property (=)",
            "schema": {
              "$ref": "#/components/schemas/dedicated.OperationFunctionEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter the value of status property (=)",
            "schema": {
              "$ref": "#/components/schemas/dedicated.TaskStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:operation/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerOperation"
      }
    },
    "/dedicated/server/{serviceName}/operation/{operationId}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "The unique identifier of the operation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:operation/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/option": {
      "get": {
        "summary": "List of dedicated server options",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.OptionEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:option/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerOption"
      }
    },
    "/dedicated/server/{serviceName}/option/{option}": {
      "delete": {
        "summary": "Release a given option",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "option",
            "description": "The option name",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.OptionEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:option/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "option",
            "description": "The option name",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.OptionEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Option"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:option/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/backupStorage": {
      "get": {
        "summary": "Get the backup storage orderable with your server.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BackupStorageOrderable"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/backupStorage/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/bandwidth": {
      "get": {
        "summary": "Get bandwidth orderable with your server.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BandwidthOrderable"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/bandwidth/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/bandwidthvRack": {
      "get": {
        "summary": "Get vRack bandwidth orderable with your server.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.BandwidthvRackOrderable"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/bandwidthvRack/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/feature": {
      "get": {
        "summary": "Is this feature orderable with your server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "feature",
            "description": "the feature",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.OrderableSysFeatureEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/feature/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/ip": {
      "get": {
        "summary": "Get IP orderable with your server.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.IpOrderable"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/ip/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/kvm": {
      "get": {
        "summary": "Is a KVM orderable with your server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/kvm/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/kvmExpress": {
      "get": {
        "summary": "Is a KVM express orderable with your server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/kvmExpress/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/professionalUse": {
      "get": {
        "summary": "Is professional use orderable with your server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/professionalUse/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/supportLevel": {
      "get": {
        "summary": "Get support level orderable for this server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.SupportLevelOrderable"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/supportLevel/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/traffic": {
      "get": {
        "summary": "Get orderable traffic with your server.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.TrafficOrderable"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/traffic/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/orderable/usbKey": {
      "get": {
        "summary": "Get USB keys orderable with your server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.UsbKeyOrderableDetails"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:orderable/usbKey/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/plannedIntervention": {
      "get": {
        "summary": "Planned interventions for the server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:plannedIntervention/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerPlannedIntervention"
      }
    },
    "/dedicated/server/{serviceName}/plannedIntervention/{interventionId}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "interventionId",
            "description": "ID of the intervention",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.PlannedIntervention"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:plannedIntervention/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/reboot": {
      "post": {
        "summary": "Hard reboot this server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:reboot",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/reinstall": {
      "post": {
        "summary": "Install or reinstall an operating system on a dedicated server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dedicated.server.Reinstall"
              },
              "examples": {
                "Example 1 - Simple Linux Installation with password-based authentication": {
                  "value": {
                    "operatingSystem": "debian12_64"
                  }
                },
                "Example 2 - Linux Installation with ssh key-based authentication and post-installation script": {
                  "value": {
                    "customizations": {
                      "hostname": "mon-tux",
                      "postInstallationScript": "IyEvYmluL2Jhc2gKZWNobyAiY291Y291IHBvc3RJbnN0YWxsYXRpb25TY3JpcHQiID4gL29wdC9jb3Vjb3UKY2F0IC9ldGMvbWFjaGluZS1pZCAgPj4gL29wdC9jb3Vjb3UKZGF0ZSAiKyVZLSVtLSVkICVIOiVNOiVTIiAtLXV0YyA+PiAvb3B0L2NvdWNvdQo=",
                      "sshKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQC9xPpdqP3sx2H+gcBm65tJEaUbuifQ1uGkgrWtNY0PRKNNPdy+3yoVOtxk6Vjo4YZ0EU/JhmQfnrK7X7Q5vhqYxmozi0LiTRt0BxgqHJ+4hWTWMIOgr+C2jLx7ZsCReRk+fy5AHr6h0PHQEuXVLXeUy/TDyuY2JPtUZ5jcqvLYgQ== my-nuclear-power-plant"
                    },
                    "operatingSystem": "debian12_64"
                  }
                },
                "Example 3 - Windows Installation with French display language and PowerShell post-installation script": {
                  "value": {
                    "customizations": {
                      "hostname": "ma-fenetre",
                      "language": "fr-fr",
                      "postInstallationScript": "ImNvdWNvdSBwb3N0SW5zdGFsbGF0aW9uU2NyaXB0UG93ZXJTaGVsbCIgfCBPdXQtRmlsZSAtRmlsZVBhdGggImM6XG92aHVwZFxzY3JpcHRcY291Y291LnR4dCIKKEdldC1JdGVtUHJvcGVydHkgLUxpdGVyYWxQYXRoICJSZWdpc3RyeTo6SEtMTVxTT0ZUV0FSRVxNaWNyb3NvZnRcQ3J5cHRvZ3JhcGh5IiAtTmFtZSAiTWFjaGluZUd1aWQiKS5NYWNoaW5lR3VpZCB8IE91dC1GaWxlIC1GaWxlUGF0aCAiYzpcb3ZodXBkXHNjcmlwdFxjb3Vjb3UudHh0IiAtQXBwZW5kCihHZXQtRGF0ZSkuVG9Vbml2ZXJzYWxUaW1lKCkuVG9TdHJpbmcoInl5eXktTU0tZGQgSEg6bW06c3MiKSB8IE91dC1GaWxlIC1GaWxlUGF0aCAiYzpcb3ZodXBkXHNjcmlwdFxjb3Vjb3UudHh0IiAtQXBwZW5kCg=="
                    },
                    "operatingSystem": "win2022core-std_64"
                  }
                },
                "Example 4 - Custom Linux image Installation with custom config drive datasource": {
                  "value": {
                    "customizations": {
                      "configDriveUserData": "I2Nsb3VkLWNvbmZpZwpzc2hfYXV0aG9yaXplZF9rZXlzOgogIC0gc3NoLXJzYSBBQUFBQjhkallpdz09IG15c2VsZkBteWRvbWFpbi5uZXQKCnVzZXJzOgogIC0gbmFtZTogcGF0aWVudDAKICAgIHN1ZG86IEFMTD0oQUxMKSBOT1BBU1NXRDpBTEwKICAgIGdyb3VwczogdXNlcnMsIHN1ZG8KICAgIHNoZWxsOiAvYmluL2Jhc2gKICAgIGxvY2tfcGFzc3dkOiBmYWxzZQogICAgc3NoX2F1dGhvcml6ZWRfa2V5czoKICAgICAgLSBzc2gtcnNhIEFBQUFCOGRqWWl3PT0gbXlzZWxmQG15ZG9tYWluLm5ldApkaXNhYmxlX3Jvb3Q6IGZhbHNlCnBhY2thZ2VzOgogIC0gdmltCiAgLSB0cmVlCmZpbmFsX21lc3NhZ2U6IFRoZSBzeXN0ZW0gaXMgZmluYWxseSB1cCwgYWZ0ZXIgJFVQVElNRSBzZWNvbmRzCg==",
                      "efiBootloaderPath": "\\efi\\debian\\grubx64.efi",
                      "hostname": "mon-tux",
                      "httpHeaders": {
                        "Authorization": "Basic bG9naW46cGFzc3dvcmQ="
                      },
                      "imageCheckSum": "367f26c915f39314dde155db3a2b0326803e06975d1f4be04256f8b591e38fd4062d36eb7d50e99da7a50b7f4cd69640e56a4ab93e8e0274e4e478e0f84b5d29",
                      "imageCheckSumType": "sha512",
                      "imageURL": "https://github.com/ashmonger/akution_test/releases/download/0.5-compress/deb11k6.qcow2"
                    },
                    "operatingSystem": "byolinux_64",
                    "properties": {
                      "essential": "false",
                      "role": "webservers"
                    }
                  }
                },
                "Example 5 - Linux Installation with custom partitioning on some disks of the default diskGroup": {
                  "value": {
                    "customizations": {
                      "hostname": "mon-tux"
                    },
                    "operatingSystem": "debian12_64",
                    "storage": [
                      {
                        "partitioning": {
                          "disks": 4,
                          "layout": [
                            {
                              "fileSystem": "ext4",
                              "mountPoint": "/boot",
                              "raidLevel": 1,
                              "size": 1024
                            },
                            {
                              "extras": {
                                "lv": {
                                  "name": "root"
                                }
                              },
                              "fileSystem": "ext4",
                              "mountPoint": "/",
                              "raidLevel": 1,
                              "size": 20480
                            },
                            {
                              "fileSystem": "swap",
                              "mountPoint": "swap",
                              "size": 2048
                            },
                            {
                              "extras": {
                                "zp": {
                                  "name": "poule"
                                }
                              },
                              "fileSystem": "zfs",
                              "mountPoint": "/data",
                              "raidLevel": 5,
                              "size": 0
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "Example 6 - Linux Installation with custom partitioning and hardware RAID on diskGroup 2": {
                  "value": {
                    "customizations": {
                      "hostname": "mon-tux"
                    },
                    "operatingSystem": "debian12_64",
                    "storage": [
                      {
                        "diskGroupId": 2,
                        "hardwareRaid": [
                          {
                            "raidLevel": 5
                          }
                        ],
                        "partitioning": {
                          "layout": [
                            {
                              "fileSystem": "ext4",
                              "mountPoint": "/",
                              "raidLevel": 1,
                              "size": 20480
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.task.Response"
                },
                "examples": {
                  "Dedicated server task": {
                    "value": {
                      "comment": "Start bare metal OS installation",
                      "doneDate": null,
                      "function": "reinstallServer",
                      "startDate": "2024-11-20T15:22:14.449Z",
                      "status": "init",
                      "taskId": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Common error model",
                  "properties": {
                    "class": {
                      "type": "string",
                      "description": "Class of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "examples": {
                  "Client::BadRequest::CustomizationInvalidFormat": {
                    "value": {
                      "class": "Client::BadRequest::CustomizationInvalidFormat",
                      "message": "Invalid customization format for {{.name}} of type {{.type}}: {{.msg}}"
                    }
                  },
                  "Client::BadRequest::CustomizationName": {
                    "value": {
                      "class": "Client::BadRequest::CustomizationName",
                      "message": "Customization {{.customizationName}} doesn't exist for operating system {{.operatingSystem}}"
                    }
                  },
                  "Client::BadRequest::CustomizationSizeExceeded": {
                    "value": {
                      "class": "Client::BadRequest::CustomizationSizeExceeded",
                      "message": "Customization is {{.length}} big, which is exceeding limit of {{.limit}}"
                    }
                  },
                  "Client::BadRequest::DiskGroup": {
                    "value": {
                      "class": "Client::BadRequest::DiskGroup",
                      "message": "{{.diskGroupName}} is not installable on server {{.serverName}}"
                    }
                  },
                  "Client::BadRequest::HardwareRaidInvalidDisksArrays": {
                    "value": {
                      "class": "Client::BadRequest::HardwareRaidInvalidDisksArrays",
                      "message": "Number of disks ({{.disks}}) must be a multiple of arrays ({{.arrays}})"
                    }
                  },
                  "Client::BadRequest::HardwareRaidPartitioningDisks": {
                    "value": {
                      "class": "Client::BadRequest::HardwareRaidPartitioningDisks",
                      "message": "Partitioning multiple ({{.disks}}) disks is not possible while setting a hardware raid configuration on the same disk group, because the operating system will only see 1 single (virtual) disk"
                    }
                  },
                  "Client::BadRequest::HostnameInvalidFormat": {
                    "value": {
                      "class": "Client::BadRequest::HostnameInvalidFormat",
                      "message": "Invalid hostname {{.label}}; must contain no more than 63 characters, start with a letter, end with a letter or a digit and contain only letters, digits and hyphens, see RFC 1035, section 2.3.1"
                    }
                  },
                  "Client::BadRequest::HostnameSizeExceeded": {
                    "value": {
                      "class": "Client::BadRequest::HostnameSizeExceeded",
                      "message": "Hostname provided is {{.length}} length. It shall not be longer than {{.limit}} characters, see RFC 1035, section 2.3.4"
                    }
                  },
                  "Client::BadRequest::IncompatibleParams": {
                    "value": {
                      "class": "Client::BadRequest::IncompatibleParams",
                      "message": "Incompatible {{.paramName1}} and {{.paramName2}} parameters"
                    }
                  },
                  "Client::BadRequest::PartitionDuplicatedAttribute": {
                    "value": {
                      "class": "Client::BadRequest::PartitionDuplicatedAttribute",
                      "message": "{{.attribute}} value {{.value}} must be unique for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionDuplicatedZpName": {
                    "value": {
                      "class": "Client::BadRequest::PartitionDuplicatedZpName",
                      "message": "{{.attribute}} value {{.value}} already exists for another ZFS partition that has a different raid level. Either choose another name for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}} or set the same RAID level for all partitions within zpool {{.value}}"
                    }
                  },
                  "Client::BadRequest::PartitionForbiddenLvName": {
                    "value": {
                      "class": "Client::BadRequest::PartitionForbiddenLvName",
                      "message": "{{.attribute}} value {{.value}} is forbidden (must be different from {{.forbiddenValues}}) for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionForbiddenMountpoint": {
                    "value": {
                      "class": "Client::BadRequest::PartitionForbiddenMountpoint",
                      "message": "{{.attribute}} value {{.value}} is forbidden (must be different from {{.forbiddenValues}}) for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionForbiddenMountpointCanonical": {
                    "value": {
                      "class": "Client::BadRequest::PartitionForbiddenMountpointCanonical",
                      "message": "{{.attribute}} value {{.value}} must be a canonical path and cannot be a hidden path for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionForbiddenMountpointSuffix": {
                    "value": {
                      "class": "Client::BadRequest::PartitionForbiddenMountpointSuffix",
                      "message": "{{.attribute}} value {{.value}} cannot end with '/' for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionForbiddenZpName": {
                    "value": {
                      "class": "Client::BadRequest::PartitionForbiddenZpName",
                      "message": "{{.attribute}} value {{.value}} is forbidden (must be different from {{.forbiddenValues}}) for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionIncompatibleCustomPartitioning": {
                    "value": {
                      "class": "Client::BadRequest::PartitionIncompatibleCustomPartitioning",
                      "message": "Operating system  {{.operatingSystem}} doesn't support custom partitioning layout in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionIncompatibleFs": {
                    "value": {
                      "class": "Client::BadRequest::PartitionIncompatibleFs",
                      "message": "{{.attribute}} value {{.value}} is not compatible for operating system {{.operatingSystem}} (must be one of {{.expectedValues}}) for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionIncompatibleLvm": {
                    "value": {
                      "class": "Client::BadRequest::PartitionIncompatibleLvm",
                      "message": "{{.attribute}} value {{.value}} is not compatible for operating system {{.operatingSystem}} for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionIncompatibleParams": {
                    "value": {
                      "class": "Client::BadRequest::PartitionIncompatibleParams",
                      "message": "{{.paramName1}} value {{.paramValue1}} incompatible with {{.paramName2}} value {{.paramValue2}} for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionIncompatibleRaidLevel": {
                    "value": {
                      "class": "Client::BadRequest::PartitionIncompatibleRaidLevel",
                      "message": "{{.attribute}} value {{.value}} must be one of {{.expectedValues}} for operating system {{.operatingSystem}} for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionInvalidLvName": {
                    "value": {
                      "class": "Client::BadRequest::PartitionInvalidLvName",
                      "message": "{{.attribute}} value {{.value}} is invalid (length can be maximum 16 characters and exclusively composed of alphanumeric characters) for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionInvalidUnixMountpoint": {
                    "value": {
                      "class": "Client::BadRequest::PartitionInvalidUnixMountpoint",
                      "message": "{{.attribute}} value {{.value}} is invalid (Unix-style mountpoint: length cannot exceed 256 characters; only alphanumeric characters, slashes, dots, underscores and hyphens are allowed) for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionInvalidUnixMountpointPrefix": {
                    "value": {
                      "class": "Client::BadRequest::PartitionInvalidUnixMountpointPrefix",
                      "message": "{{.attribute}} value {{.value}} is invalid (Unix-style mountpoint: must start with a '/') for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionInvalidWindowsMountpointLength": {
                    "value": {
                      "class": "Client::BadRequest::PartitionInvalidWindowsMountpointLength",
                      "message": "{{.attribute}} value {{.value}} is invalid (Windows-style mountpoint: must contain at most 5 lowercase letters) for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionInvalidWindowsMountpointRoot": {
                    "value": {
                      "class": "Client::BadRequest::PartitionInvalidWindowsMountpointRoot",
                      "message": "{{.attribute}} value {{.value}} is invalid (Windows-style mountpoint: first mountpoint must be c:) for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionInvalidZpName": {
                    "value": {
                      "class": "Client::BadRequest::PartitionInvalidZpName",
                      "message": "{{.attribute}} value {{.value}} is invalid (if specified, zpool name must begin with a letter, be exclusively composed of alphanumeric characters, underscores, colons or dots, and its length can be maximum 239 characters) for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionLength": {
                    "value": {
                      "class": "Client::BadRequest::PartitionLength",
                      "message": "Number of partitions defined in the layout is incorrect ({{.partitionsNumber}}): must be between {{.lengthMin}} and {{.lengthMax}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionMinSize": {
                    "value": {
                      "class": "Client::BadRequest::PartitionMinSize",
                      "message": "{{.attribute}} value {{.value}} MiB must be bigger than {{.min}} for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionMissingRootMountpoint": {
                    "value": {
                      "class": "Client::BadRequest::PartitionMissingRootMountpoint",
                      "message": "{{.attribute}} {{.value}} missing for operating system {{.operatingSystem}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PartitionRaidLevel": {
                    "value": {
                      "class": "Client::BadRequest::PartitionRaidLevel",
                      "message": "{{.attribute}} value {{.value}} must be one of {{.expectedValues}} for partition {{.partitionName}} at position {{.partitionStep}} in {{.diskGroupName}}"
                    }
                  },
                  "Client::BadRequest::PropertyName": {
                    "value": {
                      "class": "Client::BadRequest::PropertyName",
                      "message": "{{.propertyName}} is not a valid property name"
                    }
                  },
                  "Client::BadRequest::TaskAlreadyExists": {
                    "value": {
                      "class": "Client::BadRequest::TaskAlreadyExists",
                      "message": "Task {{.taskId}} of type {{.taskFunction}} with status {{.taskStatus}} is already running on server {{.serverName}}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Error 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Common error model",
                  "properties": {
                    "class": {
                      "type": "string",
                      "description": "Class of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "examples": {
                  "Client::Forbidden::BadAccess": {
                    "value": {
                      "class": "Client::Forbidden::BadAccess",
                      "message": "An internal error has occurred due to a wrong configuration"
                    }
                  },
                  "Client::Forbidden::OperatingSystemLicenseMissing": {
                    "value": {
                      "class": "Client::Forbidden::OperatingSystemLicenseMissing",
                      "message": "Operating system {{.operatingSystem}} requires a license on server {{.serverName}}"
                    }
                  },
                  "Client::Forbidden::RetrieveAccess": {
                    "value": {
                      "class": "Client::Forbidden::RetrieveAccess",
                      "message": "An internal error has occurred due to a wrong configuration"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Common error model",
                  "properties": {
                    "class": {
                      "type": "string",
                      "description": "Class of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "examples": {
                  "Client::NotFound::DiskGroup": {
                    "value": {
                      "class": "Client::NotFound::DiskGroup",
                      "message": "{{.diskGroupName}} could not be found on server {{.serverName}}"
                    }
                  },
                  "Client::NotFound::OperatingSystem": {
                    "value": {
                      "class": "Client::NotFound::OperatingSystem",
                      "message": "Operating system {{.operatingSystem}} could not be found"
                    }
                  },
                  "Client::NotFound::SchemeName": {
                    "value": {
                      "class": "Client::NotFound::SchemeName",
                      "message": "Partition scheme {{.schemeName}} not found for operating system {{.operatingSystem}}"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Error 409 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Common error model",
                  "properties": {
                    "class": {
                      "type": "string",
                      "description": "Class of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "examples": {
                  "Client::Conflict::DisturbAlreadyExists": {
                    "value": {
                      "class": "Client::Conflict::DisturbAlreadyExists",
                      "message": "Server resource {{.serverName}} is already locked by another process, blocking any new OS reinstallation"
                    }
                  },
                  "Client::Conflict::HardwareRaidIncompatibleOnController": {
                    "value": {
                      "class": "Client::Conflict::HardwareRaidIncompatibleOnController",
                      "message": "Hardware RAID is not supported by controller of type {{.controllerType}} on {{.diskGroupName}} on server {{.serverName}}"
                    }
                  },
                  "Client::Conflict::HardwareRaidIncompatibleOnDiskGroup": {
                    "value": {
                      "class": "Client::Conflict::HardwareRaidIncompatibleOnDiskGroup",
                      "message": "Hardware RAID is not supported by {{.diskGroupName}} on server {{.serverName}}"
                    }
                  },
                  "Client::Conflict::HardwareRaidIncompatibleOnServer": {
                    "value": {
                      "class": "Client::Conflict::HardwareRaidIncompatibleOnServer",
                      "message": "Hardware RAID is not supported by server {{.serverName}}"
                    }
                  },
                  "Client::Conflict::HardwareRaidTooManyDisks": {
                    "value": {
                      "class": "Client::Conflict::HardwareRaidTooManyDisks",
                      "message": "Hardware RAID involving more disks ({{.disksNumber}}) than the {{.diskgroupName}} has ({{.maxDisksNumber}}) is not possible on server {{.serverName}}"
                    }
                  },
                  "Client::Conflict::OperatingSystemIncompatible": {
                    "value": {
                      "class": "Client::Conflict::OperatingSystemIncompatible",
                      "message": "Operating system {{.operatingSystem}} is not compatible for server {{.serverName}}"
                    }
                  },
                  "Client::Conflict::PartitioningTooManyDisks": {
                    "value": {
                      "class": "Client::Conflict::PartitioningTooManyDisks",
                      "message": "Partitioning involving more disks ({{.disksNumber}}) than the {{.diskgroupName}} has ({{.maxDisksNumber}}) is not possible on server {{.serverName}}"
                    }
                  },
                  "Client::Conflict::PartitioningTooManyDisksOperatingSystem": {
                    "value": {
                      "class": "Client::Conflict::PartitioningTooManyDisksOperatingSystem",
                      "message": "Partitioning involving more disks ({{.disksNumber}}) than the operating system {{.operatingSystem}} supports ({{.maxDisksNumber}}) is not possible"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Common error model",
                  "properties": {
                    "class": {
                      "type": "string",
                      "description": "Class of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "examples": {
                  "Server::InternalServerError::DefaultDiskGroup": {
                    "value": {
                      "class": "Server::InternalServerError::DefaultDiskGroup",
                      "message": "Error while getting default installable disk group on server {{.serverName}}"
                    }
                  },
                  "Server::InternalServerError::DisturbCreate": {
                    "value": {
                      "class": "Server::InternalServerError::DisturbCreate",
                      "message": "An error has occurred while locking server resource {{.serverName}} for OS reinstallation process"
                    }
                  },
                  "Server::InternalServerError::DisturbLink": {
                    "value": {
                      "class": "Server::InternalServerError::DisturbLink",
                      "message": "An error has occurred while locking server resource {{.serverName}} for OS reinstallation task {{.taskId}}"
                    }
                  },
                  "Server::InternalServerError::HardwareProfile": {
                    "value": {
                      "class": "Server::InternalServerError::HardwareProfile",
                      "message": "An error has occurred while retrieving details for server {{.serverName}}"
                    }
                  },
                  "Server::InternalServerError::HardwareRaidRetrieve": {
                    "value": {
                      "class": "Server::InternalServerError::HardwareRaidRetrieve",
                      "message": "Error while retrieving hardware RAID configuration for {{.diskGroupName}}"
                    }
                  },
                  "Server::InternalServerError::OperatingSystemCompatibilityRetrieve": {
                    "value": {
                      "class": "Server::InternalServerError::OperatingSystemCompatibilityRetrieve",
                      "message": "Error while retrieving compatibility details for operating system {{.operatingSystem}} on server {{.serverName}}"
                    }
                  },
                  "Server::InternalServerError::OperatingSystemRetrieve": {
                    "value": {
                      "class": "Server::InternalServerError::OperatingSystemRetrieve",
                      "message": "Error while retrieving details for operating system {{.operatingSystem}}"
                    }
                  },
                  "Server::InternalServerError::PartitionRetrieve": {
                    "value": {
                      "class": "Server::InternalServerError::PartitionRetrieve",
                      "message": "An error has occurred while retrieving partitions for operating system {{.operatingSystem}}"
                    }
                  },
                  "Server::InternalServerError::TaskCreate": {
                    "value": {
                      "class": "Server::InternalServerError::TaskCreate",
                      "message": "An error has occurred while creating installation task on server {{.serverName}}"
                    }
                  },
                  "Server::InternalServerError::TaskDateRetrieve": {
                    "value": {
                      "class": "Server::InternalServerError::TaskDateRetrieve",
                      "message": "Error while converting {{.date}} to {{.format}} format"
                    }
                  },
                  "Server::InternalServerError::TaskRetrieve": {
                    "value": {
                      "class": "Server::InternalServerError::TaskRetrieve",
                      "message": "Error while retrieving task {{.taskId}}"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Error 501 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Common error model",
                  "properties": {
                    "class": {
                      "type": "string",
                      "description": "Class of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "examples": {
                  "Server::NotImplemented::DiskGroupMultipleConfigs": {
                    "value": {
                      "class": "Server::NotImplemented::DiskGroupMultipleConfigs",
                      "message": "Multiple ({{.diskgroupsNumber}}) disk groups customization not implemented"
                    }
                  },
                  "Server::NotImplemented::HardwareRaidMultipleConfigs": {
                    "value": {
                      "class": "Server::NotImplemented::HardwareRaidMultipleConfigs",
                      "message": "Multiple ({{.hwRaidConfigsNumber}}) hardware RAID configurations not implemented"
                    }
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:reinstall",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/secondaryDnsDomains": {
      "get": {
        "summary": "List of secondary dns domain name",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:secondaryDnsDomains/get",
            "required": true
          }
        ],
        "x-expanded-response": "SecondaryDnsSecondaryDNS"
      },
      "post": {
        "summary": "add a domain on secondary dns",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "The domain to add"
                  },
                  "ip": {
                    "$ref": "#/components/schemas/ipv4"
                  }
                },
                "required": [
                  "domain"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:secondaryDnsDomains/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/secondaryDnsDomains/{domain}": {
      "delete": {
        "summary": "remove this domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "description": "domain on slave server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:secondaryDnsDomains/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "description": "domain on slave server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondaryDns.SecondaryDNS"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:secondaryDnsDomains/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "description": "domain on slave server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secondaryDns.SecondaryDNS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:secondaryDnsDomains/edit",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/secondaryDnsDomains/{domain}/dnsServer": {
      "get": {
        "summary": "domain name server informations",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "description": "domain on slave server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondaryDns.SecondaryDNSNameServer"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:secondaryDnsDomains/dnsServer/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/secondaryDnsNameDomainToken": {
      "get": {
        "summary": "DNS field to temporarily add to your zone so that we can verify you are the owner of this domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "domain",
            "description": "The domain to check",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondaryDns.SecondaryDNSCheckField"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:secondaryDnsNameDomainToken/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/secondaryDnsNameServerAvailable": {
      "get": {
        "summary": "Secondary nameServer available for your Server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondaryDns.SecondaryDNSNameServer"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:secondaryDnsNameServerAvailable/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/serviceInfos": {
      "get": {
        "summary": "Get service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:serviceInfos/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/services.Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:serviceInfos/edit",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/specifications/hardware": {
      "get": {
        "summary": "Retrieve hardware informations about this dedicated server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.HardwareSpecifications"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:specifications/hardware/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/specifications/ip": {
      "get": {
        "summary": "Retrieve IP capabilities about this dedicated server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.IpOrderable"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:specifications/ip/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/specifications/network": {
      "get": {
        "summary": "Retrieve network informations about this dedicated server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.NetworkSpecifications"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:specifications/network/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/spla": {
      "get": {
        "summary": "Your own SPLA licenses attached to this dedicated server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter the value of status property (=)",
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.SplaStatusEnum"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filter the value of type property (=)",
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.SplaTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:spla/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerSpla"
      },
      "post": {
        "summary": "Add a new SPLA license",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "serialNumber": {
                    "type": "string",
                    "description": "License serial number"
                  },
                  "type": {
                    "description": "License type",
                    "$ref": "#/components/schemas/dedicated.server.SplaTypeEnum"
                  }
                },
                "required": [
                  "serialNumber",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:spla/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/spla/{id}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "License id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.spla"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:spla/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "License id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dedicated.server.spla"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:spla/edit",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/spla/{id}/revoke": {
      "post": {
        "summary": "Revoke an SPLA license",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "License id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:spla/revoke",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/support/replace/cooling": {
      "post": {
        "summary": "Ask for a cooling module replacement",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "User comment"
                  },
                  "details": {
                    "type": "string",
                    "description": "Technical details or logs"
                  }
                },
                "required": [
                  "comment",
                  "details"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/support.NewMessageInfo"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:support/replace/cooling/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/support/replace/hardDiskDrive": {
      "post": {
        "summary": "Ask for a broken HDD replacement",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "User comment"
                  },
                  "disks": {
                    "type": "array",
                    "description": "If 'inverse' is set as 'false', the list of HDD TO REPLACE. If 'inverse' is set as 'true', the list of HDD TO NOT REPLACE.",
                    "items": {
                      "$ref": "#/components/schemas/dedicated.server.SupportReplaceHddInfo"
                    }
                  },
                  "inverse": {
                    "type": "boolean",
                    "description": "If set to 'true', replace only NON LISTED DISKS"
                  }
                },
                "required": [
                  "comment",
                  "disks",
                  "inverse"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/support.NewMessageInfo"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:support/replace/hardDiskDrive/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/support/replace/memory": {
      "post": {
        "summary": "Ask for a faulty RAM module replacement",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "User comment"
                  },
                  "details": {
                    "type": "string",
                    "description": "Technical details or logs"
                  },
                  "slots": {
                    "type": "array",
                    "description": "The list of faulty RAM slots (if you have the information)",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "comment",
                  "details"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/support.NewMessageInfo"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:support/replace/memory/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/task": {
      "get": {
        "summary": "Dedicated server todos",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "function",
            "description": "Filter the value of function property (=)",
            "schema": {
              "$ref": "#/components/schemas/dedicated.TaskFunctionEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter the value of status property (=)",
            "schema": {
              "$ref": "#/components/schemas/dedicated.TaskStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:task/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerTask"
      }
    },
    "/dedicated/server/{serviceName}/task/{taskId}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "description": "the id of the task",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:task/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/task/{taskId}/availableTimeslots": {
      "get": {
        "summary": "List available time slots for intervention",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "periodEnd",
            "description": "End of the period to query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "periodStart",
            "description": "Begining of the period to query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "description": "the id of the task",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.PlannedInterventionTimeSlot"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:task/availableTimeslots/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/task/{taskId}/cancel": {
      "post": {
        "summary": "this action stop the task progression if it's possible",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "description": "the id of the task",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:task/cancel",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/task/{taskId}/schedule": {
      "post": {
        "summary": "Schedule intervention",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "description": "the id of the task",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hasPerformedBackup": {
                    "type": "boolean",
                    "description": "Whether or not you have made a backup of your data"
                  },
                  "wantedBeginingDate": {
                    "type": "string",
                    "description": "Wanted begining date for your intervention",
                    "format": "date-time"
                  }
                },
                "required": [
                  "hasPerformedBackup",
                  "wantedBeginingDate"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:task/schedule",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/terminate": {
      "post": {
        "summary": "Ask for the termination of your service",
        "description": "Ask for the termination of your service. Admin contact of this service will receive a termination token by email in order to confirm its termination with /confirmTermination endpoint.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:terminate",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/updates/allowed": {
      "get": {
        "summary": "List all updates that can be performed on a dedicated server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "family",
            "description": "Desired option family",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.AddonFamilyEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.BillingAddon"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:updates/allowed/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/upgrade/availableTimeslots": {
      "get": {
        "summary": "Get the available schedule for an hardware upgrade",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "periodEnd",
            "description": "End of the period to query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "periodStart",
            "description": "Begining of the period to query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.HardwareUpgradeTimeslot"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:upgrade/availableTimeslots/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/upgrade/schedule": {
      "put": {
        "summary": "Set the schedule of an hardware upgrade",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dedicated.server.ScheduleUpgradePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:upgrade/schedule",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/virtualMac": {
      "get": {
        "summary": "Virtual MAC addresses of the server",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualMac/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerVirtualMac"
      },
      "post": {
        "summary": "Add a virtual mac to an IP address",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ipAddress": {
                    "description": "Ip address to link with this virtualMac",
                    "$ref": "#/components/schemas/ipv4"
                  },
                  "type": {
                    "description": "vmac address type",
                    "$ref": "#/components/schemas/dedicated.server.VmacTypeEnum"
                  },
                  "virtualMachineName": {
                    "type": "string",
                    "description": "Friendly name of your Virtual Machine behind this IP/MAC"
                  }
                },
                "required": [
                  "ipAddress",
                  "type",
                  "virtualMachineName"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualMac/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/virtualMac/{macAddress}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "macAddress",
            "description": "Virtual MAC address in 00:00:00:00:00:00 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.VirtualMac"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualMac/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/virtualMac/{macAddress}/virtualAddress": {
      "get": {
        "summary": "List of IPs associated to this Virtual MAC",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "macAddress",
            "description": "Virtual MAC address in 00:00:00:00:00:00 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ipv4"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualMac/virtualAddress/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedServerVirtualMacManagement"
      },
      "post": {
        "summary": "Add an IP to this Virtual MAC",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "macAddress",
            "description": "Virtual MAC address in 00:00:00:00:00:00 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ipAddress": {
                    "description": "IP address to link to this virtual MAC",
                    "$ref": "#/components/schemas/ipv4"
                  },
                  "virtualMachineName": {
                    "type": "string",
                    "description": "Friendly name of your Virtual Machine behind this IP/MAC"
                  }
                },
                "required": [
                  "ipAddress",
                  "virtualMachineName"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualMac/virtualAddress/create",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/virtualMac/{macAddress}/virtualAddress/{ipAddress}": {
      "delete": {
        "summary": "Remove this ip from virtual mac , if you remove the last linked Ip, virtualmac will be deleted",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ipAddress",
            "description": "IP address",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ipv4"
            }
          },
          {
            "in": "path",
            "name": "macAddress",
            "description": "Virtual MAC address in 00:00:00:00:00:00 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualMac/virtualAddress/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ipAddress",
            "description": "IP address",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ipv4"
            }
          },
          {
            "in": "path",
            "name": "macAddress",
            "description": "Virtual MAC address in 00:00:00:00:00:00 format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.VirtualMacManagement"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualMac/virtualAddress/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/virtualNetworkInterface": {
      "get": {
        "summary": "List server VirtualNetworkInterfaces",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "enabled",
            "description": "Filter the value of enabled property (=)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "mode",
            "description": "Filter the value of mode property (=)",
            "schema": {
              "$ref": "#/components/schemas/dedicated.virtualNetworkInterface.VirtualNetworkInterfaceModeEnum"
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "Filter the value of name property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vrack",
            "description": "Filter the value of vrack property (=)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualNetworkInterface/get",
            "required": true
          }
        ],
        "x-expanded-response": "DedicatedVirtualNetworkInterfaceVirtualNetworkInterface"
      }
    },
    "/dedicated/server/{serviceName}/virtualNetworkInterface/{uuid}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "VirtualNetworkInterface unique id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.virtualNetworkInterface.VirtualNetworkInterface"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "blue",
            "label": "Beta version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualNetworkInterface/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "deprecated": true,
        "x-deprecation-date": "2021-01-08T00:00:00+01:00",
        "x-deletion-date": "2021-04-08T00:00:00+01:00",
        "x-replacement-route": "/dedicated/server/{serviceName}/ola/aggregation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "VirtualNetworkInterface unique id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dedicated.virtualNetworkInterface.VirtualNetworkInterface"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualNetworkInterface/edit",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/virtualNetworkInterface/{uuid}/disable": {
      "post": {
        "summary": "Disable this VirtualNetworkInterface",
        "deprecated": true,
        "x-deprecation-date": "2021-01-08T00:00:00+01:00",
        "x-deletion-date": "2021-04-08T00:00:00+01:00",
        "x-replacement-route": "/dedicated/server/{serviceName}/ola/aggregation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "VirtualNetworkInterface unique id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualNetworkInterface/disable",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/virtualNetworkInterface/{uuid}/enable": {
      "post": {
        "summary": "Enable this VirtualNetworkInterface",
        "deprecated": true,
        "x-deprecation-date": "2021-01-08T00:00:00+01:00",
        "x-deletion-date": "2021-04-08T00:00:00+01:00",
        "x-replacement-route": "/dedicated/server/{serviceName}/ola/aggregation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "VirtualNetworkInterface unique id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dedicated.server.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:virtualNetworkInterface/enable",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/vrack": {
      "get": {
        "summary": "Server Vracks (LEGACY)",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:vrack/get",
            "required": true
          }
        ],
        "x-expanded-response": "VrackDedicatedServer"
      }
    },
    "/dedicated/server/{serviceName}/vrack/{vrack}": {
      "delete": {
        "summary": "remove this server from this vrack (LEGACY)",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vrack",
            "description": "vrack name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vrack.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:vrack/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vrack",
            "description": "vrack name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vrack.dedicatedServer"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:vrack/get",
            "required": true
          }
        ]
      }
    },
    "/dedicated/server/{serviceName}/vrack/{vrack}/mrtg": {
      "get": {
        "summary": "Retrieve vrack traffic graph values (LEGACY)",
        "deprecated": true,
        "x-deprecation-date": "2017-10-23T00:00:00+01:00",
        "x-deletion-date": "2018-04-23T00:00:00+01:00",
        "x-replacement-route": "/dedicated/server/{serviceName}/networkInterfaceController",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "period",
            "description": "mrtg period",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.MrtgPeriodEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your dedicated server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "mrtg type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dedicated.server.MrtgTypeEnum"
            }
          },
          {
            "in": "path",
            "name": "vrack",
            "description": "vrack name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dedicated.server.MrtgTimestampValue"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "dedicatedServer:apiovh:vrack/mrtg/get",
            "required": true
          }
        ]
      }
    }
  }
}
