{
  "openapi": "3.0.0",
  "info": {
    "title": "OVHcloud API specification",
    "description": "Specification for OVHcloud API",
    "version": "1.0",
    "contact": {
      "name": "OVH",
      "email": "api@ml.ovh.net"
    }
  },
  "servers": [
    {
      "url": "https://eu.api.ovh.com/v1"
    }
  ],
  "components": {
    "schemas": {
      "any": {
        "description": "Can be anything (text, int, bool, json, html, etc.)",
        "example": "This is a content of any type !"
      },
      "cdn.DomainStatisticsNameEnum": {
        "type": "string",
        "description": "Serie Name",
        "enum": [
          "hit",
          "miss"
        ]
      },
      "cdn.DomainStatisticsPeriodEnum": {
        "type": "string",
        "description": "Statistics Period",
        "enum": [
          "day",
          "month",
          "week",
          "year"
        ]
      },
      "cdn.DomainStatisticsUnitEnum": {
        "type": "string",
        "description": "Serie Unit",
        "enum": [
          "req/min"
        ]
      },
      "cdn.DomainStatusEnum": {
        "type": "string",
        "description": "Domain status",
        "enum": [
          "deleting",
          "disabled",
          "disabling",
          "ok",
          "refreshing",
          "to_delete",
          "to_disable",
          "to_refresh"
        ]
      },
      "cdn.OperationFunctionEnum": {
        "type": "string",
        "description": "Operation function",
        "enum": [
          "analytics_delete",
          "analytics_recompute",
          "domain_delete",
          "domain_disable",
          "domain_purge",
          "domain_refresh",
          "service_install",
          "ssl_delete",
          "ssl_install"
        ]
      },
      "cdn.OperationOfferEnum": {
        "type": "string",
        "description": "Shared CDN offer",
        "enum": [
          "advanced",
          "basic",
          "security"
        ]
      },
      "cdn.OperationStatusEnum": {
        "type": "string",
        "description": "Operation status",
        "enum": [
          "cancelled",
          "doing",
          "done",
          "error",
          "todo"
        ]
      },
      "cdn.OptionCategoryEnum": {
        "type": "string",
        "description": "Option category",
        "enum": [
          "cache",
          "performance",
          "security"
        ]
      },
      "cdn.OptionConfigParamTypeEnum": {
        "type": "string",
        "description": "Option Config Parameter type",
        "enum": [
          "bool",
          "int",
          "list",
          "str"
        ]
      },
      "cdn.OptionPatternTypeEnum": {
        "type": "string",
        "description": "Option pattern type",
        "enum": [
          "extension",
          "folder",
          "regex",
          "uri"
        ]
      },
      "cdn.OptionQueryParametersEnum": {
        "type": "string",
        "description": "Option query parameters",
        "enum": [
          "ignored",
          "sorted"
        ]
      },
      "cdn.OptionTypeEnum": {
        "type": "string",
        "description": "Option type",
        "enum": [
          "brotli",
          "cache_rule",
          "cors",
          "devmode",
          "geo_headers",
          "hsts",
          "https_redirect",
          "mixed_content",
          "mobile_redirect",
          "prefetch",
          "prewarm",
          "querystring",
          "waf"
        ]
      },
      "cdn.OptionTypePostEnum": {
        "type": "string",
        "description": "Option type",
        "enum": [
          "cache_rule"
        ]
      },
      "cdn.PurgeTypeEnum": {
        "type": "string",
        "description": "Purge type",
        "enum": [
          "extension",
          "folder",
          "regex",
          "uri"
        ]
      },
      "cdn.availableOptions": {
        "type": "object",
        "description": "Option type available",
        "properties": {
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.OptionCategoryEnum"
              }
            ],
            "description": "Option category",
            "nullable": true,
            "readOnly": true
          },
          "config": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.availableOptions.config"
              }
            ],
            "description": "Option configuration",
            "nullable": true,
            "readOnly": true
          },
          "maxItems": {
            "type": "integer",
            "description": "Max option items",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Option type",
            "readOnly": true
          }
        }
      },
      "cdn.availableOptions.config": {
        "type": "object",
        "description": "Option configuration",
        "properties": {
          "destination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.availableOptions.config.constraints"
              }
            ],
            "description": "URL used for Mobile Redirect",
            "nullable": true,
            "readOnly": true
          },
          "followUri": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.availableOptions.config.constraints"
              }
            ],
            "description": "Follow Uri on Mobile Redirect",
            "nullable": true,
            "readOnly": true
          },
          "origins": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.availableOptions.config.constraints"
              }
            ],
            "description": "Authorized Origins separated by a comma",
            "nullable": true,
            "readOnly": true
          },
          "patternType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.availableOptions.config.constraints"
              }
            ],
            "description": "Option pattern type",
            "nullable": true,
            "readOnly": true
          },
          "priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.availableOptions.config.constraints"
              }
            ],
            "description": "Cache Rule priority (lower is the strongest priority)",
            "nullable": true,
            "readOnly": true
          },
          "queryParameters": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.availableOptions.config.constraints"
              }
            ],
            "description": "Action to apply on query parameters",
            "nullable": true,
            "readOnly": true
          },
          "resources": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.availableOptions.config.constraints"
              }
            ],
            "description": "List of URI",
            "nullable": true,
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.availableOptions.config.constraints"
              }
            ],
            "description": "Redirection HTTP Code",
            "nullable": true,
            "readOnly": true
          },
          "ttl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.availableOptions.config.constraints"
              }
            ],
            "description": "Cache time in seconds",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "cdn.availableOptions.config.constraints": {
        "type": "object",
        "description": "Option configuration constraints",
        "properties": {
          "length": {
            "type": "integer",
            "description": "Maximum number of items in value",
            "nullable": true,
            "readOnly": true
          },
          "maximum": {
            "type": "integer",
            "description": "Maximum value",
            "nullable": true,
            "readOnly": true
          },
          "message": {
            "type": "string",
            "description": "Description of value",
            "nullable": true,
            "readOnly": true
          },
          "minimum": {
            "type": "integer",
            "description": "Minimum value",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.OptionConfigParamTypeEnum"
              }
            ],
            "description": "Type of value",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "cdn.domain": {
        "type": "object",
        "description": "Domain details",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Creation date",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Domain name",
            "readOnly": true
          },
          "needRefresh": {
            "type": "boolean",
            "description": "The domain configuration has been updated, it needs a refresh",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.DomainStatusEnum"
              }
            ],
            "description": "Domain status",
            "readOnly": true
          },
          "updatedDate": {
            "type": "string",
            "description": "Last update date",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "cdn.domain.add.option": {
        "type": "object",
        "description": "Option details",
        "properties": {
          "config": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.domain.option.config"
              }
            ],
            "description": "Option configuration",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Enable / Disable the option"
          },
          "name": {
            "type": "string",
            "description": "Option name"
          },
          "pattern": {
            "type": "string",
            "description": "Url pattern",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.OptionTypePostEnum"
              }
            ],
            "description": "Option type"
          }
        },
        "required": [
          "enabled",
          "name",
          "type"
        ]
      },
      "cdn.domain.option": {
        "type": "object",
        "description": "Option details",
        "properties": {
          "config": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.domain.option.config"
              }
            ],
            "description": "Option configuration",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Enable / Disable the option"
          },
          "extra": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.domain.option.extra"
              }
            ],
            "description": "Additional information about option",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Option name",
            "readOnly": true
          },
          "pattern": {
            "type": "string",
            "description": "Url pattern",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.OptionTypeEnum"
              }
            ],
            "description": "Option type"
          }
        },
        "required": [
          "enabled",
          "type"
        ]
      },
      "cdn.domain.option.config": {
        "type": "object",
        "description": "Option configuration",
        "properties": {
          "destination": {
            "type": "string",
            "description": "URL used for Mobile Redirect",
            "nullable": true
          },
          "followUri": {
            "type": "boolean",
            "description": "Follow Uri on Mobile Redirect",
            "nullable": true
          },
          "origins": {
            "type": "string",
            "description": "Authorized Origins separated by a comma",
            "nullable": true
          },
          "patternType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.OptionPatternTypeEnum"
              }
            ],
            "description": "Option pattern type",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "Cache Rule priority (lower is the strongest priority)",
            "nullable": true
          },
          "queryParameters": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.OptionQueryParametersEnum"
              }
            ],
            "description": "Action to apply on query parameters",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "description": "List of URI",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "statusCode": {
            "type": "integer",
            "description": "Redirection HTTP Code",
            "nullable": true
          },
          "ttl": {
            "type": "integer",
            "description": "Cache time in seconds",
            "nullable": true
          }
        }
      },
      "cdn.domain.option.extra": {
        "type": "object",
        "description": "Additional information about option",
        "properties": {
          "quota": {
            "type": "integer",
            "description": "Maximum usage of the option",
            "nullable": true
          },
          "usage": {
            "type": "integer",
            "description": "Current usage of the option",
            "nullable": true
          }
        }
      },
      "cdn.domain.statistics": {
        "type": "object",
        "description": "Domain Statistics Datapoints",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.DomainStatisticsNameEnum"
              }
            ],
            "description": "name of the serie",
            "readOnly": true
          },
          "points": {
            "type": "array",
            "description": "List of DataPoints",
            "items": {
              "$ref": "#/components/schemas/cdn.domain.statistics.point"
            },
            "readOnly": true
          },
          "unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.DomainStatisticsUnitEnum"
              }
            ],
            "description": "Unit of the serie",
            "readOnly": true
          }
        }
      },
      "cdn.domain.statistics.point": {
        "type": "object",
        "description": "Statistics Datapoint",
        "properties": {
          "timestamp": {
            "type": "integer",
            "description": "Timestamp",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "description": "Datapoint value",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "cdn.logs": {
        "type": "object",
        "description": "Logs archive URL",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to logs archive",
            "readOnly": true
          },
          "validity": {
            "type": "string",
            "description": "URL validity",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "cdn.operation": {
        "type": "object",
        "description": "Operation details",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment",
            "nullable": true,
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "Creation date",
            "format": "date-time",
            "readOnly": true
          },
          "function": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.OperationFunctionEnum"
              }
            ],
            "description": "Operation function",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Operation id",
            "readOnly": true
          },
          "parameter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.operation.parameter"
              }
            ],
            "description": "Operation parameter",
            "readOnly": true
          },
          "service": {
            "type": "string",
            "description": "Shared CDN service",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.OperationStatusEnum"
              }
            ],
            "description": "Operation status",
            "readOnly": true
          },
          "todoDate": {
            "type": "string",
            "description": "Next execution date",
            "format": "date-time",
            "readOnly": true
          },
          "updatedDate": {
            "type": "string",
            "description": "Last execution date",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "cdn.operation.parameter": {
        "type": "object",
        "description": "Operation parameter",
        "properties": {
          "anycastIp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "CDN anycast IP",
            "nullable": true,
            "readOnly": true
          },
          "cluster": {
            "type": "string",
            "description": "Cluster name",
            "nullable": true,
            "readOnly": true
          },
          "date": {
            "type": "string",
            "description": "Date",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "domainName": {
            "type": "string",
            "description": "Domain name",
            "nullable": true,
            "readOnly": true
          },
          "fingerprint": {
            "type": "string",
            "description": "CDN certificate fingerprint",
            "nullable": true,
            "readOnly": true
          },
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cdn.OperationOfferEnum"
              }
            ],
            "description": "Shared CDN offer",
            "nullable": true,
            "readOnly": true
          },
          "pattern": {
            "type": "string",
            "description": "Pattern to purge on CDN",
            "nullable": true,
            "readOnly": true
          },
          "service": {
            "type": "string",
            "description": "Service name",
            "nullable": true,
            "readOnly": true
          },
          "sslId": {
            "type": "integer",
            "description": "CDN ssl id",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "complexType.ChartSerie_complexType.ChartTimestampValue": {
        "type": "object",
        "description": "A value set tagged with its unit and serie name",
        "properties": {
          "serieName": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/complexType.ChartTimestampValue"
            }
          }
        }
      },
      "complexType.ChartTimestampValue": {
        "type": "object",
        "description": "A timestamp associated to a value",
        "properties": {
          "timestamp": {
            "type": "integer"
          },
          "value": {
            "type": "number",
            "nullable": true
          }
        }
      },
      "complexType.UnitAndValue_double": {
        "type": "object",
        "description": "A numeric value tagged with its unit",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Unit of the value",
            "readOnly": true
          },
          "value": {
            "type": "number"
          }
        }
      },
      "complexType.UnitAndValue_long": {
        "type": "object",
        "description": "A numeric value tagged with its unit",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Unit of the value",
            "readOnly": true
          },
          "value": {
            "type": "integer"
          }
        }
      },
      "complexType.UnitAndValue_string": {
        "type": "object",
        "description": "A numeric value tagged with its unit",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Unit of the value",
            "readOnly": true
          },
          "value": {
            "type": "string"
          }
        }
      },
      "duration": {
        "type": "string",
        "description": "Duration (e.g., P1Y2M3DT4H6M9S)",
        "example": "P1Y2M3DT4H6M9S"
      },
      "email": {
        "type": "string",
        "description": "Email address (e.g., api@ml.ovh.net)",
        "format": "email",
        "example": "api@ml.ovh.net"
      },
      "hosting.web.Address": {
        "type": "object",
        "description": "Url and port of a service",
        "properties": {
          "port": {
            "type": "integer",
            "description": "Port to use to access to the service"
          },
          "url": {
            "type": "string",
            "description": "Url to contact the service"
          }
        }
      },
      "hosting.web.AttachedDomain": {
        "type": "object",
        "description": "Attached domain",
        "properties": {
          "bypassDNSConfiguration": {
            "type": "boolean",
            "description": "If set to true, DNS zone will not be updated by the operation",
            "nullable": true
          },
          "cdn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.CdnEnum"
              }
            ],
            "description": "Whether the attached domain is linked to the hosting CDN",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "description": "Domain to link",
            "nullable": true
          },
          "firewall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.FirewallEnum"
              }
            ],
            "description": "Whether the firewall is active for this domain",
            "nullable": true
          },
          "ipLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.CountryEnum"
              }
            ],
            "description": "Change attached domain's DNS to the IP of the country",
            "nullable": true
          },
          "ownLog": {
            "type": "string",
            "description": "Domain to separate the logs on",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Path of the attached domain",
            "nullable": true
          },
          "runtimeId": {
            "type": "integer",
            "description": "The runtime configuration ID used on this domain",
            "nullable": true
          },
          "ssl": {
            "type": "boolean",
            "description": "Whether to put the attached domain in the SSL certificate",
            "nullable": true
          }
        }
      },
      "hosting.web.AvailableOfferStruct": {
        "type": "object",
        "description": "Struct which describs an boost offer from a service",
        "properties": {
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferEnum"
              }
            ],
            "description": "Available boost offer"
          },
          "price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "The price in month for this boost offer"
          }
        }
      },
      "hosting.web.BoostHistory": {
        "type": "object",
        "description": "Boost History",
        "properties": {
          "accountId": {
            "type": "string",
            "description": " Account who requested the change",
            "readOnly": true
          },
          "boostOffer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferCapabilitiesEnum"
              }
            ],
            "description": "Boost offer used",
            "nullable": true,
            "readOnly": true
          },
          "date": {
            "type": "string",
            "description": "The date when the change has been requested",
            "format": "date-time",
            "readOnly": true
          },
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferCapabilitiesEnum"
              }
            ],
            "description": "Offer when the change was made",
            "readOnly": true
          }
        }
      },
      "hosting.web.CDN": {
        "type": "object",
        "description": "CDN properties",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Domain of this CDN",
            "readOnly": true
          },
          "free": {
            "type": "boolean",
            "description": "Whether CDN is free with the hosting",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.cdn.StatusEnum"
              }
            ],
            "description": "Status of the CDN option",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this CDN",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Type of the CDN",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Version of the CDN",
            "readOnly": true
          }
        }
      },
      "hosting.web.Capabilities": {
        "type": "object",
        "description": "Struct which describs an offer",
        "properties": {
          "attachedDomains": {
            "type": "integer",
            "description": "Number of domains you can attach to your hosting"
          },
          "crontab": {
            "type": "boolean",
            "description": "Does the offer allow crontab"
          },
          "databaseEngines": {
            "type": "integer",
            "description": "Number of database engines allowed for your hosting"
          },
          "databases": {
            "type": "array",
            "description": "Describe all databases type you can have",
            "items": {
              "$ref": "#/components/schemas/hosting.web.database.CreationDatabaseCapabilities"
            }
          },
          "disk": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.DiskType"
              }
            ],
            "description": "Disk capacity and type available for your hosting ( null for unlimited )",
            "nullable": true
          },
          "emails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.CreationEmailCapabilities"
              }
            ],
            "description": "Describe all email offer you can have"
          },
          "envVars": {
            "type": "integer",
            "description": "Number of environment variables allowed for your hosting"
          },
          "extraUsers": {
            "type": "integer",
            "description": "Number of ftp user you can create"
          },
          "filesBrowser": {
            "type": "boolean",
            "description": "Does the offer allow access to web files browser?"
          },
          "highlight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.HighLightEnum"
              }
            ],
            "description": "Marketing information about the current offer",
            "nullable": true
          },
          "languages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.CronLanguageAvailable"
              }
            ],
            "description": "Language available for cron script"
          },
          "moduleOneClick": {
            "type": "boolean",
            "description": "Does the offer allow 1-click modules?"
          },
          "privateDatabases": {
            "type": "array",
            "description": "Describe all privateDatabases type you can have",
            "items": {
              "$ref": "#/components/schemas/hosting.web.database.CreationDatabaseCapabilities"
            }
          },
          "runtimes": {
            "type": "integer",
            "description": "Number of runtimes allowed for your hosting"
          },
          "sitesRecommended": {
            "type": "integer",
            "description": "Number of sites recommended for your hosting ( -1 for unlimited )",
            "nullable": true
          },
          "ssh": {
            "type": "boolean",
            "description": "Does the offer allow SSH access"
          },
          "traffic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Traffic quota size for your hosting ( null for unlimited )",
            "nullable": true
          }
        }
      },
      "hosting.web.CountriesIp": {
        "type": "object",
        "description": "Available clusterIp by country",
        "properties": {
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.CountryEnum"
              }
            ],
            "description": "The whois country of the ip",
            "readOnly": true
          },
          "ip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "The cluster ip",
            "nullable": true,
            "readOnly": true
          },
          "ipv6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6"
              }
            ],
            "description": "The cluster ipv6",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.CountryEnum": {
        "type": "string",
        "description": "Available cluster countries",
        "enum": [
          "BE",
          "CA",
          "CZ",
          "DE",
          "ES",
          "FI",
          "FR",
          "IE",
          "IT",
          "LT",
          "NL",
          "PL",
          "PT",
          "UK"
        ]
      },
      "hosting.web.CreationEmailCapabilities": {
        "type": "object",
        "description": "Struct which describes mail offer available and his quota",
        "properties": {
          "available": {
            "type": "integer",
            "description": "Number of email available for creation"
          },
          "quota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Email account capacity"
          }
        }
      },
      "hosting.web.Cron": {
        "type": "object",
        "description": "Cron",
        "properties": {
          "command": {
            "type": "string",
            "description": "Command to execute"
          },
          "description": {
            "type": "string",
            "description": "Description field for you",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email used to receive error log (stderr)",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "description": "Frequency (crontab format) defined for the script (minutes are ignored)"
          },
          "id": {
            "type": "integer",
            "description": "Cron's id",
            "readOnly": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.LanguagesEnum"
              }
            ],
            "description": "Cron language"
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.cron.StateEnum"
              }
            ],
            "description": "Cron language",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.cron.StatusEnum"
              }
            ],
            "description": "Cron status"
          }
        },
        "required": [
          "command",
          "frequency",
          "language"
        ]
      },
      "hosting.web.CronLanguageAvailable": {
        "type": "object",
        "description": "Language available for cron script",
        "properties": {
          "nodejs": {
            "type": "array",
            "description": "NodeJS versions",
            "items": {
              "$ref": "#/components/schemas/hosting.web.NodejsVersionAvailableEnum"
            }
          },
          "php": {
            "type": "array",
            "description": "Php versions",
            "items": {
              "$ref": "#/components/schemas/hosting.web.PhpVersionAvailableEnum"
            }
          },
          "python": {
            "type": "array",
            "description": "Python versions",
            "items": {
              "$ref": "#/components/schemas/hosting.web.PythonVersionAvailableEnum"
            }
          },
          "ruby": {
            "type": "array",
            "description": "Ruby versions",
            "items": {
              "$ref": "#/components/schemas/hosting.web.RubyVersionAvailableEnum"
            }
          }
        }
      },
      "hosting.web.DatacenterEnum": {
        "type": "string",
        "description": "Available datacenters",
        "enum": [
          "bhs",
          "bhs1",
          "gra",
          "gra1",
          "gra2",
          "gra3",
          "p19"
        ]
      },
      "hosting.web.DiskType": {
        "type": "object",
        "description": "Disk properties (size and type of disk)",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.DiskTypeEnum"
              }
            ],
            "description": "Type of the disk"
          },
          "unit": {
            "type": "string",
            "description": "Unit for disk size"
          },
          "value": {
            "type": "number",
            "description": "Size of the disk"
          }
        }
      },
      "hosting.web.DiskTypeEnum": {
        "type": "string",
        "description": "Disk type available",
        "enum": [
          "HDD",
          "SSD"
        ]
      },
      "hosting.web.EnvVar": {
        "type": "object",
        "description": "Environment variables set into your webhosting account",
        "properties": {
          "key": {
            "type": "string",
            "description": "Name of the variable",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.envVar.StatusEnum"
              }
            ],
            "description": "The environnement variable status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this variable",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.envVar.TypeEnum"
              }
            ],
            "description": "Type of variable set",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "description": "Value of the variable",
            "format": "password"
          }
        }
      },
      "hosting.web.EnvVarInput": {
        "type": "object",
        "description": "Environment variables set into your webhosting account",
        "properties": {
          "key": {
            "type": "string",
            "description": "Name of the variable"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.envVar.TypeEnum"
              }
            ],
            "description": "Type of variable set"
          },
          "value": {
            "type": "string",
            "description": "Value of the variable",
            "format": "password"
          }
        },
        "required": [
          "key",
          "type",
          "value"
        ]
      },
      "hosting.web.HighLightEnum": {
        "type": "string",
        "description": "Highlight tips for offer",
        "enum": [
          "best-seller",
          "new"
        ]
      },
      "hosting.web.Key": {
        "type": "object",
        "description": "Key information",
        "properties": {
          "publicKey": {
            "type": "string",
            "description": "Public key",
            "readOnly": true
          }
        }
      },
      "hosting.web.LanguagesEnum": {
        "type": "string",
        "description": "Web supported languages",
        "enum": [
          "node10",
          "node11",
          "node12",
          "node14",
          "node8",
          "node9",
          "other",
          "php4",
          "php5.2",
          "php5.3",
          "php5.4",
          "php5.5",
          "php5.6",
          "php7.0",
          "php7.1",
          "php7.2",
          "php7.3",
          "php7.4",
          "php8.0",
          "php8.1",
          "php8.2",
          "php8.3",
          "php8.4",
          "python2",
          "python3",
          "ruby2.6"
        ]
      },
      "hosting.web.MetricsToken": {
        "type": "object",
        "description": "Metrics token",
        "properties": {
          "endpoint": {
            "type": "string",
            "description": "Backend url",
            "readOnly": true
          },
          "expiry": {
            "type": "string",
            "description": "Token expiration date",
            "format": "date-time",
            "readOnly": true
          },
          "token": {
            "type": "string",
            "description": "Generated token",
            "format": "password",
            "readOnly": true
          }
        }
      },
      "hosting.web.ModuleList": {
        "type": "object",
        "description": "A module specifically packaged by OVH",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Is the module available?",
            "readOnly": true
          },
          "adminNameType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.module.AdminNameTypeEnum"
              }
            ],
            "description": "The type of the admin name",
            "readOnly": true
          },
          "author": {
            "type": "string",
            "description": "The packager of this module for OVH",
            "readOnly": true
          },
          "branch": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.module.BranchEnum"
              }
            ],
            "description": "The branch of the module",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "The ID of the module",
            "readOnly": true
          },
          "keywords": {
            "type": "array",
            "description": "The keywords for this module",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "language": {
            "type": "array",
            "description": "All available languages for this module",
            "items": {
              "$ref": "#/components/schemas/hosting.web.module.LanguageEnum"
            },
            "readOnly": true
          },
          "languageRequirement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_string"
              }
            ],
            "description": "Minimal language version required to run this module",
            "readOnly": true
          },
          "latest": {
            "type": "boolean",
            "description": "Is this the latest version available?",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The name of the module",
            "readOnly": true
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Size of the module",
            "readOnly": true
          },
          "upgradeFrom": {
            "type": "array",
            "description": "The IDs of the module you can upgrade to",
            "items": {
              "type": "integer"
            },
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "The version of the module",
            "readOnly": true
          }
        }
      },
      "hosting.web.NodejsVersionAvailableEnum": {
        "type": "string",
        "description": "Different NodeJs versions available",
        "enum": [
          "nodejs-10",
          "nodejs-11",
          "nodejs-12",
          "nodejs-8",
          "nodejs-9"
        ]
      },
      "hosting.web.OfferCapabilitiesEnum": {
        "type": "string",
        "description": "Hosting's offer",
        "enum": [
          "1000gp",
          "20gp",
          "240gp",
          "240pack",
          "240plan",
          "300gp",
          "60gp",
          "720pack",
          "720plan",
          "90pack",
          "90plan",
          "CLOUDWEB_1",
          "CLOUDWEB_2",
          "CLOUDWEB_3",
          "KS",
          "PERFORMANCE_1",
          "PERFORMANCE_2",
          "PERFORMANCE_3",
          "PERFORMANCE_4",
          "PERSO",
          "POWER_BETA_1",
          "PRO",
          "START",
          "business",
          "cloudweb1",
          "cloudweb2",
          "cloudweb3",
          "cloudwebbetax1",
          "depro2012",
          "deprol2012",
          "deproxl2012",
          "deproxxl2012",
          "destart2012",
          "destartl2012",
          "destartxl2012",
          "domainpack",
          "hosting-free-100m",
          "hosting-performance-1",
          "hosting-performance-2",
          "hosting-performance-3",
          "hosting-performance-4",
          "hosting-perso",
          "hosting-pro",
          "hosting-starter",
          "hosting-starter-ovh",
          "hostingAtScaleX128",
          "hostingAtScaleX16",
          "hostingAtScaleX20",
          "hostingAtScaleX24",
          "hostingAtScaleX32",
          "hostingAtScaleX64",
          "hostingAtScaleX8",
          "itbusiness2012",
          "itperso2012",
          "itpremium2012",
          "kimsufi2015",
          "mailpack",
          "mailplan",
          "mediapack",
          "mediaplan",
          "ovhpro1To",
          "ovhpro2To",
          "ovhpro5To",
          "paas2014beta",
          "perf2014x1",
          "perf2014x2",
          "perf2014x3",
          "perf2014x4",
          "perso2010",
          "perso2014",
          "powerBeta1",
          "powerbeta1",
          "premium",
          "pro2010",
          "pro2014",
          "start10g",
          "start10m",
          "start1g",
          "start1ges",
          "start1m",
          "start5g",
          "starter",
          "xxlpack",
          "xxlplan"
        ]
      },
      "hosting.web.OfferEnum": {
        "type": "string",
        "description": "Hosting's offer",
        "enum": [
          "CLOUDWEB_1",
          "CLOUDWEB_2",
          "CLOUDWEB_3",
          "KS",
          "PERFORMANCE_1",
          "PERFORMANCE_2",
          "PERFORMANCE_3",
          "PERFORMANCE_4",
          "PERSO",
          "POWER_BETA_1",
          "PRO",
          "START"
        ]
      },
      "hosting.web.OperatingSystemEnum": {
        "type": "string",
        "description": "Hosting's OS",
        "enum": [
          "linux"
        ]
      },
      "hosting.web.OvhConfigCapabilities": {
        "type": "object",
        "description": "Struct which describes version and container image available",
        "properties": {
          "containerImage": {
            "type": "array",
            "description": "Container image available",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhConfig.AvailableEngineVersionEnum"
              }
            ],
            "description": "PHP version"
          }
        }
      },
      "hosting.web.OvhConfigRecommendedValues": {
        "type": "object",
        "description": "Struct which recommend default values on ovhConfig file",
        "properties": {
          "container": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhconfig.ContainerEnum"
              }
            ],
            "description": "Container to run this website"
          },
          "engineName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhConfig.EngineNameEnum"
              }
            ],
            "description": "Engine name"
          },
          "engineVersion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhConfig.AvailableEngineVersionEnum"
              }
            ],
            "description": "PHP version"
          },
          "environment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhConfig.EnvironmentEnum"
              }
            ],
            "description": "Environment configuration"
          },
          "httpFirewall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhConfig.HttpFirewallEnum"
              }
            ],
            "description": "Configuration for http firewall"
          }
        }
      },
      "hosting.web.PhpVersion": {
        "type": "object",
        "description": "State of available php versions for this account",
        "properties": {
          "support": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.PhpVersionStateEnum"
              }
            ],
            "description": "Current support of this php version"
          },
          "version": {
            "type": "string",
            "description": "PHP version"
          }
        }
      },
      "hosting.web.PhpVersionAvailableEnum": {
        "type": "string",
        "description": "Different PHP versions available",
        "enum": [
          "phpfpm-5.6",
          "phpfpm-7.0",
          "phpfpm-7.1",
          "phpfpm-7.2",
          "phpfpm-7.3",
          "phpfpm-7.4",
          "phpfpm-8.0",
          "phpfpm-8.1",
          "phpfpm-8.2",
          "phpfpm-8.3",
          "phpfpm-8.4"
        ]
      },
      "hosting.web.PhpVersionStateEnum": {
        "type": "string",
        "description": "Different support of PHP versions",
        "enum": [
          "BETA",
          "END_OF_LIFE",
          "SECURITY_FIXES",
          "SUPPORTED"
        ]
      },
      "hosting.web.PublicTask": {
        "type": "object",
        "description": "Public task",
        "properties": {
          "doneDate": {
            "type": "string",
            "description": "Done date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "function": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.task.FunctionEnum"
              }
            ],
            "description": "Task function",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Task's id",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Last update date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "objectId": {
            "type": "string",
            "description": "Task object id",
            "nullable": true,
            "readOnly": true
          },
          "objectType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.task.ObjectTypeEnum"
              }
            ],
            "description": "Task object type",
            "nullable": true,
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.task.StatusEnum"
              }
            ],
            "description": "Task status",
            "readOnly": true
          }
        }
      },
      "hosting.web.PythonVersionAvailableEnum": {
        "type": "string",
        "description": "Different Python versions available",
        "enum": [
          "python-2",
          "python-3"
        ]
      },
      "hosting.web.RequestActionEnum": {
        "type": "string",
        "description": "Types of action you can request for your web hosting",
        "enum": [
          "CHECK_QUOTA",
          "FLUSH_CACHE",
          "SCAN_ANTIHACK"
        ]
      },
      "hosting.web.RequestBoostInput": {
        "type": "object",
        "description": "RequestBoost input properties",
        "properties": {
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferEnum"
              }
            ],
            "description": "Requested boost offer",
            "nullable": true
          }
        }
      },
      "hosting.web.ResourceEnum": {
        "type": "string",
        "description": "Hosting's type",
        "enum": [
          "bestEffort",
          "cloud",
          "dedicated",
          "shared"
        ]
      },
      "hosting.web.RubyVersionAvailableEnum": {
        "type": "string",
        "description": "Different Ruby versions available",
        "enum": [
          "ruby-2.6"
        ]
      },
      "hosting.web.SSL": {
        "type": "object",
        "description": "Hosted SSL properties",
        "properties": {
          "isReportable": {
            "type": "boolean",
            "description": "If the hostedssl is currently bound to a report",
            "readOnly": true
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ProviderEnum"
              }
            ],
            "description": "Provider of the Hosted SSL",
            "readOnly": true
          },
          "regenerable": {
            "type": "boolean",
            "description": "Regenerable flag",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.StatusEnum"
              }
            ],
            "description": "Status of the Hosted SSL",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this Hosted SSL",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.TypeEnum"
              }
            ],
            "description": "Type of the Hosted SSL",
            "readOnly": true
          }
        }
      },
      "hosting.web.SSLInput": {
        "type": "object",
        "description": "SSL input properties",
        "properties": {
          "certificate": {
            "type": "string",
            "description": "certificate"
          },
          "chain": {
            "type": "string",
            "description": "certificate chain"
          },
          "key": {
            "type": "string",
            "description": "private key",
            "format": "password"
          }
        }
      },
      "hosting.web.Service": {
        "type": "object",
        "description": "Web Hosting",
        "properties": {
          "availableBoostOffer": {
            "type": "array",
            "description": "Available offers for boost option",
            "items": {
              "$ref": "#/components/schemas/hosting.web.AvailableOfferStruct"
            },
            "readOnly": true
          },
          "boostOffer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferCapabilitiesEnum"
              }
            ],
            "description": "Current boost offer",
            "nullable": true,
            "readOnly": true
          },
          "cluster": {
            "type": "string",
            "description": "Cluster name",
            "readOnly": true
          },
          "clusterIp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "This direct ip to your cluster ( usefull for application like api )",
            "nullable": true,
            "readOnly": true
          },
          "clusterIpv6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6"
              }
            ],
            "description": "This direct ipv6 to your cluster ( usefull for application like api )",
            "nullable": true,
            "readOnly": true
          },
          "countriesIp": {
            "type": "array",
            "description": "Available clusterIp by countries",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/hosting.web.CountriesIp"
            },
            "readOnly": true
          },
          "datacenter": {
            "type": "string",
            "description": "Datacenter where this account is located",
            "readOnly": true
          },
          "defaultAttachedDomain": {
            "type": "string",
            "description": "The default attached domain created along with your hosting",
            "nullable": true,
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "description": "Set the name displayed in ManagerV6 for your hosting (max 50 chars)",
            "nullable": true
          },
          "filer": {
            "type": "string",
            "description": "Filer name",
            "nullable": true,
            "readOnly": true
          },
          "hasCdn": {
            "type": "boolean",
            "description": "Has a CDN service linked on the hosting",
            "nullable": true,
            "readOnly": true
          },
          "hasHostedSsl": {
            "type": "boolean",
            "description": "Has a HostedSSL service linked on the hosting",
            "nullable": true,
            "readOnly": true
          },
          "home": {
            "type": "string",
            "description": "Path of your home",
            "readOnly": true
          },
          "hostingIp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "The recommended ip for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )",
            "nullable": true,
            "readOnly": true
          },
          "hostingIpv6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6"
              }
            ],
            "description": "The recommended ipv6 for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )",
            "nullable": true,
            "readOnly": true
          },
          "lastOvhConfigScan": {
            "type": "string",
            "description": "/hosting/web/{serviceName}/ovhConfig is stored in cache. This date is the last refresh of this data",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "multipleSSL": {
            "type": "boolean",
            "description": "If set to true, service can manage more than only one certificate",
            "readOnly": true
          },
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferCapabilitiesEnum"
              }
            ],
            "description": "Hosting offer",
            "readOnly": true
          },
          "operatingSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OperatingSystemEnum"
              }
            ],
            "description": "Hosting's OS",
            "readOnly": true
          },
          "phpVersions": {
            "type": "array",
            "description": "State of available php versions for this account",
            "items": {
              "$ref": "#/components/schemas/hosting.web.PhpVersion"
            },
            "readOnly": true
          },
          "primaryLogin": {
            "type": "string",
            "description": "Hosting's main login",
            "readOnly": true
          },
          "quotaSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Space allowed",
            "readOnly": true
          },
          "quotaUsed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Space used",
            "nullable": true,
            "readOnly": true
          },
          "recommendedOffer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferEnum"
              }
            ],
            "description": "If your offer is old, return a recommended offer to migrate on",
            "nullable": true,
            "readOnly": true
          },
          "resourceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ResourceEnum"
              }
            ],
            "description": "Hosting resource type",
            "readOnly": true
          },
          "serviceManagementAccess": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ServiceAccess"
              }
            ],
            "description": "URLs to use to manage your webhosting",
            "readOnly": true
          },
          "serviceName": {
            "type": "string",
            "description": "Service name",
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.StateEnum"
              }
            ],
            "description": "State of your hosting",
            "readOnly": true
          },
          "token": {
            "type": "string",
            "description": "Use to link an external domain. ( This token has to be insert into a TXT field on your dns zone with ovhcontrol subdomain )",
            "nullable": true,
            "readOnly": true
          },
          "trafficQuotaSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Traffic quota allowed ( null = unlimited )",
            "nullable": true,
            "readOnly": true
          },
          "trafficQuotaUsed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Traffic quota used",
            "nullable": true,
            "readOnly": true
          },
          "updates": {
            "type": "array",
            "description": "List of updates on your hosting",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        }
      },
      "hosting.web.ServiceAccess": {
        "type": "object",
        "description": "Different url to manage your service",
        "properties": {
          "ftp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.Address"
              }
            ],
            "description": "Address with url and port to manage files by ftp"
          },
          "http": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.Address"
              }
            ],
            "description": "Address to see your webhosting without domain"
          },
          "ssh": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.Address"
              }
            ],
            "description": "Address with url and port to manage webhosting by ssh"
          }
        }
      },
      "hosting.web.ServiceWithIAM": {
        "type": "object",
        "description": "Web Hosting",
        "properties": {
          "availableBoostOffer": {
            "type": "array",
            "description": "Available offers for boost option",
            "items": {
              "$ref": "#/components/schemas/hosting.web.AvailableOfferStruct"
            },
            "readOnly": true
          },
          "boostOffer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferCapabilitiesEnum"
              }
            ],
            "description": "Current boost offer",
            "nullable": true,
            "readOnly": true
          },
          "cluster": {
            "type": "string",
            "description": "Cluster name",
            "readOnly": true
          },
          "clusterIp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "This direct ip to your cluster ( usefull for application like api )",
            "nullable": true,
            "readOnly": true
          },
          "clusterIpv6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6"
              }
            ],
            "description": "This direct ipv6 to your cluster ( usefull for application like api )",
            "nullable": true,
            "readOnly": true
          },
          "countriesIp": {
            "type": "array",
            "description": "Available clusterIp by countries",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/hosting.web.CountriesIp"
            },
            "readOnly": true
          },
          "datacenter": {
            "type": "string",
            "description": "Datacenter where this account is located",
            "readOnly": true
          },
          "defaultAttachedDomain": {
            "type": "string",
            "description": "The default attached domain created along with your hosting",
            "nullable": true,
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "description": "Set the name displayed in ManagerV6 for your hosting (max 50 chars)",
            "nullable": true
          },
          "filer": {
            "type": "string",
            "description": "Filer name",
            "nullable": true,
            "readOnly": true
          },
          "hasCdn": {
            "type": "boolean",
            "description": "Has a CDN service linked on the hosting",
            "nullable": true,
            "readOnly": true
          },
          "hasHostedSsl": {
            "type": "boolean",
            "description": "Has a HostedSSL service linked on the hosting",
            "nullable": true,
            "readOnly": true
          },
          "home": {
            "type": "string",
            "description": "Path of your home",
            "readOnly": true
          },
          "hostingIp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv4"
              }
            ],
            "description": "The recommended ip for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )",
            "nullable": true,
            "readOnly": true
          },
          "hostingIpv6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ipv6"
              }
            ],
            "description": "The recommended ipv6 for your hosting ( depends on hosting's linked services, e.g CDN or hostedSSL )",
            "nullable": true,
            "readOnly": true
          },
          "iam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.ResourceMetadata"
              }
            ],
            "description": "IAM resource metadata",
            "nullable": true,
            "readOnly": true
          },
          "lastOvhConfigScan": {
            "type": "string",
            "description": "/hosting/web/{serviceName}/ovhConfig is stored in cache. This date is the last refresh of this data",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "multipleSSL": {
            "type": "boolean",
            "description": "If set to true, service can manage more than only one certificate",
            "readOnly": true
          },
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferCapabilitiesEnum"
              }
            ],
            "description": "Hosting offer",
            "readOnly": true
          },
          "operatingSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OperatingSystemEnum"
              }
            ],
            "description": "Hosting's OS",
            "readOnly": true
          },
          "phpVersions": {
            "type": "array",
            "description": "State of available php versions for this account",
            "items": {
              "$ref": "#/components/schemas/hosting.web.PhpVersion"
            },
            "readOnly": true
          },
          "primaryLogin": {
            "type": "string",
            "description": "Hosting's main login",
            "readOnly": true
          },
          "quotaSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Space allowed",
            "readOnly": true
          },
          "quotaUsed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Space used",
            "nullable": true,
            "readOnly": true
          },
          "recommendedOffer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferEnum"
              }
            ],
            "description": "If your offer is old, return a recommended offer to migrate on",
            "nullable": true,
            "readOnly": true
          },
          "resourceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ResourceEnum"
              }
            ],
            "description": "Hosting resource type",
            "readOnly": true
          },
          "serviceManagementAccess": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ServiceAccess"
              }
            ],
            "description": "URLs to use to manage your webhosting",
            "readOnly": true
          },
          "serviceName": {
            "type": "string",
            "description": "Service name",
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.StateEnum"
              }
            ],
            "description": "State of your hosting",
            "readOnly": true
          },
          "token": {
            "type": "string",
            "description": "Use to link an external domain. ( This token has to be insert into a TXT field on your dns zone with ovhcontrol subdomain )",
            "nullable": true,
            "readOnly": true
          },
          "trafficQuotaSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Traffic quota allowed ( null = unlimited )",
            "nullable": true,
            "readOnly": true
          },
          "trafficQuotaUsed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Traffic quota used",
            "nullable": true,
            "readOnly": true
          },
          "updates": {
            "type": "array",
            "description": "List of updates on your hosting",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        }
      },
      "hosting.web.StateEnum": {
        "type": "string",
        "description": "Hosting's state",
        "enum": [
          "active",
          "bloqued",
          "maintenance"
        ]
      },
      "hosting.web.StatisticsPeriodEnum": {
        "type": "string",
        "description": "Available periods for statistics",
        "enum": [
          "daily",
          "monthly",
          "weekly",
          "yearly"
        ]
      },
      "hosting.web.StatisticsTypeEnum": {
        "type": "string",
        "description": "Types of statistics available for the web hosting",
        "enum": [
          "in.ftpCommands",
          "in.httpHits",
          "in.httpMeanResponseTime",
          "out.tcpConn",
          "sys.cpuUsage",
          "sys.workerSpawnOverload"
        ]
      },
      "hosting.web.SupportedVcsEnum": {
        "type": "string",
        "description": "Supported VCS platforms",
        "enum": [
          "github"
        ]
      },
      "hosting.web.VcsWebhooks": {
        "type": "object",
        "description": "VCS webhooks URLs for given hosting and VCS platform",
        "properties": {
          "push": {
            "type": "string",
            "description": "Webhook URL for push events",
            "readOnly": true
          }
        }
      },
      "hosting.web.Website": {
        "type": "object",
        "description": "A website on your hosting",
        "properties": {
          "domains": {
            "type": "array",
            "description": "Domains of the website",
            "items": {
              "$ref": "#/components/schemas/hosting.web.website.Domain"
            },
            "readOnly": true
          },
          "hostingDisplayName": {
            "type": "string",
            "description": "Display name of the hosting",
            "readOnly": true
          },
          "hostingServiceName": {
            "type": "string",
            "description": "Name of the hosting service",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Website numeric identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Customizable name of the website",
            "nullable": true,
            "readOnly": true
          },
          "path": {
            "type": "string",
            "description": "Relative path on the hosting filesystem the website is deployed into",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.website.StatusEnum"
              }
            ],
            "description": "Current status of the website",
            "readOnly": true
          },
          "vcsBranch": {
            "type": "string",
            "description": "Branch of the repository containing the website source code to deploy",
            "readOnly": true
          },
          "vcsUrl": {
            "type": "string",
            "description": "URL of the repository containing the website source code to deploy",
            "readOnly": true
          }
        }
      },
      "hosting.web.WebsiteCreationCapabilities": {
        "type": "object",
        "description": "Website creation capabilities of your hosting",
        "properties": {
          "allowedWebsites": {
            "type": "integer",
            "description": "Number of websites allowed by your hosting offer, -1 meaning unlimited",
            "readOnly": true
          },
          "existingWebsites": {
            "type": "integer",
            "description": "Number of existing websites on your hosting",
            "readOnly": true
          }
        }
      },
      "hosting.web.attachedDomain": {
        "type": "object",
        "description": "Virtual service",
        "properties": {
          "capabilities": {
            "type": "array",
            "description": "Provides the capabilities related to your attachedDomain",
            "items": {
              "$ref": "#/components/schemas/hosting.web.attachedDomain.Capabilities"
            },
            "readOnly": true
          },
          "cdn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.CdnEnum"
              }
            ],
            "description": "Is linked to the hosting cdn"
          },
          "domain": {
            "type": "string",
            "description": "Domain linked (fqdn)",
            "readOnly": true
          },
          "firewall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.FirewallEnum"
              }
            ],
            "description": "Firewall state for this path"
          },
          "ipLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.CountryEnum"
              }
            ],
            "description": "IP location of the domain linked",
            "nullable": true,
            "readOnly": true
          },
          "isFlushable": {
            "type": "boolean",
            "description": "Provides information if your Cdn can be flushed or not",
            "readOnly": true
          },
          "ownLog": {
            "type": "string",
            "description": "Put domain for separate the logs",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Domain path, relative to your home directory"
          },
          "runtimeId": {
            "type": "integer",
            "description": "The runtime configuration ID used on this domain",
            "nullable": true
          },
          "ssl": {
            "type": "boolean",
            "description": "Put domain in ssl certificate",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.StatusEnum"
              }
            ],
            "description": "The domain status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this domain",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.attachedDomain.Capabilities": {
        "type": "object",
        "description": "Attached domain Capability",
        "properties": {
          "description": {
            "type": "string",
            "description": "Capability description",
            "readOnly": true
          },
          "href": {
            "type": "string",
            "description": "Capability href",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "description": "Capability key",
            "readOnly": true
          },
          "method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.CapabilityMethodEnum"
              }
            ],
            "description": "Capability method",
            "readOnly": true
          }
        }
      },
      "hosting.web.attachedDomain.CapabilityMethodEnum": {
        "type": "string",
        "description": "allowed attachedDomain's capabilities methods",
        "enum": [
          "DELETE",
          "GET",
          "POST",
          "PUT"
        ]
      },
      "hosting.web.attachedDomain.CdnEnum": {
        "type": "string",
        "description": "whether or not the attachedDomain is linked to the hosting cdn",
        "enum": [
          "active",
          "none"
        ]
      },
      "hosting.web.attachedDomain.DigStatus": {
        "type": "object",
        "description": "Attached domain DNS status",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Attached domain",
            "readOnly": true
          },
          "recommendedIps": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.RecommendedIps"
              }
            ],
            "readOnly": true
          },
          "records": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/hosting.web.attachedDomain.RecordStatus"
            },
            "readOnly": true
          }
        }
      },
      "hosting.web.attachedDomain.FirewallEnum": {
        "type": "string",
        "description": "Firewall state for this path",
        "enum": [
          "active",
          "none"
        ]
      },
      "hosting.web.attachedDomain.MethodEnum": {
        "type": "string",
        "description": "Method type",
        "enum": [
          "DELETE",
          "GET",
          "POST",
          "PUT"
        ]
      },
      "hosting.web.attachedDomain.PublicAttachedDomain": {
        "type": "object",
        "description": "Public attached domain",
        "properties": {
          "capabilities": {
            "type": "array",
            "description": "Provides the capabilities related to your attachedDomain",
            "items": {
              "$ref": "#/components/schemas/hosting.web.attachedDomain.Capabilities"
            },
            "readOnly": true
          },
          "cdn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.CdnEnum"
              }
            ],
            "description": "whether or not attachedDomain is linked to the hosting cdn",
            "readOnly": true
          },
          "domain": {
            "type": "string",
            "description": "Domain linked (fqdn)",
            "readOnly": true
          },
          "firewall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.FirewallEnum"
              }
            ],
            "description": "Firewall state for this path",
            "readOnly": true
          },
          "ipLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.CountryEnum"
              }
            ],
            "description": "IP location of the domain linked",
            "nullable": true,
            "readOnly": true
          },
          "isFlushable": {
            "type": "boolean",
            "description": "Whether your CDN can be flushed",
            "readOnly": true
          },
          "ownLog": {
            "type": "string",
            "description": "Domain for separate the logs",
            "nullable": true,
            "readOnly": true
          },
          "path": {
            "type": "string",
            "description": "Attached domain path",
            "readOnly": true
          },
          "runtimeId": {
            "type": "integer",
            "description": "The runtime configuration ID used on this domain",
            "nullable": true,
            "readOnly": true
          },
          "ssl": {
            "type": "boolean",
            "description": "Put domain in SSL certificate",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.StatusEnum"
              }
            ],
            "description": "Domain status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this domain",
            "nullable": true,
            "readOnly": true
          },
          "vcsStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.VcsStatusEnum"
              }
            ],
            "description": "The status of the VCS synchronization",
            "readOnly": true
          }
        }
      },
      "hosting.web.attachedDomain.RecommendedIps": {
        "type": "object",
        "description": "Recommended IPs for DNS records configuration",
        "properties": {
          "recommendedIpV4": {
            "type": "array",
            "description": "Recommended IPV4",
            "items": {
              "$ref": "#/components/schemas/ipv4"
            },
            "readOnly": true
          },
          "recommendedIpV6": {
            "type": "array",
            "description": "Recommended IPV6",
            "items": {
              "$ref": "#/components/schemas/ipv6"
            },
            "readOnly": true
          }
        }
      },
      "hosting.web.attachedDomain.RecordStatus": {
        "type": "object",
        "description": "Attached domain record status",
        "properties": {
          "dnsConfigured": {
            "type": "boolean",
            "description": "Whether DNS is configured",
            "readOnly": true
          },
          "isOvhIp": {
            "type": "boolean",
            "description": "Whether IP is an OVH one",
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.attachedDomain.RecordTypeEnum"
              }
            ],
            "description": "DNS record type",
            "readOnly": true
          }
        }
      },
      "hosting.web.attachedDomain.RecordTypeEnum": {
        "type": "string",
        "description": "DNS Record type",
        "enum": [
          "A",
          "AAAA"
        ]
      },
      "hosting.web.attachedDomain.StatusEnum": {
        "type": "string",
        "description": "attachedDomain status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "updating"
        ]
      },
      "hosting.web.attachedDomain.VcsStatusEnum": {
        "type": "string",
        "description": "AttachedDomain vcs status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "deploying",
          "disabled",
          "error",
          "initialError"
        ]
      },
      "hosting.web.backup.TypeEnum": {
        "type": "string",
        "description": "List of backup types",
        "enum": [
          "daily.1",
          "daily.2",
          "daily.3",
          "weekly.1",
          "weekly.2"
        ]
      },
      "hosting.web.boostHistory": {
        "type": "object",
        "description": "History of your boost requests",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account who requested the change",
            "readOnly": true
          },
          "boostOffer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferCapabilitiesEnum"
              }
            ],
            "description": "Boost offer used",
            "nullable": true,
            "readOnly": true
          },
          "date": {
            "type": "string",
            "description": "The date when the change has been requested",
            "format": "date-time",
            "readOnly": true
          },
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.OfferCapabilitiesEnum"
              }
            ],
            "description": "Offer when the change was made",
            "readOnly": true
          }
        }
      },
      "hosting.web.cdn": {
        "type": "object",
        "description": "CDN service",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Domain of this CDN",
            "readOnly": true
          },
          "free": {
            "type": "boolean",
            "description": "Option CDN free with the hosting ?",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.cdn.StatusEnum"
              }
            ],
            "description": "Status of the CDN option",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this CDN",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Type of the CDN",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Version of the CDN",
            "readOnly": true
          }
        }
      },
      "hosting.web.cdn.StatusEnum": {
        "type": "string",
        "description": "CDN status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "flushing",
          "reopening",
          "suspended",
          "suspending"
        ]
      },
      "hosting.web.configuration": {
        "type": "object",
        "description": "The Configuration of an hosting Power offer",
        "properties": {
          "appEnv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.configuration.EnvEnum"
              }
            ],
            "description": "Application environment"
          },
          "entryPoint": {
            "type": "string",
            "description": "Application launch script",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Id of the current configuration",
            "readOnly": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.configuration.LanguageEnum"
              }
            ],
            "description": "language chosen for the current hosting"
          },
          "publicDir": {
            "type": "string",
            "description": "Directory of the application",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.configuration.StateEnum"
              }
            ],
            "description": "Status of current configuration",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "version of the language chosen for the current hosting"
          }
        }
      },
      "hosting.web.configuration.EnvEnum": {
        "type": "string",
        "description": "Configuration env enum",
        "enum": [
          "development",
          "production"
        ]
      },
      "hosting.web.configuration.LanguageEnum": {
        "type": "string",
        "description": "Configuration languages enum",
        "enum": [
          "nodejs",
          "python",
          "ruby"
        ]
      },
      "hosting.web.configuration.StateEnum": {
        "type": "string",
        "description": "Configuration state enum",
        "enum": [
          "created",
          "creating",
          "deleting",
          "updating"
        ]
      },
      "hosting.web.configuration.VersionEnum": {
        "type": "string",
        "description": "Configuration language versions enum",
        "enum": [
          "nodejs-12",
          "nodejs-14",
          "python-3.7",
          "python-3.8",
          "python-3.9",
          "ruby-2.6",
          "ruby-2.7"
        ]
      },
      "hosting.web.cron": {
        "type": "object",
        "description": "Hosting crons",
        "properties": {
          "command": {
            "type": "string",
            "description": "Command to execute"
          },
          "description": {
            "type": "string",
            "description": "Description field for you",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email used to receive error log ( stderr )",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "description": "Frequency ( crontab format ) defined for the script ( minutes are ignored )"
          },
          "id": {
            "type": "integer",
            "description": "Cron's id",
            "readOnly": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.cron.LanguageEnum"
              }
            ],
            "description": "Cron language"
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.cron.StateEnum"
              }
            ],
            "description": "Cron state",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.cron.StatusEnum"
              }
            ],
            "description": "Cron status"
          }
        }
      },
      "hosting.web.cron.LanguageEnum": {
        "type": "string",
        "description": "Cron's language",
        "enum": [
          "node10",
          "node11",
          "node12",
          "node14",
          "node8",
          "node9",
          "other",
          "php4",
          "php5.2",
          "php5.3",
          "php5.4",
          "php5.5",
          "php5.6",
          "php7.0",
          "php7.1",
          "php7.2",
          "php7.3",
          "php7.4",
          "php8.0",
          "php8.1",
          "php8.2",
          "php8.3",
          "php8.4",
          "python2",
          "python3",
          "ruby2.6"
        ]
      },
      "hosting.web.cron.StateEnum": {
        "type": "string",
        "description": "Cron state",
        "enum": [
          "created",
          "creating",
          "deleting",
          "updating"
        ]
      },
      "hosting.web.cron.StatusEnum": {
        "type": "string",
        "description": "Cron status",
        "enum": [
          "disabled",
          "enabled",
          "suspended"
        ]
      },
      "hosting.web.database": {
        "type": "object",
        "description": "Database",
        "properties": {
          "databaseServiceDeprecated": {
            "type": "boolean",
            "description": "Whether service database is deprecated",
            "readOnly": true
          },
          "databaseType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.DatabaseServiceTypeEnum"
              }
            ],
            "description": "Database service type",
            "nullable": true,
            "readOnly": true
          },
          "dumps": {
            "type": "integer",
            "description": "The number of available dumps associated to this database",
            "readOnly": true
          },
          "guiURL": {
            "type": "string",
            "description": "URL for the graphical user interface",
            "nullable": true,
            "readOnly": true
          },
          "lastCheck": {
            "type": "string",
            "description": "Date of the last check quota",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.ModeEnum"
              }
            ],
            "description": "Mode of your database",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "readOnly": true
          },
          "port": {
            "type": "integer",
            "description": "The port on where to contact this database",
            "readOnly": true
          },
          "quotaSize": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Space allowed",
            "readOnly": true
          },
          "quotaUsed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Space used",
            "readOnly": true
          },
          "server": {
            "type": "string",
            "description": "Your database server name",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.StateEnum"
              }
            ],
            "description": "Database state",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.StatusEnum"
              }
            ],
            "description": "The database status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this database",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.DatabaseTypeEnum"
              }
            ],
            "description": "Type of your database",
            "readOnly": true
          },
          "user": {
            "type": "string",
            "description": "Database user name",
            "readOnly": true
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.VersionEnum"
              }
            ],
            "description": "Database version following the database type",
            "readOnly": true
          },
          "versionSupport": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.SupportedVersionEnum"
              }
            ],
            "description": "Indicates the current support state of your database version",
            "readOnly": true
          }
        }
      },
      "hosting.web.database.AvailableVersionStruct": {
        "type": "object",
        "description": "Database Available and Default version",
        "properties": {
          "default": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.VersionEnum"
              }
            ],
            "description": "Database default version"
          },
          "list": {
            "type": "array",
            "description": "Database available version",
            "items": {
              "$ref": "#/components/schemas/hosting.web.database.VersionEnum"
            }
          }
        }
      },
      "hosting.web.database.CreationDatabaseCapabilities": {
        "type": "object",
        "description": "Struct which describs quota and available for a specific type of database",
        "properties": {
          "available": {
            "type": "integer",
            "description": "Number of database left for creation"
          },
          "engines": {
            "type": "array",
            "description": "Database software available on this platform",
            "items": {
              "$ref": "#/components/schemas/hosting.web.database.DatabaseTypeEnum"
            }
          },
          "isolation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.DatabaseIsolationEnum"
              }
            ],
            "description": "Technology use to isolate differents webhosting accounts"
          },
          "quota": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_long"
              }
            ],
            "description": "Size of data can be used"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.DatabaseCapabilitiesTypeEnum"
              }
            ],
            "description": "Database offer name"
          }
        }
      },
      "hosting.web.database.DatabaseCapabilities": {
        "type": "object",
        "description": "Struct which describe available features for a database",
        "properties": {
          "changePassword": {
            "type": "boolean",
            "description": "Availability of the changePassword function"
          },
          "changeRight": {
            "type": "boolean",
            "description": "Availability of the changeRight function"
          },
          "delete": {
            "type": "boolean",
            "description": "Availability of the delete function"
          },
          "dump": {
            "type": "boolean",
            "description": "Availability of the dump function"
          },
          "getQuota": {
            "type": "boolean",
            "description": "Availability of the getQuota function"
          },
          "getRight": {
            "type": "boolean",
            "description": "Availability of the getQuota function"
          },
          "guiURL": {
            "type": "string",
            "description": "URL of the database management tool"
          },
          "optimize": {
            "type": "boolean",
            "description": "Availability of the optimize function"
          },
          "restore": {
            "type": "boolean",
            "description": "Availability of the restore function"
          }
        }
      },
      "hosting.web.database.DatabaseCapabilitiesTypeEnum": {
        "type": "string",
        "description": "Database capabitities type enum",
        "enum": [
          "extraSqlPerso",
          "local",
          "privateDatabase",
          "sqlLocal",
          "sqlPerso",
          "sqlPro"
        ]
      },
      "hosting.web.database.DatabaseCreationTypeEnum": {
        "type": "string",
        "description": "Database Type enum",
        "enum": [
          "mariadb",
          "mysql",
          "postgresql",
          "redis"
        ]
      },
      "hosting.web.database.DatabaseIsolationEnum": {
        "type": "string",
        "description": "Database Isolation enum",
        "enum": [
          "dedicated",
          "local",
          "shared"
        ]
      },
      "hosting.web.database.DatabaseServiceTypeEnum": {
        "type": "string",
        "description": "Database Service Type enum",
        "enum": [
          "extra",
          "included",
          "optional"
        ]
      },
      "hosting.web.database.DatabaseTypeEnum": {
        "type": "string",
        "description": "Database Type enum",
        "enum": [
          "mariadb",
          "mongodb",
          "mysql",
          "postgresql",
          "redis"
        ]
      },
      "hosting.web.database.ExtraSqlQuotaEnum": {
        "type": "integer",
        "description": "ExtraSqlPerso quota enum",
        "enum": [
          25,
          100,
          200,
          256,
          400,
          512,
          800,
          1024
        ]
      },
      "hosting.web.database.ModeEnum": {
        "type": "string",
        "description": "Database mode",
        "enum": [
          "besteffort",
          "classic",
          "module"
        ]
      },
      "hosting.web.database.RequestActionEnum": {
        "type": "string",
        "description": "Types of action you can request for your database",
        "enum": [
          "CHECK_QUOTA"
        ]
      },
      "hosting.web.database.StateEnum": {
        "type": "string",
        "description": "Database state",
        "enum": [
          "close",
          "ok",
          "readonly"
        ]
      },
      "hosting.web.database.StatisticsTypeEnum": {
        "type": "string",
        "description": "Types of statistics available for the database",
        "enum": [
          "statement",
          "statementMeanTime"
        ]
      },
      "hosting.web.database.StatusEnum": {
        "type": "string",
        "description": "Database status",
        "enum": [
          "checking",
          "created",
          "creating",
          "deleting",
          "dumping",
          "importing",
          "locked",
          "optimizing",
          "restoring",
          "updating"
        ]
      },
      "hosting.web.database.SupportedVersionEnum": {
        "type": "string",
        "description": "Indicates the current support state of your database version",
        "enum": [
          "beta",
          "deprecated",
          "stable"
        ]
      },
      "hosting.web.database.VersionEnum": {
        "type": "string",
        "description": "Database Version enum",
        "enum": [
          "10",
          "10.1",
          "10.11",
          "10.2",
          "10.3",
          "10.4",
          "10.5",
          "10.6",
          "11",
          "12",
          "13",
          "15",
          "3.2",
          "3.4",
          "4.0",
          "5.1",
          "5.5",
          "5.6",
          "5.7",
          "6.0",
          "7.0",
          "8.0",
          "8.4",
          "9.4",
          "9.5",
          "9.6"
        ]
      },
      "hosting.web.database.copy": {
        "type": "object",
        "description": "Copy",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Creation date",
            "format": "date-time",
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "description": "Expiration date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Copy id",
            "format": "uuid",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Last update date",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.copy.StatusEnum"
              }
            ],
            "description": "Copy status",
            "readOnly": true
          }
        }
      },
      "hosting.web.database.copy.StatusEnum": {
        "type": "string",
        "description": "Database copy status",
        "enum": [
          "doing",
          "done",
          "error",
          "todo"
        ]
      },
      "hosting.web.database.dump": {
        "type": "object",
        "description": "Dump",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Creation date of the dump",
            "format": "date-time",
            "readOnly": true
          },
          "deletionDate": {
            "type": "string",
            "description": "Automatic deletion date of the dump",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Dump id",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.dump.StatusEnum"
              }
            ],
            "description": "The dump status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this dump",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.dump.DateEnum"
              }
            ],
            "description": "Dump type",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "description": "Dump url access",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.database.dump.DateEnum": {
        "type": "string",
        "description": "List of dump types",
        "enum": [
          "daily.1",
          "now",
          "weekly.1"
        ]
      },
      "hosting.web.database.dump.StatusEnum": {
        "type": "string",
        "description": "Database dump status",
        "enum": [
          "created",
          "creating",
          "deleting"
        ]
      },
      "hosting.web.dump": {
        "type": "object",
        "description": "Dump",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Creation date of the dump",
            "format": "date-time",
            "readOnly": true
          },
          "databaseName": {
            "type": "string",
            "description": "Source database name",
            "readOnly": true
          },
          "deletionDate": {
            "type": "string",
            "description": "Automatic deletion date of the dump",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Dump id",
            "readOnly": true
          },
          "orphan": {
            "type": "boolean",
            "description": "If source database was deleted",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.dump.StatusEnum"
              }
            ],
            "description": "The dump status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this dump",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.database.dump.DateEnum"
              }
            ],
            "description": "Dump type",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "description": "Dump url access",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.email": {
        "type": "object",
        "description": "Hosting automated emails",
        "properties": {
          "bounce": {
            "type": "integer",
            "description": "Bounce",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "description": "Email used to receive errors",
            "nullable": true
          },
          "maxPerDay": {
            "type": "integer",
            "description": "Max email to sent per day",
            "readOnly": true
          },
          "sent": {
            "type": "integer",
            "description": "Email sent since hosting creation",
            "readOnly": true
          },
          "sentToday": {
            "type": "integer",
            "description": "Email sent today",
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.mail.StateEnum"
              }
            ],
            "description": "Email state",
            "readOnly": true
          }
        }
      },
      "hosting.web.emailoption": {
        "type": "object",
        "description": "Mail service linked to webhosting",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Creation date",
            "format": "date-time",
            "readOnly": true
          },
          "domain": {
            "type": "string",
            "description": "Email service domain",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Account id",
            "readOnly": true
          }
        }
      },
      "hosting.web.envVar": {
        "type": "object",
        "description": "Environment variables set into your webhosting account",
        "properties": {
          "key": {
            "type": "string",
            "description": "Name of the variable",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.envVar.StatusEnum"
              }
            ],
            "description": "The environnement variable status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this variable",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.envVar.TypeEnum"
              }
            ],
            "description": "Type of variable set",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "description": "Value of the variable",
            "format": "password"
          }
        }
      },
      "hosting.web.envVar.StatusEnum": {
        "type": "string",
        "description": "EnvVar status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "updating"
        ]
      },
      "hosting.web.envVar.TypeEnum": {
        "type": "string",
        "description": "Filter the value of type property (=)",
        "enum": [
          "integer",
          "password",
          "string"
        ]
      },
      "hosting.web.extrasqlperso": {
        "type": "object",
        "description": "Sqlperso service",
        "properties": {
          "database": {
            "type": "integer",
            "description": "Number of database allowed by this option",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The extraSqlPerso option name",
            "readOnly": true
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/components/schemas/complexType.UnitAndValue_double"
              }
            ],
            "description": "Quota size allowed per each database by this option",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "The extraSqlPerso option status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this extraSqlPerso",
            "nullable": true,
            "readOnly": true
          },
          "usage": {
            "type": "array",
            "description": "Linked databases",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        }
      },
      "hosting.web.freedom.StatusEnum": {
        "type": "string",
        "description": "FreeDom status",
        "enum": [
          "blockedByCustomer",
          "blockedBySystem",
          "ok",
          "preset"
        ]
      },
      "hosting.web.hostedssl.ProviderEnum": {
        "type": "string",
        "description": "Hosted SSL Provider",
        "enum": [
          "COMODO",
          "CUSTOM",
          "LETSENCRYPT",
          "SECTIGO"
        ]
      },
      "hosting.web.hostedssl.ReportStatusEnum": {
        "type": "string",
        "description": "Hosted SSL report status",
        "enum": [
          "completed",
          "in-progress",
          "non-completed",
          "non-required",
          "not-applicable",
          "not-provided"
        ]
      },
      "hosting.web.hostedssl.ReportValueEnum": {
        "type": "string",
        "description": "Hostedssl report value",
        "enum": [
          "completed",
          "in-progress",
          "non-completed",
          "non-required",
          "not-applicable",
          "not-provided"
        ]
      },
      "hosting.web.hostedssl.StatusEnum": {
        "type": "string",
        "description": "Hosted SSL status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "importing",
          "regenerating"
        ]
      },
      "hosting.web.hostedssl.TypeEnum": {
        "type": "string",
        "description": "Hosted SSL type",
        "enum": [
          "CUSTOM",
          "DV",
          "EV"
        ]
      },
      "hosting.web.indy": {
        "type": "object",
        "description": "Hosting indys",
        "properties": {
          "attachedDomains": {
            "type": "array",
            "description": "AttachedDomain IDs linked to this multidomain",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "home": {
            "type": "string",
            "description": "Home directory",
            "readOnly": true
          },
          "login": {
            "type": "string",
            "description": "Login of the multidomain independent user",
            "readOnly": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.user.StateEnum"
              }
            ],
            "description": "User status",
            "readOnly": true
          }
        }
      },
      "hosting.web.localSeo.DirectoriesList": {
        "type": "object",
        "description": "Struct describing a list of directories ordered by type",
        "properties": {
          "navigationSystems": {
            "type": "array",
            "description": "Navigation systems",
            "items": {
              "$ref": "#/components/schemas/hosting.web.localSeo.Directory"
            }
          },
          "searchEngines": {
            "type": "array",
            "description": "Search engines",
            "items": {
              "$ref": "#/components/schemas/hosting.web.localSeo.Directory"
            }
          },
          "socialNetworks": {
            "type": "array",
            "description": "Social networks",
            "items": {
              "$ref": "#/components/schemas/hosting.web.localSeo.Directory"
            }
          }
        }
      },
      "hosting.web.localSeo.Directory": {
        "type": "object",
        "description": "Struct describing a directory",
        "properties": {
          "code": {
            "type": "string",
            "description": "Identifier to use to get the result of a visibility check for the directory"
          },
          "displayName": {
            "type": "string",
            "description": "Human-readable name of the directory"
          }
        }
      },
      "hosting.web.localSeo.EmailAvailability": {
        "type": "object",
        "description": "Struct describing the availability of an email address for a local SEO order",
        "properties": {
          "availability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.account.EmailAvailabilityEnum"
              }
            ],
            "description": "Availability of the email address"
          },
          "serviceName": {
            "type": "string",
            "description": "Hosting on which the email address is used",
            "nullable": true
          }
        }
      },
      "hosting.web.localSeo.FieldStatusEnum": {
        "type": "string",
        "description": "Sync status of a location field",
        "enum": [
          "MATCH",
          "MISMATCH",
          "MISSING",
          "NOT_APPLICABLE",
          "PRESENT"
        ]
      },
      "hosting.web.localSeo.FlowStatusEnum": {
        "type": "string",
        "description": "Status of a listing",
        "enum": [
          "ALL_INFORMATION_SUBMITTED",
          "DONT_REMOVE",
          "INACTIVE",
          "MANUALLY_DEACTIVATED",
          "NEEDS_REVIEW",
          "NOT_SUPPORTED",
          "NO_ACTION_NEEDED",
          "REMOVAL_NEEDED",
          "REMOVAL_REVIEW_NEEDED",
          "REMOVAL_SUBMITTED",
          "REMOVED",
          "SUBMISSION_NEEDED",
          "WAITING_DIRECTORY_ACTION",
          "WAITING_USER_ACTION"
        ]
      },
      "hosting.web.localSeo.ListingStatusEnum": {
        "type": "string",
        "description": "Sync status of a listing",
        "enum": [
          "IN_SYNC",
          "NOT_FOUND",
          "NOT_IN_SYNC",
          "NOT_SUPPORTED",
          "NO_ONLINE_LISTING",
          "TECHNICAL_PROBLEMS"
        ]
      },
      "hosting.web.localSeo.SearchData": {
        "type": "object",
        "description": "Struct describing a location being checked for visibility",
        "properties": {
          "city": {
            "type": "string",
            "description": "City of the location"
          },
          "country": {
            "type": "string",
            "description": "Country of the location"
          },
          "id": {
            "type": "integer",
            "description": "Id of the search"
          },
          "name": {
            "type": "string",
            "description": "Name of the location"
          },
          "province": {
            "type": "string",
            "description": "Province of the location",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Street of the location"
          },
          "streetNo": {
            "type": "string",
            "description": "Street numero of the location"
          },
          "token": {
            "type": "string",
            "description": "Token to use to get the results of the search"
          },
          "zip": {
            "type": "string",
            "description": "Zipcode of the location"
          }
        }
      },
      "hosting.web.localSeo.VisibilityCheckResponse": {
        "type": "object",
        "description": "Struct describing the response for a visibility check request",
        "properties": {
          "alreadyManaged": {
            "type": "boolean",
            "description": "Is the searched location already managed ?",
            "nullable": true
          },
          "searchData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.SearchData"
              }
            ],
            "description": "Searched location data"
          }
        }
      },
      "hosting.web.localSeo.VisibilityCheckResultResponse": {
        "type": "object",
        "description": "Struct describing a visibility check result",
        "properties": {
          "city": {
            "type": "string",
            "description": "City of the location",
            "nullable": true
          },
          "cityStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "City of the location (sync status)",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country of the location",
            "nullable": true
          },
          "countryStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "Country of the location (sync status)",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "description": "The date and time the listing was created in database",
            "nullable": true,
            "format": "date-time"
          },
          "directoryType": {
            "type": "string",
            "description": "The directory where this listing appears",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "A contact email for the location",
            "nullable": true
          },
          "emailStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "A contact email for the location (sync status)",
            "nullable": true
          },
          "flowStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FlowStatusEnum"
              }
            ],
            "description": "The status of the current listing",
            "nullable": true
          },
          "listingId": {
            "type": "string",
            "description": "The listing id in the directory database",
            "nullable": true
          },
          "listingUrl": {
            "type": "string",
            "description": "The listing url on the directory website",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The location's name used for this listing",
            "nullable": true
          },
          "nameStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "The location's name used for this listing (sync status)",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The location's contact phone number",
            "nullable": true
          },
          "phoneStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "The location's contact phone number (sync status)",
            "nullable": true
          },
          "province": {
            "type": "string",
            "description": "Province of the location",
            "nullable": true
          },
          "provinceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "Province of the location (sync status)",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "The location's street address",
            "nullable": true
          },
          "streetAndNo": {
            "type": "string",
            "description": "A localized combination of street and streetNo",
            "nullable": true
          },
          "streetAndNoStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "A localized combination of street and streetNo (sync status)",
            "nullable": true
          },
          "streetNo": {
            "type": "string",
            "description": "The location's street number",
            "nullable": true
          },
          "streetNoStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "The location's street number (sync status)",
            "nullable": true
          },
          "streetStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "The location's street address (sync status)",
            "nullable": true
          },
          "streetType": {
            "type": "string",
            "description": "The street type for Spain",
            "nullable": true
          },
          "streetTypeStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "The street type for Spain (sync status)",
            "nullable": true
          },
          "syncStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.ListingStatusEnum"
              }
            ],
            "description": "The sync status of the listing",
            "nullable": true
          },
          "website": {
            "type": "string",
            "description": "A valid url for the location's website",
            "nullable": true
          },
          "websiteStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "A valid url for the location's website (sync status)",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "description": "Zipcode of the location",
            "nullable": true
          },
          "zipStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.FieldStatusEnum"
              }
            ],
            "description": "Zipcode of the location (sync status)",
            "nullable": true
          }
        }
      },
      "hosting.web.localSeo.account": {
        "type": "object",
        "description": "Local SEO accounts",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Date of creation of the account",
            "format": "date-time",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "description": "Email address associated to the account",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Account id",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Date of the last account's update",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.account.StatusEnum"
              }
            ],
            "description": "Current status of the account",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "Running task associated to the account",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.localSeo.account.EmailAvailabilityEnum": {
        "type": "string",
        "description": "Availability of an email address for a local SEO order",
        "enum": [
          "available",
          "merge",
          "nic",
          "taken"
        ]
      },
      "hosting.web.localSeo.account.StatusEnum": {
        "type": "string",
        "description": "Account status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "updating"
        ]
      },
      "hosting.web.localSeo.location": {
        "type": "object",
        "description": "Local SEO locations",
        "properties": {
          "accountId": {
            "type": "integer",
            "description": "Account id",
            "nullable": true,
            "readOnly": true
          },
          "address": {
            "type": "string",
            "description": "Address of the location",
            "nullable": true,
            "readOnly": true
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.location.CountryEnum"
              }
            ],
            "description": "Country of the location",
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "Date of the installation of the location",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Location id",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Date of the last location's update",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the location",
            "nullable": true,
            "readOnly": true
          },
          "offer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.location.OfferEnum"
              }
            ],
            "description": "Local SEO offer for this location",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.localSeo.location.StatusEnum"
              }
            ],
            "description": "Current status of the location",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "Running task associated to the location",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.localSeo.location.CountryEnum": {
        "type": "string",
        "description": "Location country",
        "enum": [
          "FR"
        ]
      },
      "hosting.web.localSeo.location.OfferEnum": {
        "type": "string",
        "description": "Location offer",
        "enum": [
          "normal"
        ]
      },
      "hosting.web.localSeo.location.StatusEnum": {
        "type": "string",
        "description": "Location status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "updating"
        ]
      },
      "hosting.web.mail.ActionEnum": {
        "type": "string",
        "description": "Types of action you can request for your mail",
        "enum": [
          "BLOCK",
          "PURGE",
          "UNBLOCK"
        ]
      },
      "hosting.web.mail.Bounce": {
        "type": "object",
        "description": "The volume history type",
        "properties": {
          "date": {
            "type": "string",
            "description": "The datetime of this bounce",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "The return message for this bounce",
            "nullable": true
          },
          "to": {
            "type": "string",
            "description": "The email where you have the bounce",
            "nullable": true
          }
        }
      },
      "hosting.web.mail.StateEnum": {
        "type": "string",
        "description": "Mail state enum",
        "enum": [
          "bounce",
          "force",
          "ko",
          "ok",
          "purging",
          "spam"
        ]
      },
      "hosting.web.mail.VolumeHistory": {
        "type": "object",
        "description": "The volume history type",
        "properties": {
          "date": {
            "type": "string",
            "description": "The datetime of this volume history point",
            "format": "date-time"
          },
          "volume": {
            "type": "integer",
            "description": "The volume history size",
            "nullable": true
          }
        }
      },
      "hosting.web.module": {
        "type": "object",
        "description": "Hosting modules installed",
        "properties": {
          "adminFolder": {
            "type": "string",
            "description": "The admin folder, relative to the module's installation path",
            "readOnly": true
          },
          "adminName": {
            "type": "string",
            "description": "Login for the admin account",
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "Date of the installation of the module",
            "format": "date-time",
            "readOnly": true
          },
          "dependencies": {
            "type": "array",
            "description": "The dependencies to which the module has access. A dependency can be a standard database (like MySQL or PostgreSQL) or a key-value store (like Redis or Memcached) for example",
            "items": {
              "$ref": "#/components/schemas/hosting.web.module.DependencyType"
            },
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Installation ID",
            "readOnly": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.module.LanguageEnum"
              }
            ],
            "description": "The language of the module",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Date of the last module's upgrade",
            "format": "date-time",
            "readOnly": true
          },
          "moduleId": {
            "type": "integer",
            "description": "ID of the module associated with this installation",
            "readOnly": true
          },
          "path": {
            "type": "string",
            "description": "Where the module is installed, relative to your home directory",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.module.StatusEnum"
              }
            ],
            "description": "The module status",
            "readOnly": true
          },
          "targetUrl": {
            "type": "string",
            "description": "The URL from where your module can be reached",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this module",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.module.AdminNameTypeEnum": {
        "type": "string",
        "description": "The type of the admin name",
        "enum": [
          "email",
          "string"
        ]
      },
      "hosting.web.module.BranchEnum": {
        "type": "string",
        "description": "Branch enum",
        "enum": [
          "old",
          "stable",
          "testing"
        ]
      },
      "hosting.web.module.DependencyType": {
        "type": "object",
        "description": "Dependency parameters. A dependency can be a standard database (like MySQL or PostgreSQL) or a key-value store (like Redis or Memcached) for example",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this dependency",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "The password associated with the user",
            "nullable": true,
            "format": "password"
          },
          "port": {
            "type": "integer",
            "description": "The port on where to contact this dependency",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "description": "The prefix to set to the data to distinguish between the data from the module and the rest",
            "nullable": true
          },
          "server": {
            "type": "string",
            "description": "The server on where your dependency is hosted",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.module.DependencyTypeEnum"
              }
            ],
            "description": "Type"
          },
          "user": {
            "type": "string",
            "description": "The user to use to connect to this dependency",
            "nullable": true
          }
        }
      },
      "hosting.web.module.DependencyTypeEnum": {
        "type": "string",
        "description": "The type of the dependency. A dependency can be a standard database (like MySQL or PostgreSQL) or a key-value store (like Redis or Memcached) for example",
        "enum": [
          "mysql"
        ]
      },
      "hosting.web.module.LanguageEnum": {
        "type": "string",
        "description": "Install language",
        "enum": [
          "cz",
          "de",
          "en",
          "es",
          "fi",
          "fr",
          "it",
          "lt",
          "nl",
          "pl",
          "pt"
        ]
      },
      "hosting.web.module.StatusEnum": {
        "type": "string",
        "description": "Module status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "updating"
        ]
      },
      "hosting.web.ovhConfig": {
        "type": "object",
        "description": "Virtual service",
        "properties": {
          "container": {
            "type": "string",
            "description": "Container to run this website",
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "When ovhconfig was created, or found for the first time, on the hosting servers",
            "format": "date-time",
            "readOnly": true
          },
          "engineName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhConfig.EngineNameEnum"
              }
            ],
            "description": "Version of engine you want",
            "readOnly": true
          },
          "engineVersion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhConfig.EngineVersionEnum"
              }
            ],
            "description": "Name of engine you want",
            "readOnly": true
          },
          "environment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhConfig.EnvironmentEnum"
              }
            ],
            "description": "Environment configuration you want",
            "readOnly": true
          },
          "fileExist": {
            "type": "boolean",
            "description": "If .ovhConfig exists",
            "readOnly": true
          },
          "historical": {
            "type": "boolean",
            "description": "If this configuration is an old configuration",
            "nullable": true,
            "readOnly": true
          },
          "httpFirewall": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhConfig.HttpFirewallEnum"
              }
            ],
            "description": "Configuration you want for http firewall",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Configuration's id",
            "readOnly": true
          },
          "path": {
            "type": "string",
            "description": "Config path, relative to your home directory",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ovhConfig.StatusEnum"
              }
            ],
            "description": "The configuration status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this configuration",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.ovhConfig.AvailableEngineVersionEnum": {
        "type": "string",
        "description": "Hosting available configuration version",
        "enum": [
          "5.4",
          "5.5",
          "5.6",
          "7.0",
          "7.1",
          "7.2",
          "7.3",
          "7.4",
          "8.0",
          "8.1",
          "8.2",
          "8.3",
          "8.4"
        ]
      },
      "hosting.web.ovhConfig.EngineNameEnum": {
        "type": "string",
        "description": "Hosting configuration engine",
        "enum": [
          "php",
          "phpcgi"
        ]
      },
      "hosting.web.ovhConfig.EngineVersionEnum": {
        "type": "string",
        "description": "Hosting configuration version",
        "enum": [
          "4.4",
          "5.0",
          "5.1",
          "5.2",
          "5.3",
          "5.4",
          "5.5",
          "5.6",
          "7.0",
          "7.1",
          "7.2",
          "7.3",
          "7.4",
          "8.0",
          "8.1",
          "8.2",
          "8.3",
          "8.4",
          "AUTO"
        ]
      },
      "hosting.web.ovhConfig.EnvironmentEnum": {
        "type": "string",
        "description": "Hosting configuration environment",
        "enum": [
          "development",
          "production"
        ]
      },
      "hosting.web.ovhConfig.HttpFirewallEnum": {
        "type": "string",
        "description": "Hosting configuration firewall",
        "enum": [
          "none",
          "security"
        ]
      },
      "hosting.web.ovhConfig.StatusEnum": {
        "type": "string",
        "description": "Ovhconfig status",
        "enum": [
          "created",
          "rollbacking",
          "updating"
        ]
      },
      "hosting.web.ovhconfig.ContainerEnum": {
        "type": "string",
        "description": "Hosting configuration image to run website",
        "enum": [
          "jessie.i386",
          "legacy",
          "stable",
          "stable64",
          "testing"
        ]
      },
      "hosting.web.ownLogs": {
        "type": "object",
        "description": "Hosting own logs",
        "properties": {
          "fqdn": {
            "type": "string",
            "description": "The ownlogs fqdn available on logs.clusterXX.hosting.ovh.net",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Identifier of this ownLogs",
            "readOnly": true
          },
          "logs": {
            "type": "string",
            "description": "URL to access this ownLogs logs",
            "readOnly": true
          },
          "stats": {
            "type": "string",
            "description": "URL to access this ownLogs stats",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.ownLogs.StatusEnum"
              }
            ],
            "description": "Status of this ownLogs",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this ownLogs",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.ownLogs.StatusEnum": {
        "type": "string",
        "description": "OwnLogs status",
        "enum": [
          "created",
          "creating",
          "deleting"
        ]
      },
      "hosting.web.runtime": {
        "type": "object",
        "description": "The runtime configuration of an attached domain for cloud web offer",
        "properties": {
          "appBootstrap": {
            "type": "string",
            "description": "The client application bootstrap script",
            "nullable": true
          },
          "appEnv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.runtime.EnvEnum"
              }
            ],
            "description": "The client application environment"
          },
          "creationDate": {
            "type": "string",
            "description": "The creation date of the runtime configuration",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "The runtime configuration ID",
            "readOnly": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "Is the runtime configuration is the one by default for the hosting"
          },
          "isDeletable": {
            "type": "boolean",
            "description": "Return if the runtime configuration can be deleted",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "The last update date of the runtime configuration",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The custom display name of the runtime configuration",
            "nullable": true
          },
          "publicDir": {
            "type": "string",
            "description": "The client application public directory",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.runtime.StateEnum"
              }
            ],
            "description": "The status of the runtime",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The link current task for the runtime configuration",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.runtime.TypeEnum"
              }
            ],
            "description": "The backend type of the runtime"
          }
        }
      },
      "hosting.web.runtime.EnvEnum": {
        "type": "string",
        "description": "Runtime env enum",
        "enum": [
          "development",
          "production"
        ]
      },
      "hosting.web.runtime.StateEnum": {
        "type": "string",
        "description": "Runtime state enum",
        "enum": [
          "created",
          "creating",
          "deleting",
          "updating"
        ]
      },
      "hosting.web.runtime.TypeEnum": {
        "type": "string",
        "description": "Runtime backend type enum",
        "enum": [
          "nodejs-10",
          "nodejs-11",
          "nodejs-12",
          "nodejs-14",
          "nodejs-8",
          "nodejs-9",
          "phpfpm-5.6",
          "phpfpm-7.0",
          "phpfpm-7.1",
          "phpfpm-7.2",
          "phpfpm-7.3",
          "phpfpm-7.4",
          "phpfpm-8.0",
          "python-2",
          "python-3",
          "ruby-2.6"
        ]
      },
      "hosting.web.ssl": {
        "type": "object",
        "description": "Hostedssl",
        "properties": {
          "isReportable": {
            "type": "boolean",
            "description": "If the hostedssl is currently bound to a report",
            "readOnly": true
          },
          "provider": {
            "type": "string",
            "description": "Provider of the HostedSsl",
            "readOnly": true
          },
          "regenerable": {
            "type": "boolean",
            "description": "Regenerable flag",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.StatusEnum"
              }
            ],
            "description": "Status of the HostedSsl",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this HostedSsl",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Type of the HostedSsl",
            "readOnly": true
          }
        }
      },
      "hosting.web.ssl.Report": {
        "type": "object",
        "description": "Hosted SSL report",
        "properties": {
          "certificateSigningRequestStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportStatusEnum"
              }
            ],
            "description": "\"Certificate signing request\" test status done by certification authority",
            "readOnly": true
          },
          "domainControlValidationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportStatusEnum"
              }
            ],
            "description": "\"Domain control validation\" test status done by certification authority",
            "readOnly": true
          },
          "organizationValidationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportStatusEnum"
              }
            ],
            "description": "Applicant's legal status obtained or verified directly with registration agency",
            "readOnly": true
          },
          "phoneCallApprovalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportStatusEnum"
              }
            ],
            "description": "Approval verified through a phone call to the contract signer",
            "readOnly": true
          },
          "providerOrderId": {
            "type": "string",
            "description": "The order ID from given hostedssl provider",
            "readOnly": true
          },
          "termsAndConditionsAcceptanceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportStatusEnum"
              }
            ],
            "description": "Terms and conditions agreements acceptance",
            "readOnly": true
          },
          "tradeNameVerificationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportStatusEnum"
              }
            ],
            "description": "Trade name verified directly with registration agency or through a verified third party",
            "readOnly": true
          }
        }
      },
      "hosting.web.ssl.report": {
        "type": "object",
        "description": "Hostedssl Report",
        "properties": {
          "certificateSigningRequestStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportValueEnum"
              }
            ],
            "description": "\"Certificate signing request\" test status done by certification authority",
            "readOnly": true
          },
          "domainControlValidationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportValueEnum"
              }
            ],
            "description": "\"Domain control validation\" test status done by certification authority",
            "readOnly": true
          },
          "organizationValidationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportValueEnum"
              }
            ],
            "description": "Applicant's legal status obtained or verified directly with registration agency",
            "readOnly": true
          },
          "phoneCallApprovalStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportValueEnum"
              }
            ],
            "description": "Approval verified through a phone call to the contract signer",
            "readOnly": true
          },
          "providerOrderId": {
            "type": "string",
            "description": "The order ID from given hostedssl provider",
            "readOnly": true
          },
          "termsAndConditionsAcceptanceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportValueEnum"
              }
            ],
            "description": "Terms and conditions agreements acceptance",
            "readOnly": true
          },
          "tradeNameVerificationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.hostedssl.ReportValueEnum"
              }
            ],
            "description": "Trade name verified directly with registration agency or through a verified third party",
            "readOnly": true
          }
        }
      },
      "hosting.web.task": {
        "type": "object",
        "description": "Tasks",
        "properties": {
          "doneDate": {
            "type": "string",
            "description": "Completion date",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "function": {
            "type": "string",
            "description": "Function name",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "the id of the task",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "last update",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "objectId": {
            "type": "string",
            "description": "Task related object ID",
            "nullable": true,
            "readOnly": true
          },
          "objectType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.task.ObjectTypeEnum"
              }
            ],
            "description": "Task object type",
            "nullable": true,
            "readOnly": true
          },
          "startDate": {
            "type": "string",
            "description": "Task Creation date",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.task.StatusEnum"
              }
            ],
            "description": "Task status",
            "readOnly": true
          }
        }
      },
      "hosting.web.task.FunctionEnum": {
        "type": "string",
        "description": "Task function enum",
        "enum": [
          "abuse/close",
          "abuse/create",
          "abuse/create/web",
          "abuse/delete/web",
          "abuse/update",
          "abuse/update/web",
          "agora/AnycastUpdateReference",
          "agora/DnsAddonUpdateReference",
          "agora/DnsUpdateReference",
          "agora/updateReference",
          "attachedDomain/create",
          "attachedDomain/delete",
          "attachedDomain/restart",
          "attachedDomain/update",
          "cdn/delete",
          "cdn/domain/create",
          "cdn/domain/delete",
          "cdn/domain/flush",
          "cdn/domain/suspend",
          "cdn/flush",
          "cdn/install",
          "cdn/reopen",
          "cdn/suspend",
          "cdn/upgrade",
          "cluster/setDevelopment",
          "cluster/setTesting",
          "cluster/ssl/deploy",
          "cluster/ssl/renew",
          "cluster/test/attachedDomains",
          "cluster/test/cdn",
          "cluster/test/crons",
          "cluster/test/emails",
          "cluster/test/fileBrowser",
          "cluster/test/hostedssl",
          "cluster/test/modules",
          "cluster/test/ovhConfig",
          "cluster/test/userLogs",
          "cluster/test/users",
          "configuration/create",
          "configuration/delete",
          "configuration/update",
          "cron/create",
          "cron/delete",
          "cron/update",
          "database/changePassword",
          "database/changePasswordTest",
          "database/changeRight",
          "database/changeRightTest",
          "database/checkQuotaNow",
          "database/copy",
          "database/copyRestore",
          "database/create",
          "database/delete",
          "database/deleteTest",
          "database/dumpAnyDay",
          "database/hostUpdate",
          "database/import",
          "database/optimize",
          "database/restore",
          "dedicatedIp/delete",
          "dedicatedIp/reopen",
          "dedicatedIp/suspend",
          "depc/push",
          "dump/create",
          "dump/delete",
          "envVar/create",
          "envVar/delete",
          "envVar/update",
          "envVar/upgrade",
          "eventbus/push",
          "filerz/customerMonitoring",
          "filerz/delete",
          "hostedssl/assignFreeKey",
          "hostedssl/cdn/update",
          "hostedssl/create",
          "hostedssl/delete",
          "hostedssl/globalsign/delete",
          "hostedssl/htaccess/install",
          "hostedssl/import",
          "hostedssl/install",
          "hostedssl/install/sectigo",
          "hostedssl/iplb/reload",
          "hostedssl/push",
          "hostedssl/pushDcvFile",
          "hostedssl/regenerate",
          "hostedssl/repush",
          "hosting/activate/privateDatabase",
          "hosting/basculement",
          "hosting/changeOffer/cloud",
          "hosting/changeOffer/shared",
          "hosting/changement",
          "hosting/delete",
          "hosting/delete_start1m",
          "hosting/install",
          "hosting/reopen",
          "hosting/suspend",
          "indy/reopen",
          "indy/suspend",
          "infra/certificate/deploy",
          "infra/certificate/generate",
          "infra/certificate/install",
          "infra/sharedsql/upgrade",
          "infra/ssl/deploy",
          "infra/ssl/renew",
          "ip/move",
          "ip/park",
          "localSeoAccount/create",
          "localSeoAccount/delete",
          "localSeoLocation/delete",
          "localSeoLocation/install",
          "localSeoLocation/reopen",
          "localSeoLocation/suspend",
          "localSeoVisibilityCheck/process",
          "mailsout/checkMailsoutQueue",
          "mailsout/flushMailsoutQueue",
          "mailsout/updateUserInRedis",
          "migration/copyUsers",
          "migration/dday/filerz",
          "migration/dday/listPrivateDatabases",
          "migration/dday/lot",
          "migration/dday/updateInfra/crons",
          "migration/dday/updateInfra/dedicated",
          "migration/dday/updateInfra/migratedFqdn",
          "migration/updateOrt",
          "module/changePassword",
          "module/create",
          "module/delete",
          "module/install",
          "monitoring/remotewrite",
          "notification/send",
          "ovhConfig/refresh",
          "ovhConfig/rollback",
          "ovhConfig/update",
          "ovhOrg/delete",
          "ownLogs/create",
          "ownLogs/delete",
          "provisionning/cdn",
          "provisionning/cluster",
          "provisionning/filerz",
          "provisionning/filerz_log",
          "provisionning/hosting",
          "provisionning/ipfo",
          "provisionning/ipifo",
          "provisionning/iplb",
          "provisionning/privatesql",
          "provisionning/sharedsql",
          "provisionning/ssl",
          "provisionning/web",
          "provisionning/webapp",
          "runtime/create",
          "runtime/delete",
          "runtime/setDefault",
          "runtime/update",
          "scan/create",
          "sqlperso/delete",
          "sqlperso/install",
          "sqlperso/reopen",
          "sqlperso/suspend",
          "synchronizeDepc/attachedDomain",
          "synchronizeDepc/cluster",
          "synchronizeDepc/database",
          "synchronizeDepc/filer",
          "synchronizeDepc/offer",
          "synchronizeDepc/webd",
          "test/migration",
          "user/changePassword",
          "user/create",
          "user/delete",
          "user/update",
          "userLogs/changePassword",
          "userLogs/create",
          "userLogs/delete",
          "uster/setTesting",
          "web/changeDns",
          "web/changeFilerz",
          "web/changeFilerzWithCallback",
          "web/changeJailState",
          "web/changeOutState",
          "web/changeState",
          "web/changeWebState",
          "web/checkQuotaNow",
          "web/create",
          "web/delete",
          "web/deleteUser",
          "web/restoreSnapshot",
          "webProvisionning",
          "webd/changeSlots",
          "website/create",
          "website/delete",
          "website/deploy"
        ]
      },
      "hosting.web.task.ObjectTypeEnum": {
        "type": "string",
        "description": "Object type enum",
        "enum": [
          "Abuse",
          "AttachedDomain",
          "BlockedIp",
          "Cdn",
          "Cron",
          "Database",
          "Deployment",
          "Dump",
          "EnvVar",
          "Filerz",
          "Hostedssl",
          "Hosting",
          "Indy",
          "Infra",
          "Minor",
          "Module",
          "Other",
          "OvhConfig",
          "OvhOrg",
          "OwnLogs",
          "Runtime",
          "Scan",
          "Sqlperso",
          "User",
          "UserLogs",
          "Web",
          "Webd",
          "Website"
        ]
      },
      "hosting.web.task.StatusEnum": {
        "type": "string",
        "description": "Task status enum",
        "enum": [
          "cancelled",
          "doing",
          "done",
          "init",
          "todo"
        ]
      },
      "hosting.web.user": {
        "type": "object",
        "description": "Hosting users",
        "properties": {
          "home": {
            "type": "string",
            "description": "Home directory"
          },
          "isPrimaryAccount": {
            "type": "boolean",
            "description": "Is this user primary",
            "readOnly": true
          },
          "login": {
            "type": "string",
            "description": "Login used to connect on FTP and SSH",
            "readOnly": true
          },
          "serviceManagementCredentials": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.user.ServiceCredentials"
              }
            ],
            "description": "Credentials to manage your webhosting",
            "readOnly": true
          },
          "sshState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.user.SshStateEnum"
              }
            ],
            "description": "User ssh status"
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.user.StateEnum"
              }
            ],
            "description": "User state"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.user.StatusEnum"
              }
            ],
            "description": "The user status",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this user",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.user.Credentials": {
        "type": "object",
        "description": "User, url and port of a service",
        "properties": {
          "port": {
            "type": "integer",
            "description": "Port to use to access to the service"
          },
          "url": {
            "type": "string",
            "description": "Url to contact the service"
          },
          "user": {
            "type": "string",
            "description": "Login to authentificate you on the service"
          }
        }
      },
      "hosting.web.user.ServiceCredentials": {
        "type": "object",
        "description": "Different credentials to manage your service",
        "properties": {
          "ftp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.user.Credentials"
              }
            ],
            "description": "Credentials to manage files by ftp"
          },
          "ssh": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.user.Credentials"
              }
            ],
            "description": "Credentials to manage webhosting by ssh"
          }
        }
      },
      "hosting.web.user.SshStateEnum": {
        "type": "string",
        "description": "Account's ssh state",
        "enum": [
          "active",
          "none",
          "sftponly"
        ]
      },
      "hosting.web.user.StateEnum": {
        "type": "string",
        "description": "Account's state",
        "enum": [
          "off",
          "rw"
        ]
      },
      "hosting.web.user.StatusEnum": {
        "type": "string",
        "description": "User status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "updating"
        ]
      },
      "hosting.web.userLogs": {
        "type": "object",
        "description": "Hosting users logs",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "Date of the user creation",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description field for you",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "The userLogs login used to connect to logs.ovh.net",
            "readOnly": true
          },
          "ownLogsId": {
            "type": "integer",
            "description": "OwnLogs where this userLogs will be enable. Default : main domain ownlogs",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.userLogs.StatusEnum"
              }
            ],
            "description": "Status of this userLogs",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "description": "The task ID working on this userLogs",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "hosting.web.userLogs.StatusEnum": {
        "type": "string",
        "description": "UserLogs status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "updating"
        ]
      },
      "hosting.web.website.CreationRequest": {
        "type": "object",
        "description": "Information needed to create a new website",
        "properties": {
          "path": {
            "type": "string",
            "description": "Relative path on the hosting filesystem the website will be deployed into"
          },
          "vcsBranch": {
            "type": "string",
            "description": "Branch of the repository containing the website source code to deploy"
          },
          "vcsUrl": {
            "type": "string",
            "description": "Clone URL of the repository containing the website source code to deploy"
          }
        },
        "required": [
          "path",
          "vcsBranch",
          "vcsUrl"
        ]
      },
      "hosting.web.website.Deployment": {
        "type": "object",
        "description": "A website deployment",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of the deployment",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Deployment numeric identifier",
            "readOnly": true
          },
          "reset": {
            "type": "boolean",
            "description": "Whether a reset was requested before deploying",
            "readOnly": true
          },
          "source": {
            "type": "string",
            "description": "Source which triggered the deployment",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/hosting.web.website.deployment.StatusEnum"
              }
            ],
            "description": "Current status of the deployment",
            "readOnly": true
          },
          "vcsBranch": {
            "type": "string",
            "description": "Which branch of the repository is deployed",
            "readOnly": true
          },
          "vcsCommitId": {
            "type": "string",
            "description": "Identifier of the last commit after deployment",
            "nullable": true,
            "readOnly": true
          },
          "vcsCommitMessage": {
            "type": "string",
            "description": "Message of the last commit after deployment",
            "nullable": true,
            "readOnly": true
          },
          "websiteId": {
            "type": "integer",
            "description": "Website numeric identifier",
            "readOnly": true
          }
        }
      },
      "hosting.web.website.DeploymentRequest": {
        "type": "object",
        "description": "Information needed to request deployment of a website",
        "properties": {
          "reset": {
            "type": "boolean",
            "description": "Whether a reset was requested before deploying"
          }
        }
      },
      "hosting.web.website.Domain": {
        "type": "object",
        "description": "A website domain",
        "properties": {
          "cdn": {
            "type": "boolean",
            "description": "If the CDN is currently active",
            "readOnly": true
          },
          "fqdn": {
            "type": "string",
            "description": "FQDN of the website domain",
            "readOnly": true
          },
          "ssl": {
            "type": "boolean",
            "description": "If the SSL is currently active",
            "readOnly": true
          }
        }
      },
      "hosting.web.website.StatusEnum": {
        "type": "string",
        "description": "Website status",
        "enum": [
          "created",
          "creating",
          "deleting",
          "deploying",
          "error",
          "initialError"
        ]
      },
      "hosting.web.website.Update": {
        "type": "object",
        "description": "Information to update on a website",
        "properties": {
          "vcsBranch": {
            "type": "string",
            "description": "Branch of the repository containing the website source code to deploy",
            "nullable": true
          }
        }
      },
      "hosting.web.website.deployment.LogsMessage": {
        "type": "object",
        "description": "Message from logs of a website deployment",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of the message",
            "format": "date-time",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "description": "Content of the message",
            "readOnly": true
          }
        }
      },
      "hosting.web.website.deployment.StatusEnum": {
        "type": "string",
        "description": "Website deployment status",
        "enum": [
          "doing",
          "failed",
          "successful"
        ]
      },
      "iam.ResourceMetadata": {
        "type": "object",
        "description": "IAM resource metadata embedded in services models",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Resource display name",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the resource",
            "format": "uuid",
            "readOnly": true
          },
          "tags": {
            "type": "object",
            "description": "Resource tags. Tags that were internally computed are prefixed with ovh:",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            },
            "readOnly": true
          },
          "urn": {
            "type": "string",
            "description": "Unique resource name used in policies",
            "readOnly": true
          }
        }
      },
      "iam.resource.TagFilter": {
        "type": "object",
        "description": "Resource tag filter",
        "properties": {
          "operator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.resource.TagFilter.OperatorEnum"
              }
            ],
            "description": "Operator to use in order to filter on the value (defaults to 'EQ')",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "description": "Value to use in order to filter tags",
            "readOnly": true
          }
        }
      },
      "iam.resource.TagFilter.OperatorEnum": {
        "type": "string",
        "description": "Operator that can be used in order to filter resources tags",
        "enum": [
          "EQ",
          "EXISTS",
          "ILIKE",
          "LIKE",
          "NEQ",
          "NEXISTS"
        ]
      },
      "internationalPhoneNumber": {
        "type": "string",
        "description": "International phone number",
        "format": "phone-number"
      },
      "ip": {
        "type": "string",
        "description": "IP address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipBlock": {
        "type": "string",
        "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)",
        "format": "ip-block",
        "example": "192.0.2.0/24"
      },
      "ipInterface": {
        "type": "string",
        "description": "IP address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipv4": {
        "type": "string",
        "description": "IPv4 address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipv4Block": {
        "type": "string",
        "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)",
        "format": "ipv4-block",
        "example": "192.0.2.0/24"
      },
      "ipv6": {
        "type": "string",
        "description": "IPv6 address (e.g., 2001:41d0:1:1994::1)",
        "format": "ipv6",
        "example": "2001:41d0:1:1994::1"
      },
      "ipv6Block": {
        "type": "string",
        "description": "IPv6 CIDR notation (e.g., 2001:41d0::/128)",
        "format": "ipv6-block",
        "example": "2001:41d0::/128"
      },
      "macAddress": {
        "type": "string",
        "description": "MAC address (e.g., 2001:4860:4860::8844)",
        "format": "mac-address",
        "example": "2001:4860:4860::8888. 2001:4860:4860::8844"
      },
      "order.CurrencyCodeEnum": {
        "type": "string",
        "description": "Currency code",
        "enum": [
          "AUD",
          "CAD",
          "CZK",
          "EUR",
          "GBP",
          "INR",
          "LTL",
          "MAD",
          "N/A",
          "PLN",
          "SGD",
          "TND",
          "USD",
          "XOF",
          "points"
        ]
      },
      "order.Price": {
        "type": "object",
        "description": "Price with its currency and textual representation",
        "properties": {
          "currencyCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.CurrencyCodeEnum"
              }
            ],
            "description": "Currency code",
            "readOnly": true
          },
          "priceInUcents": {
            "type": "integer",
            "description": "Price in microcents",
            "nullable": true,
            "readOnly": true
          },
          "text": {
            "type": "string",
            "description": "Textual representation",
            "readOnly": true
          },
          "value": {
            "type": "number",
            "description": "The effective price",
            "readOnly": true
          }
        }
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number",
        "format": "phone-number"
      },
      "service.RenewType": {
        "type": "object",
        "description": "Map a possible renew for a specific service",
        "properties": {
          "automatic": {
            "type": "boolean",
            "description": "The service is automatically renewed"
          },
          "deleteAtExpiration": {
            "type": "boolean",
            "description": "The service will be deleted at expiration"
          },
          "forced": {
            "type": "boolean",
            "description": "The service forced to be renewed"
          },
          "manualPayment": {
            "type": "boolean",
            "description": "The service needs to be manually renewed and paid",
            "nullable": true
          },
          "period": {
            "type": "integer",
            "description": "period of renew in month",
            "nullable": true
          }
        }
      },
      "service.RenewalTypeEnum": {
        "type": "string",
        "description": "Detailed renewal type of a service",
        "enum": [
          "automaticForcedProduct",
          "automaticV2012",
          "automaticV2014",
          "automaticV2016",
          "manual",
          "oneShot",
          "option"
        ]
      },
      "service.StateEnum": {
        "type": "string",
        "description": "service.StateEnum",
        "enum": [
          "autorenewInProgress",
          "expired",
          "inCreation",
          "ok",
          "pendingDebt",
          "unPaid"
        ]
      },
      "service.TerminationFutureUseEnum": {
        "type": "string",
        "description": "All future uses you can provide for a service termination",
        "enum": [
          "NOT_REPLACING_SERVICE",
          "OTHER",
          "SUBSCRIBE_AN_OTHER_SERVICE",
          "SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR",
          "SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR"
        ]
      },
      "service.TerminationReasonEnum": {
        "type": "string",
        "description": "All reasons you can provide for a service termination",
        "enum": [
          "FEATURES_DONT_SUIT_ME",
          "LACK_OF_PERFORMANCES",
          "MIGRATED_TO_ANOTHER_OVH_PRODUCT",
          "MIGRATED_TO_COMPETITOR",
          "NOT_ENOUGH_RECOGNITION",
          "NOT_NEEDED_ANYMORE",
          "NOT_RELIABLE",
          "NO_ANSWER",
          "OTHER",
          "PRODUCT_DIMENSION_DONT_SUIT_ME",
          "PRODUCT_TOOLS_DONT_SUIT_ME",
          "TOO_EXPENSIVE",
          "TOO_HARD_TO_USE",
          "UNSATIFIED_BY_CUSTOMER_SUPPORT"
        ]
      },
      "services.Service": {
        "type": "object",
        "description": "Details about a Service",
        "properties": {
          "canDeleteAtExpiration": {
            "type": "boolean",
            "description": "Indicates that the service can be set up to be deleted at expiration",
            "readOnly": true
          },
          "contactAdmin": {
            "type": "string",
            "readOnly": true
          },
          "contactBilling": {
            "type": "string",
            "readOnly": true
          },
          "contactTech": {
            "type": "string",
            "readOnly": true
          },
          "creation": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "domain": {
            "type": "string",
            "readOnly": true
          },
          "engagedUpTo": {
            "type": "string",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "expiration": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "possibleRenewPeriod": {
            "type": "array",
            "description": "All the possible renew period of your service in month",
            "nullable": true,
            "items": {
              "type": "integer"
            },
            "readOnly": true
          },
          "renew": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.RenewType"
              }
            ],
            "description": "Way of handling the renew",
            "nullable": true
          },
          "renewalType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.RenewalTypeEnum"
              }
            ],
            "readOnly": true
          },
          "serviceId": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.StateEnum"
              }
            ],
            "readOnly": true
          }
        }
      },
      "services.changeContact": {
        "type": "object",
        "description": "Service change contact payload",
        "properties": {
          "contactAdmin": {
            "type": "string",
            "description": "The contact to set as admin contact"
          },
          "contactBilling": {
            "type": "string",
            "description": "The contact to set as billing contact"
          },
          "contactTech": {
            "type": "string",
            "description": "The contact to set as tech contact"
          }
        }
      },
      "services.confirmTermination": {
        "type": "object",
        "description": "Service confirm termination payload",
        "properties": {
          "commentary": {
            "type": "string",
            "description": "Commentary about your termination request"
          },
          "futureUse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.TerminationFutureUseEnum"
              }
            ],
            "description": "All future uses you can provide for a service termination"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.TerminationReasonEnum"
              }
            ],
            "description": "All reasons you can provide for a service termination"
          },
          "token": {
            "type": "string",
            "description": "The termination token sent by email to the admin contact"
          }
        },
        "required": [
          "token"
        ]
      },
      "time": {
        "type": "string",
        "description": "Time (e.g., 15:04:05)",
        "format": "time",
        "example": "15:04:05"
      }
    },
    "securitySchemes": {
      "oAuth2AuthCode": {
        "type": "oauth2",
        "description": "Oauth2",
        "x-client-id": "1bb9c7df371741c0",
        "x-client-secret": "a5b4de870aca620d10fbf63cd18d205b",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://www.ovh.com/auth/oauth2/authorize",
            "tokenUrl": "https://www.ovh.com/auth/oauth2/token",
            "scopes": {
              "account/all": "Manage your account",
              "all": "Manage your whole account and all your services",
              "services/all": "Manage your services lifecycle and billing"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/hosting/web": {
      "get": {
        "summary": "List available services",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "iamTags",
            "description": "Filter resources on IAM tags",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/iam.resource.TagFilter"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebServiceWithIAM"
      }
    },
    "/hosting/web/attachedDomain": {
      "get": {
        "summary": "Find hosting service linked to a domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "domain",
            "description": "Domain used into web hosting attached domains",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "account:apiovh:webHosting/attachedDomain/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/availableOffer": {
      "get": {
        "summary": "Get available offer",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "domain",
            "description": "Domain you want to add or upgrade a hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.OfferEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "account:apiovh:webHosting/availableOffer/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/incident": {
      "get": {
        "summary": "Get current incident",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "account:apiovh:webHosting/incident/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/localSeo/directoriesList": {
      "get": {
        "summary": "Get list of directories associated to a local SEO offer and a country",
        "parameters": [
          {
            "in": "query",
            "name": "country",
            "description": "Country of the location",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/hosting.web.localSeo.location.CountryEnum"
            }
          },
          {
            "in": "query",
            "name": "offer",
            "description": "Local SEO offer",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/hosting.web.localSeo.location.OfferEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.localSeo.DirectoriesList"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/hosting/web/localSeo/emailAvailability": {
      "get": {
        "summary": "Check email availability for a local SEO order",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "description": "The email address to check",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.localSeo.EmailAvailability"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/hosting/web/localSeo/visibilityCheck": {
      "post": {
        "summary": "Check visibility of a location",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country": {
                    "description": "Country of the location",
                    "$ref": "#/components/schemas/hosting.web.localSeo.location.CountryEnum"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the location"
                  },
                  "street": {
                    "type": "string",
                    "description": "Address line 1 of the location"
                  },
                  "zip": {
                    "type": "string",
                    "description": "Zipcode of the location"
                  }
                },
                "required": [
                  "country",
                  "name",
                  "street",
                  "zip"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.localSeo.VisibilityCheckResponse"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/hosting/web/localSeo/visibilityCheckResult": {
      "get": {
        "summary": "Get the result of a visibility check",
        "parameters": [
          {
            "in": "query",
            "name": "directory",
            "description": "Get the result only for one directory",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "description": "Id of the check",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "token",
            "description": "Token received when requesting the check",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.localSeo.VisibilityCheckResultResponse"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/hosting/web/moduleList": {
      "get": {
        "summary": "IDs of all modules available",
        "parameters": [
          {
            "in": "query",
            "name": "active",
            "description": "Filter the value of active property (=)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "branch",
            "description": "Filter the value of branch property (=)",
            "schema": {
              "$ref": "#/components/schemas/hosting.web.module.BranchEnum"
            }
          },
          {
            "in": "query",
            "name": "latest",
            "description": "Filter the value of latest property (=)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-expanded-response": "HostingWebModuleList"
      }
    },
    "/hosting/web/moduleList/{id}": {
      "get": {
        "summary": "Get this object properties",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the module",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.ModuleList"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/hosting/web/offerCapabilities": {
      "get": {
        "summary": "Get offer capabilities",
        "parameters": [
          {
            "in": "query",
            "name": "offer",
            "description": "Describe offer capabilities",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/hosting.web.OfferCapabilitiesEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.Capabilities"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/hosting/web/vcs/supported": {
      "get": {
        "summary": "Get list of supported VCS platforms",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.SupportedVcsEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/hosting/web/{serviceName}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.ServiceWithIAM"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/attachedDomain": {
      "get": {
        "summary": "Get list of attached domains or subdomains attached to your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "domain",
            "description": "Filter the value of domain property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "path",
            "description": "Filter the value of path property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:attachedDomain/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebAttachedDomainPublicAttachedDomain"
      },
      "post": {
        "summary": "Create an attached domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.AttachedDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:attachedDomain/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/attachedDomain/{domain}": {
      "delete": {
        "summary": "Unlink attached domain from hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bypassDNSConfiguration",
            "description": "If set to true, DNS zone will not be updated by the operation",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "domain",
            "description": "Domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:attachedDomain/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get attachedDomain properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "description": "Domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.attachedDomain.PublicAttachedDomain"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:attachedDomain/get",
            "required": true
          }
        ],
        "x-response-identifier": "domain"
      },
      "put": {
        "summary": "Update attached domain properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "description": "Domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.AttachedDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:attachedDomain/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/attachedDomain/{domain}/digStatus": {
      "get": {
        "summary": "Get attachedDomain DNS status",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "description": "Domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.attachedDomain.DigStatus"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:attachedDomain/digStatus/get",
            "required": true
          }
        ],
        "x-response-identifier": "domain"
      }
    },
    "/hosting/web/{serviceName}/attachedDomain/{domain}/purgeCache": {
      "post": {
        "summary": "Purge cache for this attached domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "description": "Domain linked (fqdn)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:attachedDomain/purgeCache",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/attachedDomain/{domain}/restart": {
      "post": {
        "summary": "Restart the virtual host of the attached domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "description": "Domain linked (fqdn)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:attachedDomain/restart",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/availableConfigurations": {
      "get": {
        "summary": "List configurations available for current hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "language",
            "description": "Filter on language name",
            "schema": {
              "$ref": "#/components/schemas/hosting.web.configuration.LanguageEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.configuration.VersionEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:availableConfigurations/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/boostHistory": {
      "get": {
        "summary": "History of your hosting boost",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Filter the value of date property (=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:boostHistory/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebBoostHistory"
      }
    },
    "/hosting/web/{serviceName}/boostHistory/{date}": {
      "get": {
        "summary": "Boost history detail",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "description": "Date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.BoostHistory"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:boostHistory/get",
            "required": true
          }
        ],
        "x-response-identifier": "date"
      }
    },
    "/hosting/web/{serviceName}/cdn": {
      "get": {
        "summary": "Get cdn by service name",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.CDN"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/get",
            "required": true
          }
        ],
        "x-response-identifier": "domain"
      }
    },
    "/hosting/web/{serviceName}/cdn/availableOptions": {
      "get": {
        "summary": "List available options for a Shared CDN service",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cdn.availableOptions"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/availableOptions/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cdn/domain": {
      "get": {
        "summary": "List all domains for a Shared CDN service",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cdn.domain"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/get",
            "required": true
          }
        ],
        "x-response-identifier": "name",
        "x-expanded-response": "CdnDomain"
      }
    },
    "/hosting/web/{serviceName}/cdn/domain/{domainName}": {
      "get": {
        "summary": "Get details for a domain on a Shared CDN service",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domainName",
            "description": "Domain name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdn.domain"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/get",
            "required": true
          }
        ],
        "x-response-identifier": "name"
      }
    },
    "/hosting/web/{serviceName}/cdn/domain/{domainName}/logs": {
      "get": {
        "summary": "Generate URL to logs archive",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "date",
            "description": "Logs date (default is yesterday)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "path",
            "name": "domainName",
            "description": "Domain name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdn.logs"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/logs/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cdn/domain/{domainName}/option": {
      "get": {
        "summary": "List all options for a domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domainName",
            "description": "Domain name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cdn.domain.option"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/option/get",
            "required": true
          }
        ],
        "x-response-identifier": "name",
        "x-expanded-response": "CdnDomainOption"
      },
      "post": {
        "summary": "Add an option on a domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domainName",
            "description": "Domain name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cdn.domain.add.option"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdn.domain.option"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/option/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cdn/domain/{domainName}/option/{optionName}": {
      "delete": {
        "summary": "Remove or Reset an option to his default value",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domainName",
            "description": "Domain name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "optionName",
            "description": "Option name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/option/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get details for an option on a domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domainName",
            "description": "Domain name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "optionName",
            "description": "Option name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdn.domain.option"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/option/get",
            "required": true
          }
        ],
        "x-response-identifier": "name"
      },
      "put": {
        "summary": "Update an option on a domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domainName",
            "description": "Domain name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "optionName",
            "description": "Option name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cdn.domain.option"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdn.domain.option"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/option/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cdn/domain/{domainName}/purge": {
      "post": {
        "summary": "Flush cache content on CDN for a domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domainName",
            "description": "Domain name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pattern",
            "description": "Purge pattern",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "patternType",
            "description": "Purge Pattern Type (default is regex)",
            "schema": {
              "$ref": "#/components/schemas/cdn.PurgeTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdn.operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/purge",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cdn/domain/{domainName}/refresh": {
      "post": {
        "summary": "Trigger a refresh for a domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domainName",
            "description": "Domain name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdn.operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/refresh",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cdn/domain/{domainName}/statistics": {
      "get": {
        "summary": "Get CDN statistics for a domain",
        "deprecated": true,
        "x-deprecation-date": "2023-11-03T00:00:00Z",
        "x-deletion-date": "2024-01-01T00:00:00Z",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "domainName",
            "description": "Domain name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "period",
            "description": "Period (default is day)",
            "schema": {
              "$ref": "#/components/schemas/cdn.DomainStatisticsPeriodEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cdn.domain.statistics"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/domain/statistics/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cdn/operation": {
      "get": {
        "summary": "List all operations for a Shared CDN service",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cdn.operation"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/operation/get",
            "required": true
          }
        ],
        "x-response-identifier": "id",
        "x-expanded-response": "CdnOperation"
      }
    },
    "/hosting/web/{serviceName}/cdn/operation/{id}": {
      "get": {
        "summary": "Get details for a Shared CDN operation",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cdn.operation"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/operation/get",
            "required": true
          }
        ],
        "x-response-identifier": "id"
      }
    },
    "/hosting/web/{serviceName}/cdn/serviceInfos": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/serviceInfos/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cdn/serviceInfosUpdate": {
      "post": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "renew": {
                    "description": "Renew type",
                    "$ref": "#/components/schemas/service.RenewType"
                  }
                },
                "required": [
                  "renew"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/serviceInfosUpdate/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cdn/terminate": {
      "post": {
        "summary": "Terminate your cdn sub service",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cdn/terminate",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/changeContact": {
      "post": {
        "summary": "Launch a contact change procedure",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/services.changeContact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:changeContact",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/configuration": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.configuration"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:configuration/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.configuration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:configuration/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/confirmTermination": {
      "post": {
        "summary": "Confirm service termination",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/services.confirmTermination"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:confirmTermination",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cron": {
      "get": {
        "summary": "Crons on your webhosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "command",
            "description": "Filter the value of command property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "description",
            "description": "Filter the value of description property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email",
            "description": "Filter the value of email property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "language",
            "description": "Filter the value of language property (=)",
            "schema": {
              "$ref": "#/components/schemas/hosting.web.LanguagesEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cron/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebCron"
      },
      "post": {
        "summary": "Create new cron",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.Cron"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cron/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cron/{id}": {
      "delete": {
        "summary": "Delete cron",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cron/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get cron by id",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.Cron"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cron/get",
            "required": true
          }
        ],
        "x-response-identifier": "id"
      },
      "put": {
        "summary": "Update cron",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.Cron"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cron/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/cronAvailableLanguage": {
      "get": {
        "summary": "Get the list of supported languages by web domain",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.LanguagesEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:cronAvailableLanguages/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database": {
      "get": {
        "summary": "Databases linked to your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mode",
            "description": "Filter the value of mode property (=)",
            "schema": {
              "$ref": "#/components/schemas/hosting.web.database.ModeEnum"
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "Filter the value of name property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "server",
            "description": "Filter the value of server property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filter the value of type property (=)",
            "schema": {
              "$ref": "#/components/schemas/hosting.web.database.DatabaseTypeEnum"
            }
          },
          {
            "in": "query",
            "name": "user",
            "description": "Filter the value of user property (like)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebDatabase"
      },
      "post": {
        "summary": "Install new database",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "capabilitie": {
                    "description": "Type of your database",
                    "$ref": "#/components/schemas/hosting.web.database.DatabaseCapabilitiesTypeEnum"
                  },
                  "password": {
                    "type": "string",
                    "description": "Database password",
                    "format": "password"
                  },
                  "quota": {
                    "description": "Quota assign to your database. Only for extraSql",
                    "$ref": "#/components/schemas/hosting.web.database.ExtraSqlQuotaEnum"
                  },
                  "type": {
                    "description": "Type you want for your database",
                    "$ref": "#/components/schemas/hosting.web.database.DatabaseCreationTypeEnum"
                  },
                  "user": {
                    "type": "string",
                    "description": "Database user name. Must begin with your hosting login and must be in lower case"
                  },
                  "version": {
                    "description": "Version you want for your database following the type",
                    "$ref": "#/components/schemas/hosting.web.database.VersionEnum"
                  }
                },
                "required": [
                  "capabilitie",
                  "type",
                  "user"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}": {
      "delete": {
        "summary": "Delete database",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.database"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/capabilities": {
      "get": {
        "summary": "Get available capabilities for this database",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.database.DatabaseCapabilities"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/capabilities/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/changePassword": {
      "post": {
        "summary": "Request a password change",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "The new database password",
                    "format": "password"
                  }
                },
                "required": [
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/changePassword",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/copy": {
      "get": {
        "summary": "Copies available for your databases",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/copy/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebDatabaseCopy"
      },
      "post": {
        "summary": "Create a new copy of your database",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.database.copy"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/copy/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/copy/{id}": {
      "delete": {
        "summary": "Delete the database copy",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Copy id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/copy/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Copy id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.database.copy"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/copy/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/copyRestore": {
      "post": {
        "summary": "Request the copy restore in this database",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "copyId": {
                    "type": "string",
                    "description": "UUID of the copy to restore",
                    "format": "uuid"
                  },
                  "flushDatabase": {
                    "type": "boolean",
                    "description": "If database will be flushed before importing the dump. Default: false"
                  }
                },
                "required": [
                  "copyId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/copyRestore",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/dump": {
      "get": {
        "summary": "Dump available for your databases",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "creationDate.from",
            "description": "Filter the value of creationDate property (>=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "creationDate.to",
            "description": "Filter the value of creationDate property (<=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "deletionDate.from",
            "description": "Filter the value of deletionDate property (>=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "deletionDate.to",
            "description": "Filter the value of deletionDate property (<=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filter the value of type property (=)",
            "schema": {
              "$ref": "#/components/schemas/hosting.web.database.dump.DateEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/dump/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebDatabaseDump"
      },
      "post": {
        "summary": "Request the dump from your database",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "description": "The date you want to dump",
                    "$ref": "#/components/schemas/hosting.web.database.dump.DateEnum"
                  },
                  "sendEmail": {
                    "type": "boolean",
                    "description": "Send an email when dump will be available? Default: true"
                  }
                },
                "required": [
                  "date"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/dump/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/dump/{id}": {
      "delete": {
        "summary": "Delete dump before expiration date",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Dump id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/dump/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Dump id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.database.dump"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/dump/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/dump/{id}/restore": {
      "post": {
        "summary": "Request the restore from this dump",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Dump id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/dump/restore",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/import": {
      "post": {
        "summary": "Import a dump from an specific file uploaded with /me/documents",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentId": {
                    "type": "string",
                    "description": "Documents ID of the dump from /me/documents"
                  },
                  "flushDatabase": {
                    "type": "boolean",
                    "description": "If database will be flushed before importing the dump. Default: false"
                  },
                  "sendEmail": {
                    "type": "boolean",
                    "description": "Send an email when the import will be done? Default: false"
                  }
                },
                "required": [
                  "documentId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/import",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/request": {
      "post": {
        "summary": "Request specific operation for your database",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "description": "Action you want to request",
                    "$ref": "#/components/schemas/hosting.web.database.RequestActionEnum"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/request/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/restore": {
      "post": {
        "summary": "Request the restore from your database backup",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "description": "The date you want to dump",
                    "$ref": "#/components/schemas/hosting.web.database.dump.DateEnum"
                  },
                  "sendEmail": {
                    "type": "boolean",
                    "description": "Send an email when the restore will be done? Default: false"
                  }
                },
                "required": [
                  "date"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/restore",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/database/{name}/statistics": {
      "get": {
        "summary": "Get statistics about this database",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Database name (like mydb.mysql.db or mydb.postgres.db)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "period",
            "description": "Available periods for statistics",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/hosting.web.StatisticsPeriodEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Types of statistics available for the database",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/hosting.web.database.StatisticsTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/complexType.ChartSerie_complexType.ChartTimestampValue"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:database/statistics/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/databaseAvailableType": {
      "get": {
        "summary": "List available database type",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.database.DatabaseTypeEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:databaseAvailableType/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/databaseAvailableVersion": {
      "get": {
        "summary": "List available database version following a type",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of the database",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/hosting.web.database.DatabaseTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.database.AvailableVersionStruct"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:databaseAvailableVersion/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/databaseCreationCapabilities": {
      "get": {
        "summary": "List available database you can install",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.database.CreationDatabaseCapabilities"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:databaseCreationCapabilities/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/dump": {
      "get": {
        "summary": "Dumps linked to your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "creationDate.from",
            "description": "Filter the value of creationDate property (>=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "creationDate.to",
            "description": "Filter the value of creationDate property (<=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "databaseName",
            "description": "Filter the value of databaseName property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "deletionDate.from",
            "description": "Filter the value of deletionDate property (>=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "deletionDate.to",
            "description": "Filter the value of deletionDate property (<=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "orphan",
            "description": "Filter the value of orphan property (=)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:dump/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebDump"
      }
    },
    "/hosting/web/{serviceName}/dump/{id}": {
      "delete": {
        "summary": "Delete dump before expiration date",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Dump id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:dump/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Dump id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.dump"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:dump/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/email": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.email"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:email/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.email"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:email/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/email/bounces": {
      "get": {
        "summary": "Request the last bounces",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum bounces limit ( default : 20 / max : 100 )",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.mail.Bounce"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:email/bounces/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/email/request": {
      "post": {
        "summary": "Request specific operation for your email",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "description": "Action you want to request",
                    "$ref": "#/components/schemas/hosting.web.mail.ActionEnum"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:email/request/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/email/volumes": {
      "get": {
        "summary": "Request the history volume of email sent",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.mail.VolumeHistory"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:email/volumes/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/emailOption": {
      "get": {
        "summary": "Mail service linked to webhosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:emailOption/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebEmailoption"
      }
    },
    "/hosting/web/{serviceName}/emailOption/{id}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.emailoption"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:emailOption/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/emailOption/{id}/serviceInfos": {
      "get": {
        "summary": "Get the service properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:emailOption/serviceInfos/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/emailOption/{id}/terminate": {
      "post": {
        "summary": "Terminate your email sub service",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:emailOption/terminate",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/envVar": {
      "get": {
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filter the value of type property (=)",
            "schema": {
              "$ref": "#/components/schemas/hosting.web.envVar.TypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:envVar/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebEnvVar"
      },
      "post": {
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.EnvVarInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:envVar/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/envVar/{key}": {
      "delete": {
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:envVar/delete",
            "required": true
          }
        ]
      },
      "get": {
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.EnvVar"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:envVar/get",
            "required": true
          }
        ],
        "x-response-identifier": "key"
      },
      "put": {
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.EnvVar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:envVar/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/extraSqlPerso": {
      "get": {
        "summary": "Sqlperso linked to your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:extraSqlPerso/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebExtrasqlperso"
      }
    },
    "/hosting/web/{serviceName}/extraSqlPerso/{name}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "The extraSqlPerso option name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.extrasqlperso"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:extraSqlPerso/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/extraSqlPerso/{name}/databases": {
      "get": {
        "summary": "Get databases linked with this option",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "The extraSqlPerso option name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:extraSqlPerso/databases/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/extraSqlPerso/{name}/serviceInfos": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "The extraSqlPerso option name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:extraSqlPerso/serviceInfos/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/extraSqlPerso/{name}/serviceInfosUpdate": {
      "post": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "The extraSqlPerso option name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "renew": {
                    "description": "Renew type",
                    "$ref": "#/components/schemas/service.RenewType"
                  }
                },
                "required": [
                  "renew"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:extraSqlPerso/serviceInfosUpdate/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/extraSqlPerso/{name}/terminate": {
      "post": {
        "summary": "Terminate your extraSqlPerso sub service",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "The extraSqlPerso option name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:extraSqlPerso/terminate",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/freedom": {
      "get": {
        "summary": "Find freedoms linked to the hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter the freedom status (=)",
            "schema": {
              "$ref": "#/components/schemas/hosting.web.freedom.StatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:freedom/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/indy": {
      "get": {
        "summary": "User of multidomain independent allowed on your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "login",
            "description": "Filter the value of login property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:indy/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebIndy"
      }
    },
    "/hosting/web/{serviceName}/indy/{login}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "Login of the multidomain independent user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.indy"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:indy/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/key/ssh": {
      "get": {
        "summary": "Get the SSH public key associated with the hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.Key"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:key/ssh/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Generate a SSH key pair for the hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.Key"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:key/ssh/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/localSeo/account": {
      "get": {
        "summary": "Local SEO accounts associated to the hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "description": "Filter the value of email property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:localSeo/account/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebLocalSeoAccount"
      }
    },
    "/hosting/web/{serviceName}/localSeo/account/{id}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.localSeo.account"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:localSeo/account/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/localSeo/account/{id}/login": {
      "post": {
        "summary": "Login this location for SSO",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Account id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:localSeo/account/login",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/localSeo/emailAvailability": {
      "get": {
        "summary": "Check email availability for a local SEO order",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "description": "The email address to check",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.localSeo.EmailAvailability"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:localSeo/emailAvailability/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/localSeo/location": {
      "get": {
        "summary": "Local SEO locations associated to the hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:localSeo/location/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebLocalSeoLocation"
      }
    },
    "/hosting/web/{serviceName}/localSeo/location/{id}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Location id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.localSeo.location"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:localSeo/location/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/localSeo/location/{id}/serviceInfos": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Location id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:localSeo/location/serviceInfos/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/localSeo/location/{id}/serviceInfosUpdate": {
      "post": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Location id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "renew": {
                    "description": "Renew type",
                    "$ref": "#/components/schemas/service.RenewType"
                  }
                },
                "required": [
                  "renew"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:localSeo/location/serviceInfosUpdate",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/localSeo/location/{id}/terminate": {
      "post": {
        "summary": "Terminate a local SEO sub service",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Location id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:localSeo/location/terminate",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/metricsToken": {
      "get": {
        "summary": "Get metrics token",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.MetricsToken"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:metricsToken/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/module": {
      "get": {
        "summary": "Module installed on your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:module/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebModule"
      },
      "post": {
        "summary": "Install a new module",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "adminName": {
                    "type": "string",
                    "description": "The login for the admin account (may be a standard string or your email)"
                  },
                  "adminPassword": {
                    "type": "string",
                    "description": "The password for the admin account (at least 8 characters)",
                    "format": "password"
                  },
                  "dependencies": {
                    "type": "array",
                    "description": "The dependencies that we have to configure on your module. A dependency can be a standard database (like MySQL or PostgreSQL) or a key-value store (like Redis or Memcached) for example",
                    "items": {
                      "$ref": "#/components/schemas/hosting.web.module.DependencyType"
                    }
                  },
                  "domain": {
                    "type": "string",
                    "description": "On which domain the module has to be available (it can be a multidomain or a subdomain) - if not set, the module will be available on your serviceName domain"
                  },
                  "language": {
                    "description": "The language to set to your module",
                    "$ref": "#/components/schemas/hosting.web.module.LanguageEnum"
                  },
                  "moduleId": {
                    "type": "integer",
                    "description": "ID of the module you want to install"
                  },
                  "path": {
                    "type": "string",
                    "description": "Where to install the module, relative to your home directory"
                  }
                },
                "required": [
                  "moduleId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:module/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/module/{id}": {
      "delete": {
        "summary": "Delete a module installed",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Installation ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:module/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Installation ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.module"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:module/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/module/{id}/upgrade": {
      "post": {
        "summary": "Upgrade your module to another version",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Installation ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "moduleId": {
                    "type": "integer",
                    "description": "The ID of the module to upgrade to"
                  }
                },
                "required": [
                  "moduleId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "orange",
            "label": "Internal use only"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:module/upgrade",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ovhConfig": {
      "get": {
        "summary": "Configuration used on your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "historical",
            "description": "Filter the value of historical property (=)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "path",
            "description": "Filter the value of path property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ovhConfig/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebOvhConfig"
      }
    },
    "/hosting/web/{serviceName}/ovhConfig/{id}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Configuration's id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.ovhConfig"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ovhConfig/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ovhConfig/{id}/changeConfiguration": {
      "post": {
        "summary": "Apply a new configuration on this path",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Configuration's id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "container": {
                    "description": "Container to run this website",
                    "$ref": "#/components/schemas/hosting.web.ovhconfig.ContainerEnum"
                  },
                  "engineName": {
                    "description": "Version of engine you want",
                    "$ref": "#/components/schemas/hosting.web.ovhConfig.EngineNameEnum"
                  },
                  "engineVersion": {
                    "description": "Name of engine you want",
                    "$ref": "#/components/schemas/hosting.web.ovhConfig.AvailableEngineVersionEnum"
                  },
                  "environment": {
                    "description": "Environment configuration you want",
                    "$ref": "#/components/schemas/hosting.web.ovhConfig.EnvironmentEnum"
                  },
                  "httpFirewall": {
                    "description": "Configuration you want for http firewall",
                    "$ref": "#/components/schemas/hosting.web.ovhConfig.HttpFirewallEnum"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ovhConfig/changeConfiguration",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ovhConfig/{id}/rollback": {
      "post": {
        "summary": "Rollback to an old configuration",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Configuration's id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rollbackId": {
                    "type": "integer",
                    "description": "The configuration's id you want to rollback"
                  }
                },
                "required": [
                  "rollbackId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ovhConfig/rollback",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ovhConfigCapabilities": {
      "get": {
        "summary": "Get the list of versions and container image available on your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.OvhConfigCapabilities"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ovhConfigCapabilities/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ovhConfigRecommendedValues": {
      "get": {
        "summary": "Get recommended values on ovhConfig file",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.OvhConfigRecommendedValues"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ovhConfigRecommendedValues/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ovhConfigRefresh": {
      "post": {
        "summary": "Synchronize the configuration listing with content on your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ovhConfig/refresh",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ownLogs": {
      "get": {
        "summary": "Own Logs linked to your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fqdn",
            "description": "Filter the value of fqdn property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ownLogs/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebOwnLogs"
      }
    },
    "/hosting/web/{serviceName}/ownLogs/{id}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.ownLogs"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ownLogs/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ownLogs/{id}/userLogs": {
      "get": {
        "summary": "User allowed to connect into your logs interface",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "login",
            "description": "Filter the value of login property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ownLogs/userLogs/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebUserLogs"
      },
      "post": {
        "summary": "Create new userLogs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description field for you"
                  },
                  "login": {
                    "type": "string",
                    "description": "The userLogs login used to connect to logs.ovh.net"
                  },
                  "ownLogsId": {
                    "type": "integer",
                    "description": "OwnLogs where this userLogs will be enable. Default : main domain ownlogs"
                  },
                  "password": {
                    "type": "string",
                    "description": "The new userLogs password",
                    "format": "password"
                  }
                },
                "required": [
                  "description",
                  "login",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ownLogs/userLogs/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ownLogs/{id}/userLogs/{login}": {
      "delete": {
        "summary": "Delete the userLogs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The userLogs login used to connect to logs.ovh.net",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ownLogs/userLogs/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The userLogs login used to connect to logs.ovh.net",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.userLogs"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ownLogs/userLogs/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The userLogs login used to connect to logs.ovh.net",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.userLogs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ownLogs/userLogs/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ownLogs/{id}/userLogs/{login}/changePassword": {
      "post": {
        "summary": "Request a password change",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The userLogs login used to connect to logs.ovh.net",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "The new userLogs password",
                    "format": "password"
                  }
                },
                "required": [
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ownLogs/userLogs/changePassword",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/privateDatabaseCreationCapabilities": {
      "get": {
        "summary": "List available privateDatabase you can install",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.database.CreationDatabaseCapabilities"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:privateDatabaseCreationCapabilities/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/privateDatabases": {
      "get": {
        "summary": "List linked privateDatabases",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:privateDatabases/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/request": {
      "post": {
        "summary": "Request specific operation for your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "description": "Action you want to request",
                    "$ref": "#/components/schemas/hosting.web.RequestActionEnum"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:request",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/requestBoost": {
      "post": {
        "summary": "Request a boost",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.RequestBoostInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:requestBoost",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/restoreSnapshot": {
      "post": {
        "summary": "Restore this snapshot ALL CURRENT DATA WILL BE REPLACED BY YOUR SNAPSHOT",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "backup": {
                    "description": "The backup you want to restore",
                    "$ref": "#/components/schemas/hosting.web.backup.TypeEnum"
                  }
                },
                "required": [
                  "backup"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:restoreSnapshot",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/runtime": {
      "get": {
        "summary": "List of runtime configurations to your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Filter the value of name property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filter the value of type property (=)",
            "schema": {
              "$ref": "#/components/schemas/hosting.web.runtime.TypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:runtime/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebRuntime"
      },
      "post": {
        "summary": "Request the creation of a new runtime configuration",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appBootstrap": {
                    "type": "string",
                    "description": "The client application bootstrap script"
                  },
                  "appEnv": {
                    "description": "The client application environment",
                    "$ref": "#/components/schemas/hosting.web.runtime.EnvEnum"
                  },
                  "attachedDomains": {
                    "type": "array",
                    "description": "The attached domains fqdn to link to this runtime configuration",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isDefault": {
                    "type": "boolean",
                    "description": "Set if the runtime configuration is the one by default for the hosting"
                  },
                  "name": {
                    "type": "string",
                    "description": "The custom display name of the runtime configuration"
                  },
                  "publicDir": {
                    "type": "string",
                    "description": "The client application public directory"
                  },
                  "type": {
                    "description": "The backend type of a runtime configuration",
                    "$ref": "#/components/schemas/hosting.web.runtime.TypeEnum"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:runtime/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/runtime/{id}": {
      "delete": {
        "summary": "Delete a runtime configuration of an hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The runtime configuration ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:runtime/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The runtime configuration ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.runtime"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:runtime/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The runtime configuration ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.runtime"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:runtime/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/runtime/{id}/attachedDomains": {
      "get": {
        "summary": "Get the attached domains linked to this runtime configuration",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The runtime configuration ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:runtime/attachedDomains/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/runtimeAvailableTypes": {
      "get": {
        "summary": "List available runtime configurations available backend types",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "language",
            "description": "Specific programming language to filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.runtime.TypeEnum"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:runtimeAvailableTypes/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/serviceInfos": {
      "get": {
        "summary": "Get service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:serviceInfos/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/services.Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:serviceInfos/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ssl": {
      "delete": {
        "summary": "Delete a hosted SSL",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.SSL"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ssl/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get hosted SSL properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.SSL"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ssl/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create the free default HostedSsl OR import your own SSL on your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.SSLInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.SSL"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ssl/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ssl/domains": {
      "get": {
        "summary": "Get list of domains linked to the hosted SSL",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ssl/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ssl/regenerate": {
      "post": {
        "summary": "Regenerate a hosted SSL",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.SSL"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ssl/regenerate",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/ssl/report": {
      "get": {
        "summary": "Get hosted SSL report properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.ssl.Report"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:ssl/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/statistics": {
      "get": {
        "summary": "Get statistics about this web hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "period",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/hosting.web.StatisticsPeriodEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/hosting.web.StatisticsTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/complexType.ChartSerie_complexType.ChartTimestampValue"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:statistics/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/tasks": {
      "get": {
        "summary": "List tasks attached to your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "function",
            "description": "Filter tasks by function (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter tasks by status (like)",
            "schema": {
              "$ref": "#/components/schemas/hosting.web.task.StatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:tasks/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebPublicTask"
      }
    },
    "/hosting/web/{serviceName}/tasks/{id}": {
      "get": {
        "summary": "Get this task properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:tasks/get",
            "required": true
          }
        ],
        "x-response-identifier": "id"
      }
    },
    "/hosting/web/{serviceName}/terminate": {
      "post": {
        "summary": "Ask for the termination of your service",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:terminate",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/token": {
      "get": {
        "summary": "Use to link an external domain",
        "description": "Use to link an external domain. ( This token has to be insert into a TXT field on your dns zone with ovhcontrol subdomain )",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:token/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/user": {
      "get": {
        "summary": "User allowed to connect into your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "home",
            "description": "Filter the value of home property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "login",
            "description": "Filter the value of login property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:user/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebUser"
      },
      "post": {
        "summary": "Create new ftp/ssh user",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "home": {
                    "type": "string",
                    "description": "Home directory"
                  },
                  "login": {
                    "type": "string",
                    "description": "Login use for your new user"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password",
                    "format": "password"
                  },
                  "sshState": {
                    "description": "Ssh state for this user. Default: none",
                    "$ref": "#/components/schemas/hosting.web.user.SshStateEnum"
                  }
                },
                "required": [
                  "home",
                  "login",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:user/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/user/{login}": {
      "delete": {
        "summary": "Delete ftp/ssh user",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "Login used to connect on FTP and SSH",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:user/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "Login used to connect on FTP and SSH",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.user"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:user/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "Login used to connect on FTP and SSH",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:user/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/user/{login}/changePassword": {
      "post": {
        "summary": "Request a password change",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "Login used to connect on FTP and SSH",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "The user's new password",
                    "format": "password"
                  }
                },
                "required": [
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:user/changePassword",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/userLogs": {
      "get": {
        "summary": "User allowed to connect into your logs interface",
        "deprecated": true,
        "x-deprecation-date": "2023-11-03T00:00:00+01:00",
        "x-deletion-date": "2024-03-01T00:00:00+01:00",
        "x-replacement-route": "/hosting/web/{serviceName}/ownLogs/{id}/userLogs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "login",
            "description": "Filter the value of login property (like)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:userLogs/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebUserLogs"
      },
      "post": {
        "summary": "Create new userLogs",
        "deprecated": true,
        "x-deprecation-date": "2023-11-03T00:00:00+01:00",
        "x-deletion-date": "2024-03-01T00:00:00+01:00",
        "x-replacement-route": "/hosting/web/{serviceName}/ownLogs/{id}/userLogs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description field for you"
                  },
                  "login": {
                    "type": "string",
                    "description": "The userLogs login used to connect to logs.ovh.net"
                  },
                  "ownLogsId": {
                    "type": "integer",
                    "description": "OwnLogs where this userLogs will be enable. Default : main domain ownlogs"
                  },
                  "password": {
                    "type": "string",
                    "description": "The new userLogs password",
                    "format": "password"
                  }
                },
                "required": [
                  "description",
                  "login",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:userLogs/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/userLogs/{login}": {
      "delete": {
        "summary": "Delete the userLogs",
        "deprecated": true,
        "x-deprecation-date": "2023-11-03T00:00:00+01:00",
        "x-deletion-date": "2024-03-01T00:00:00+01:00",
        "x-replacement-route": "/hosting/web/{serviceName}/ownLogs/{id}/userLogs/{login}",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The userLogs login used to connect to logs.ovh.net",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:userLogs/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "deprecated": true,
        "x-deprecation-date": "2023-11-03T00:00:00+01:00",
        "x-deletion-date": "2024-03-01T00:00:00+01:00",
        "x-replacement-route": "/hosting/web/{serviceName}/ownLogs/{id}/userLogs/{login}",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The userLogs login used to connect to logs.ovh.net",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.userLogs"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:userLogs/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "deprecated": true,
        "x-deprecation-date": "2023-11-03T00:00:00+01:00",
        "x-deletion-date": "2024-03-01T00:00:00+01:00",
        "x-replacement-route": "/hosting/web/{serviceName}/ownLogs/{id}/userLogs/{login}",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The userLogs login used to connect to logs.ovh.net",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.userLogs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:userLogs/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/userLogs/{login}/changePassword": {
      "post": {
        "summary": "Request a password change",
        "deprecated": true,
        "x-deprecation-date": "2023-11-03T00:00:00+01:00",
        "x-deletion-date": "2024-03-01T00:00:00+01:00",
        "x-replacement-route": "/hosting/web/{serviceName}/ownLogs/{id}/userLogs/{login}",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The userLogs login used to connect to logs.ovh.net",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "The new userLogs password",
                    "format": "password"
                  }
                },
                "required": [
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "red",
            "label": "Deprecated, will be removed"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:userLogs/changePassword",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/userLogsToken": {
      "get": {
        "summary": "Get a temporary token to access the your web hosting logs interface",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "attachedDomain",
            "description": "Specific attached domain to be included in the scope of your token",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "remoteCheck",
            "description": "Whether to limit the use of the token to the remote IPv4 of API caller",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your hosting",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ttl",
            "description": "Expiration of your token (in seconds)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "password"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:userLogsToken/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/vcs/webhooks": {
      "get": {
        "summary": "Get VCS webhook URLs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "path",
            "description": "Filter on hosting path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "vcs",
            "description": "Filter on VCS platform",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/hosting.web.SupportedVcsEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.VcsWebhooks"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:vcs/webhooks/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/website": {
      "get": {
        "summary": "Websites on your webhosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "path",
            "description": "Filter the value of path property",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:website/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebWebsite"
      },
      "post": {
        "summary": "Create a website on your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.website.CreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:website/create",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/website/{id}": {
      "delete": {
        "summary": "Delete a website on your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "deleteFiles",
            "description": "Whether the website path should be emptied or not",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:website/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get website by id",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.Website"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:website/get",
            "required": true
          }
        ],
        "x-response-identifier": "id"
      },
      "put": {
        "summary": "Update a website on your hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.website.Update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.Website"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:website/edit",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/website/{id}/deploy": {
      "post": {
        "summary": "Request deployment of the website",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hosting.web.website.DeploymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.PublicTask"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:website/deploy",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/website/{id}/deployment": {
      "get": {
        "summary": "Deployments of the website",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:website/deployment/get",
            "required": true
          }
        ],
        "x-expanded-response": "HostingWebWebsiteDeployment"
      }
    },
    "/hosting/web/{serviceName}/website/{id}/deployment/{deploymentId}": {
      "get": {
        "summary": "Get deployment by id",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deploymentId",
            "description": "Deployment ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.website.Deployment"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:website/deployment/get",
            "required": true
          }
        ],
        "x-response-identifier": "id"
      }
    },
    "/hosting/web/{serviceName}/website/{id}/deployment/{deploymentId}/logs": {
      "get": {
        "summary": "Get logs of a website deployment",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deploymentId",
            "description": "Deployment ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hosting.web.website.deployment.LogsMessage"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:website/deployment/logs/get",
            "required": true
          }
        ]
      }
    },
    "/hosting/web/{serviceName}/websiteCreationCapabilities": {
      "get": {
        "summary": "Get website creation capabilities of the hosting",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "Service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hosting.web.WebsiteCreationCapabilities"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "webHosting:apiovh:websiteCreationCapabilities/get",
            "required": true
          }
        ]
      }
    }
  }
}
