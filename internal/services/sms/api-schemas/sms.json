{
  "openapi": "3.0.0",
  "info": {
    "title": "OVHcloud API specification",
    "description": "Specification for OVHcloud API",
    "version": "1.0",
    "contact": {
      "name": "OVH",
      "email": "api@ml.ovh.net"
    }
  },
  "servers": [
    {
      "url": "https://eu.api.ovh.com/1.0"
    }
  ],
  "components": {
    "schemas": {
      "any": {
        "description": "Can be anything (text, int, bool, json, html, etc.)",
        "example": "This is a content of any type !"
      },
      "duration": {
        "type": "string",
        "description": "Duration (e.g., P1Y2M3DT4H6M9S)",
        "example": "P1Y2M3DT4H6M9S"
      },
      "email": {
        "type": "string",
        "description": "Email address (e.g., api@ml.ovh.net)",
        "format": "email",
        "example": "api@ml.ovh.net"
      },
      "iam.ResourceMetadata": {
        "type": "object",
        "description": "IAM resource metadata embedded in services models",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Resource display name",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the resource",
            "format": "uuid",
            "readOnly": true
          },
          "tags": {
            "type": "object",
            "description": "Resource tags. Tags that were internally computed are prefixed with ovh:",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            },
            "readOnly": true
          },
          "urn": {
            "type": "string",
            "description": "Unique resource name used in policies",
            "readOnly": true
          }
        }
      },
      "iam.resource.TagFilter": {
        "type": "object",
        "description": "Resource tag filter",
        "properties": {
          "operator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.resource.TagFilter.OperatorEnum"
              }
            ],
            "description": "Operator to use in order to filter on the value (defaults to 'EQ')",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "description": "Value to use in order to filter tags",
            "readOnly": true
          }
        }
      },
      "iam.resource.TagFilter.OperatorEnum": {
        "type": "string",
        "description": "Operator that can be used in order to filter resources tags",
        "enum": [
          "EQ",
          "EXISTS",
          "ILIKE",
          "LIKE",
          "NEQ",
          "NEXISTS"
        ]
      },
      "internationalPhoneNumber": {
        "type": "string",
        "description": "International phone number",
        "format": "phone-number"
      },
      "ip": {
        "type": "string",
        "description": "IP address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipBlock": {
        "type": "string",
        "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)",
        "format": "ip-block",
        "example": "192.0.2.0/24"
      },
      "ipInterface": {
        "type": "string",
        "description": "IP address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipv4": {
        "type": "string",
        "description": "IPv4 address (e.g., 192.0.2.0)",
        "format": "ipv4",
        "example": "192.0.2.0"
      },
      "ipv4Block": {
        "type": "string",
        "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)",
        "format": "ipv4-block",
        "example": "192.0.2.0/24"
      },
      "ipv6": {
        "type": "string",
        "description": "IPv6 address (e.g., 2001:41d0:1:1994::1)",
        "format": "ipv6",
        "example": "2001:41d0:1:1994::1"
      },
      "ipv6Block": {
        "type": "string",
        "description": "IPv6 CIDR notation (e.g., 2001:41d0::/128)",
        "format": "ipv6-block",
        "example": "2001:41d0::/128"
      },
      "macAddress": {
        "type": "string",
        "description": "MAC address (e.g., 2001:4860:4860::8844)",
        "format": "mac-address",
        "example": "2001:4860:4860::8888. 2001:4860:4860::8844"
      },
      "order.CurrencyCodeEnum": {
        "type": "string",
        "enum": [
          "AUD",
          "CAD",
          "CZK",
          "EUR",
          "GBP",
          "INR",
          "LTL",
          "MAD",
          "N/A",
          "PLN",
          "SGD",
          "TND",
          "USD",
          "XOF",
          "points"
        ]
      },
      "order.Price": {
        "type": "object",
        "description": "Price with it's currency and textual representation",
        "properties": {
          "currencyCode": {
            "$ref": "#/components/schemas/order.CurrencyCodeEnum"
          },
          "text": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "phoneNumber": {
        "type": "string",
        "description": "Phone number",
        "format": "phone-number"
      },
      "reference.CountryEnum": {
        "type": "string",
        "description": "All country prices accessible from a reference",
        "enum": [
          "all",
          "ca",
          "cz",
          "de",
          "en",
          "es",
          "fi",
          "fr",
          "gb",
          "ie",
          "it",
          "lt",
          "ma",
          "nl",
          "pl",
          "pp",
          "pt",
          "qc",
          "ru",
          "sk",
          "sn",
          "tn",
          "we"
        ]
      },
      "service.RenewType": {
        "type": "object",
        "description": "Map a possible renew for a specific service",
        "properties": {
          "automatic": {
            "type": "boolean",
            "description": "The service is automatically renewed"
          },
          "deleteAtExpiration": {
            "type": "boolean",
            "description": "The service will be deleted at expiration"
          },
          "forced": {
            "type": "boolean",
            "description": "The service forced to be renewed"
          },
          "manualPayment": {
            "type": "boolean",
            "description": "The service needs to be manually renewed and paid",
            "nullable": true
          },
          "period": {
            "type": "integer",
            "description": "period of renew in month",
            "nullable": true
          }
        }
      },
      "service.RenewalTypeEnum": {
        "type": "string",
        "description": "Detailed renewal type of a service",
        "enum": [
          "automaticForcedProduct",
          "automaticV2012",
          "automaticV2014",
          "automaticV2016",
          "automaticV2024",
          "manual",
          "oneShot",
          "option"
        ]
      },
      "service.StateEnum": {
        "type": "string",
        "enum": [
          "autorenewInProgress",
          "expired",
          "inCreation",
          "ok",
          "pendingDebt",
          "unPaid"
        ]
      },
      "services.Service": {
        "type": "object",
        "description": "Details about a Service",
        "properties": {
          "canDeleteAtExpiration": {
            "type": "boolean",
            "description": "Indicates that the service can be set up to be deleted at expiration",
            "readOnly": true
          },
          "contactAdmin": {
            "type": "string",
            "readOnly": true
          },
          "contactBilling": {
            "type": "string",
            "readOnly": true
          },
          "contactTech": {
            "type": "string",
            "readOnly": true
          },
          "creation": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "domain": {
            "type": "string",
            "readOnly": true
          },
          "engagedUpTo": {
            "type": "string",
            "nullable": true,
            "format": "date",
            "readOnly": true
          },
          "expiration": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "possibleRenewPeriod": {
            "type": "array",
            "description": "All the possible renew period of your service in month",
            "nullable": true,
            "items": {
              "type": "integer"
            },
            "readOnly": true
          },
          "renew": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.RenewType"
              }
            ],
            "description": "Way of handling the renew",
            "nullable": true
          },
          "renewalType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.RenewalTypeEnum"
              }
            ],
            "readOnly": true
          },
          "serviceId": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/service.StateEnum"
              }
            ],
            "readOnly": true
          }
        }
      },
      "sms.Account": {
        "type": "object",
        "description": "SMS details",
        "properties": {
          "automaticRecreditAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.PackQuantityAutomaticRecreditEnum"
              }
            ],
            "nullable": true
          },
          "callBack": {
            "type": "string",
            "description": "URL called when state of a sent SMS changes",
            "nullable": true
          },
          "channel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.ChannelEnum"
              }
            ],
            "description": "For what purpose this account can be used for",
            "readOnly": true
          },
          "creditThresholdForAutomaticRecredit": {
            "type": "number",
            "description": "Credit threshold after which an automatic recredit is launched"
          },
          "creditsHoldByQuota": {
            "type": "number",
            "readOnly": true
          },
          "creditsLeft": {
            "type": "number",
            "readOnly": true
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "smpp": {
            "type": "boolean",
            "description": "Whether the account can be used for smpp or not",
            "readOnly": true
          },
          "smsResponse": {
            "$ref": "#/components/schemas/sms.Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.StatusAccountEnum"
              }
            ],
            "readOnly": true
          },
          "stopCallBack": {
            "type": "string",
            "description": "URL called when a STOP is received after a receiver replied stop to a SMS",
            "nullable": true
          },
          "templates": {
            "$ref": "#/components/schemas/sms.Templates"
          },
          "userQuantityWithQuota": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "sms.AccountWithIAM": {
        "type": "object",
        "description": "SMS details",
        "properties": {
          "automaticRecreditAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.PackQuantityAutomaticRecreditEnum"
              }
            ],
            "nullable": true
          },
          "callBack": {
            "type": "string",
            "description": "URL called when state of a sent SMS changes",
            "nullable": true
          },
          "channel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.ChannelEnum"
              }
            ],
            "description": "For what purpose this account can be used for",
            "readOnly": true
          },
          "creditThresholdForAutomaticRecredit": {
            "type": "number",
            "description": "Credit threshold after which an automatic recredit is launched"
          },
          "creditsHoldByQuota": {
            "type": "number",
            "readOnly": true
          },
          "creditsLeft": {
            "type": "number",
            "readOnly": true
          },
          "description": {
            "type": "string"
          },
          "iam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.ResourceMetadata"
              }
            ],
            "description": "IAM resource metadata",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "smpp": {
            "type": "boolean",
            "description": "Whether the account can be used for smpp or not",
            "readOnly": true
          },
          "smsResponse": {
            "$ref": "#/components/schemas/sms.Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.StatusAccountEnum"
              }
            ],
            "readOnly": true
          },
          "stopCallBack": {
            "type": "string",
            "description": "URL called when a STOP is received after a receiver replied stop to a SMS",
            "nullable": true
          },
          "templates": {
            "$ref": "#/components/schemas/sms.Templates"
          },
          "userQuantityWithQuota": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "sms.AlertThreshold": {
        "type": "object",
        "description": "A structure describing all information about alert threshold informations",
        "properties": {
          "alertEmail": {
            "type": "string"
          },
          "alertNumber": {
            "type": "string"
          },
          "alertThreshold": {
            "type": "integer"
          },
          "support": {
            "$ref": "#/components/schemas/sms.SupportEnum"
          }
        }
      },
      "sms.AllowedIPs": {
        "type": "object",
        "description": "Smpp allowed IPs",
        "properties": {
          "action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.AllowedIPsActionEnum"
              }
            ],
            "description": "Action to perform on the provided IPs"
          },
          "ips": {
            "type": "array",
            "description": "List of IPs to add or remove",
            "items": {
              "$ref": "#/components/schemas/ip"
            }
          }
        },
        "required": [
          "action",
          "ips"
        ]
      },
      "sms.AllowedIPsActionEnum": {
        "type": "string",
        "description": "Smpp allowed IPs action",
        "enum": [
          "add",
          "remove"
        ]
      },
      "sms.Batch": {
        "type": "object",
        "description": "Batch of SMS to send",
        "properties": {
          "accountID": {
            "type": "integer",
            "description": "SMS account ID",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "description": "Creation datetime",
            "format": "date-time",
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "description": "Details on error(s) on the batch, if any",
            "items": {
              "$ref": "#/components/schemas/sms.BatchError"
            },
            "readOnly": true
          },
          "estimatedCredits": {
            "type": "number",
            "description": "The estimated cost of the batch in credits",
            "readOnly": true
          },
          "finishedAt": {
            "type": "string",
            "description": "Datetime when the batch finished processing SMSs",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "from": {
            "type": "string",
            "description": "SMS sender",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Batch ID",
            "format": "uuid",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "description": "SMS message",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Batch name",
            "readOnly": true
          },
          "processedRecords": {
            "type": "integer",
            "description": "Number of processed records in this batch",
            "readOnly": true
          },
          "receivers": {
            "type": "array",
            "description": "SMS receivers list",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/phoneNumber"
            },
            "readOnly": true
          },
          "sentAt": {
            "type": "string",
            "description": "Datetime when the SMSs of the batch are sent (based on deferred time if exists)",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "slotID": {
            "type": "string",
            "description": "Slot ID",
            "nullable": true,
            "readOnly": true
          },
          "startedAt": {
            "type": "string",
            "description": "Datetime when the batch started processing SMSs",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.BatchStatusEnum"
              }
            ],
            "description": "Batch status",
            "readOnly": true
          },
          "totalRecords": {
            "type": "integer",
            "description": "Total number of records in this batch",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update datetime",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "sms.BatchClassEnum": {
        "type": "string",
        "description": "SMS classes",
        "enum": [
          "FLASH",
          "PHONE",
          "SIM"
        ]
      },
      "sms.BatchError": {
        "type": "object",
        "description": "Batch error details",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "readOnly": true
          },
          "receiver": {
            "type": "string",
            "description": "Receiver that triggered the error",
            "readOnly": true
          }
        }
      },
      "sms.BatchParams": {
        "type": "object",
        "description": "Params to create a batch",
        "properties": {
          "class": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.BatchClassEnum"
              }
            ],
            "description": "Deprecated: SMS class"
          },
          "deferred": {
            "type": "string",
            "description": "SMS deferred sending date",
            "format": "date-time"
          },
          "from": {
            "type": "string",
            "description": "SMS sender. Either \"from\" or \"senderForResponse\" must be passed"
          },
          "message": {
            "type": "string",
            "description": "SMS message"
          },
          "name": {
            "type": "string",
            "description": "Batch name"
          },
          "noStop": {
            "type": "boolean",
            "description": "STOP clause not needed"
          },
          "senderForResponse": {
            "type": "boolean",
            "description": "Ask to compute a sender that allows response. Either \"from\" or \"senderForResponse\" must be passed"
          },
          "slotID": {
            "type": "string",
            "description": "SMS receivers slot ID. Either \"to\" or \"slotID\" must be passed"
          },
          "tag": {
            "type": "string",
            "description": "SMS tag"
          },
          "to": {
            "type": "array",
            "description": "SMS receivers list. Either \"to\" or \"slotID\" must be passed",
            "items": {
              "$ref": "#/components/schemas/phoneNumber"
            }
          }
        },
        "required": [
          "message"
        ]
      },
      "sms.BatchStatistics": {
        "type": "object",
        "description": "Batch's statistics",
        "properties": {
          "credits": {
            "type": "number",
            "description": "The cost of the batch in credits, computed during batch processing",
            "readOnly": true
          },
          "delivered": {
            "type": "integer",
            "description": "Number of SMS that are delivered",
            "readOnly": true
          },
          "estimatedCredits": {
            "type": "number",
            "description": "The estimated cost of the batch in credits, computed before batch processing",
            "readOnly": true
          },
          "failed": {
            "type": "integer",
            "description": "Number of SMS in error",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Batch ID",
            "format": "uuid",
            "readOnly": true
          },
          "pending": {
            "type": "integer",
            "description": "Number of SMS that are in pending status",
            "readOnly": true
          },
          "sent": {
            "type": "integer",
            "description": "Number of SMS that are sent to the broker",
            "readOnly": true
          },
          "stoplisted": {
            "type": "integer",
            "description": "Number of SMS that received a STOP by the receiver",
            "readOnly": true
          }
        }
      },
      "sms.BatchStatusEnum": {
        "type": "string",
        "description": "Batch statuses",
        "enum": [
          "CANCELED",
          "CANCELING",
          "COMPLETED",
          "FAILED",
          "INSERTED",
          "INSERTING",
          "PENDING",
          "TO_CANCEL"
        ]
      },
      "sms.BatchUpdateParams": {
        "type": "object",
        "description": "Params to update a batch",
        "properties": {
          "name": {
            "type": "string",
            "description": "Batch name"
          }
        },
        "required": [
          "name"
        ]
      },
      "sms.BillingCountryEnum": {
        "type": "string",
        "description": "Countries where we sell SMS credits",
        "enum": [
          "es",
          "fr",
          "gb",
          "ie",
          "it",
          "pl"
        ]
      },
      "sms.Blacklist": {
        "type": "object",
        "description": "SMS blacklist",
        "properties": {
          "batchID": {
            "type": "string",
            "description": "ID of the batch responsible of the blacklist",
            "nullable": true,
            "format": "uuid",
            "readOnly": true
          },
          "dateCreation": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "number": {
            "type": "string",
            "description": "The sms number blacklisted",
            "readOnly": true
          },
          "smsOutgoingID": {
            "type": "integer",
            "description": "ID of the outgoing SMS responsible of the blacklist",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "sms.ChannelEnum": {
        "type": "string",
        "description": "In case of smpp the channel can not be \"both\"",
        "enum": [
          "both",
          "marketing",
          "transactional"
        ]
      },
      "sms.CharsetEnum": {
        "type": "string",
        "description": "The charset format",
        "enum": [
          "UTF-8"
        ]
      },
      "sms.ChatAccess": {
        "type": "object",
        "description": "The web access for your virtual number chat application",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "The creation date of this access",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "description": "The url of the web access",
            "readOnly": true
          }
        }
      },
      "sms.ClassEnum": {
        "type": "string",
        "description": "Deprecated: The sms class of sms sending job",
        "enum": [
          "flash",
          "phoneDisplay",
          "sim",
          "toolkit"
        ]
      },
      "sms.CodingEnum": {
        "type": "string",
        "description": "The sms coding",
        "enum": [
          "7bit",
          "8bit"
        ]
      },
      "sms.Contact": {
        "type": "object",
        "description": "Contact Info",
        "properties": {
          "email": {
            "allOf": [
              {
                "$ref": "#/components/schemas/email"
              }
            ],
            "description": "Email address",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "phonenumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/phoneNumber"
              }
            ],
            "description": "Phone number",
            "nullable": true
          }
        }
      },
      "sms.CountryEnum": {
        "type": "string",
        "description": "All country suffixes accessible for sms services and \"all\" available",
        "enum": [
          "ad",
          "ae",
          "af",
          "ag",
          "ai",
          "al",
          "all",
          "am",
          "an",
          "ao",
          "ar",
          "at",
          "au",
          "aw",
          "az",
          "ba",
          "bb",
          "bd",
          "be",
          "bf",
          "bg",
          "bh",
          "bi",
          "bj",
          "bm",
          "bn",
          "bo",
          "br",
          "bs",
          "bt",
          "bw",
          "by",
          "bz",
          "ca",
          "cd",
          "cf",
          "cg",
          "ch",
          "ci",
          "ck",
          "cl",
          "cm",
          "cn",
          "co",
          "cr",
          "cu",
          "cv",
          "cy",
          "cz",
          "de",
          "dk",
          "dm",
          "dz",
          "ec",
          "ee",
          "eg",
          "es",
          "et",
          "fi",
          "fj",
          "fk",
          "fo",
          "fr",
          "ga",
          "gb",
          "gd",
          "ge",
          "gf",
          "gh",
          "gi",
          "gl",
          "gm",
          "gn",
          "gp",
          "gq",
          "gr",
          "gt",
          "gu",
          "gw",
          "gy",
          "hk",
          "hn",
          "hr",
          "ht",
          "hu",
          "id",
          "ie",
          "il",
          "in",
          "io",
          "iq",
          "ir",
          "is",
          "it",
          "jm",
          "jo",
          "jp",
          "ke",
          "kg",
          "kh",
          "km",
          "kn",
          "kr",
          "kw",
          "ky",
          "kz",
          "la",
          "lb",
          "lc",
          "li",
          "lk",
          "lr",
          "ls",
          "lt",
          "lu",
          "lv",
          "ly",
          "ma",
          "md",
          "me",
          "mg",
          "mk",
          "ml",
          "mn",
          "mo",
          "mq",
          "mr",
          "ms",
          "mt",
          "mu",
          "mv",
          "mw",
          "mx",
          "my",
          "mz",
          "na",
          "nc",
          "ne",
          "ng",
          "ni",
          "nl",
          "no",
          "np",
          "nz",
          "om",
          "pa",
          "pe",
          "pf",
          "pg",
          "ph",
          "pk",
          "pl",
          "ps",
          "pt",
          "py",
          "qa",
          "re",
          "ro",
          "rs",
          "ru",
          "rw",
          "sa",
          "sb",
          "sc",
          "sd",
          "se",
          "sg",
          "si",
          "sk",
          "sl",
          "sm",
          "sn",
          "so",
          "sr",
          "st",
          "sv",
          "sy",
          "sz",
          "tc",
          "td",
          "tg",
          "th",
          "tj",
          "tl",
          "tm",
          "tn",
          "to",
          "tr",
          "tt",
          "tw",
          "tz",
          "ua",
          "ug",
          "us",
          "uy",
          "uz",
          "vc",
          "ve",
          "vg",
          "vi",
          "vn",
          "vu",
          "ws",
          "ye",
          "yt",
          "za",
          "zm",
          "zw"
        ]
      },
      "sms.DestinationRates": {
        "type": "object",
        "description": "Rates of a given destination",
        "properties": {
          "country": {
            "type": "string",
            "description": "The country full name"
          },
          "countryCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.CountryEnum"
              }
            ],
            "description": "The country 2-letters code"
          },
          "credit": {
            "type": "number",
            "description": "Credits consumed by sending one SMS towards the given destination"
          },
          "price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price of one SMS sent towards the given destination"
          }
        }
      },
      "sms.DocumentWayTypeEnum": {
        "type": "string",
        "description": "Way type",
        "enum": [
          "incoming",
          "outgoing"
        ]
      },
      "sms.EncodingEnum": {
        "type": "string",
        "description": "The SMS available characters class",
        "enum": [
          "7bits",
          "unicode"
        ]
      },
      "sms.Exception": {
        "type": "object",
        "description": "Sms reach list",
        "properties": {
          "countrySuffixe": {
            "type": "string",
            "description": "The abreviated country code.",
            "readOnly": true
          },
          "messages": {
            "type": "array",
            "description": "The exception message",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "operators": {
            "type": "string",
            "description": "The list of operators impacted.",
            "readOnly": true
          },
          "restrictionCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.RestrictionCodeEnum"
              }
            ],
            "description": "The type of routing restriction imposed by the operator",
            "readOnly": true
          },
          "substitution": {
            "type": "string",
            "description": "The substitution sender used to bypass operator filter",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "sms.Hlr": {
        "type": "object",
        "description": "Sms operator informations",
        "properties": {
          "country": {
            "type": "string",
            "description": "The country",
            "readOnly": true
          },
          "countryCode": {
            "type": "string",
            "description": "The countryCode prefix number",
            "readOnly": true
          },
          "network": {
            "type": "string",
            "description": "The network name",
            "readOnly": true
          },
          "operator": {
            "type": "string",
            "description": "The operator name",
            "readOnly": true
          },
          "region": {
            "type": "string",
            "description": "The region",
            "readOnly": true
          }
        }
      },
      "sms.HlrLookupNumber": {
        "type": "object",
        "description": "Home Location Register informations. Give informations about a given cellular phone.",
        "properties": {
          "datetime": {
            "type": "string",
            "description": "HLR creation datetime",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "HLR id",
            "readOnly": true
          },
          "msisdn": {
            "type": "string",
            "description": "MSISDN",
            "readOnly": true
          },
          "operatorCode": {
            "type": "string",
            "description": "The {Mobile Country Code, Mobile Network Code} unique identifier",
            "readOnly": true
          },
          "ported": {
            "type": "boolean",
            "description": "Has the MSISDN been ported from its original network",
            "readOnly": true
          },
          "reachable": {
            "type": "boolean",
            "description": "Is the MSISDN currently reachable",
            "readOnly": true
          },
          "roaming": {
            "type": "boolean",
            "description": "Is the MSISDN currently roaming outside its natinal network",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.HlrStatuses"
              }
            ],
            "description": "Status of the HLR request",
            "readOnly": true
          },
          "valid": {
            "type": "boolean",
            "description": "Is the MSISDN valid",
            "readOnly": true
          }
        }
      },
      "sms.HlrStatuses": {
        "type": "string",
        "description": "The sms coding",
        "enum": [
          "doing",
          "done",
          "error",
          "todo"
        ]
      },
      "sms.Incoming": {
        "type": "object",
        "description": "Sms history of sms incoming received",
        "properties": {
          "creationDatetime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "credits": {
            "type": "number",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "sender": {
            "type": "string",
            "readOnly": true
          },
          "tag": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "sms.Job": {
        "type": "object",
        "description": "Sms job",
        "properties": {
          "creationDatetime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "credits": {
            "type": "number",
            "readOnly": true
          },
          "deliveredAt": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "deliveryReceipt": {
            "type": "integer",
            "readOnly": true
          },
          "differedDelivery": {
            "type": "integer",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "messageLength": {
            "type": "integer",
            "readOnly": true
          },
          "numberOfSms": {
            "type": "integer",
            "readOnly": true
          },
          "ptt": {
            "type": "integer",
            "readOnly": true
          },
          "receiver": {
            "type": "string",
            "readOnly": true
          },
          "sender": {
            "type": "string",
            "readOnly": true
          },
          "sentAt": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "sms.JobEstimate": {
        "type": "object",
        "description": "A structure describing the encoding, length and number of SMS parts of a text message",
        "properties": {
          "characters": {
            "type": "integer",
            "description": "The number of characters the message contains, including invisible escaped characters"
          },
          "charactersClass": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.EncodingEnum"
              }
            ],
            "description": "The characters class that will be used to send the SMS, depending on characters in message"
          },
          "maxCharactersPerPart": {
            "type": "integer",
            "description": "The number of characters every SMS part can contain, depending on characters class and quantity of parts"
          },
          "parts": {
            "type": "integer",
            "description": "The quantity of SMS parts the message will be split in"
          }
        }
      },
      "sms.Outgoing": {
        "type": "object",
        "description": "Sent SMS",
        "properties": {
          "batchID": {
            "type": "string",
            "description": "ID of batch linked to the SMS",
            "nullable": true,
            "format": "uuid",
            "readOnly": true
          },
          "creationDatetime": {
            "type": "string",
            "description": "Creation datetime",
            "format": "date-time",
            "readOnly": true
          },
          "credits": {
            "type": "number",
            "description": "Spent credits",
            "readOnly": true
          },
          "deliveredAt": {
            "type": "string",
            "description": "Delivering datetime",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "deliveryReceipt": {
            "type": "integer",
            "description": "Delivery receipt from operator",
            "readOnly": true
          },
          "differedDelivery": {
            "type": "integer",
            "description": "Delay before SMS sending",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Identifier",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "description": "SMS message",
            "readOnly": true
          },
          "messageID": {
            "type": "string",
            "description": "SMPP messageID",
            "nullable": true,
            "format": "uuid",
            "readOnly": true
          },
          "messageLength": {
            "type": "integer",
            "description": "SMS message length",
            "readOnly": true
          },
          "numberOfSms": {
            "type": "integer",
            "description": "SMS message's number of parts",
            "readOnly": true
          },
          "ptt": {
            "type": "integer",
            "description": "Code representing SMS state",
            "readOnly": true
          },
          "receiver": {
            "type": "string",
            "description": "SMS receiver",
            "readOnly": true
          },
          "sender": {
            "type": "string",
            "description": "SMS sender",
            "readOnly": true
          },
          "sentAt": {
            "type": "string",
            "description": "Sending datetime",
            "nullable": true,
            "format": "date-time",
            "readOnly": true
          },
          "tag": {
            "type": "string",
            "description": "Customer label to categorize SMSs",
            "readOnly": true
          },
          "tariffCode": {
            "type": "string",
            "description": "Tariff code applied on the sms",
            "readOnly": true
          }
        }
      },
      "sms.PackDetails": {
        "type": "object",
        "description": "Details about a SMS pack",
        "properties": {
          "countryCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.CountryEnum"
              }
            ],
            "description": "Destination country code"
          },
          "credit": {
            "type": "number",
            "description": "Credits consumed by sending one SMS towards the given destination"
          },
          "creditPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price of one credit, including pack's promotion"
          },
          "creditQuantityMax": {
            "type": "integer",
            "description": "Maximum quantity (excluded) of credit to order to have this price",
            "nullable": true
          },
          "creditQuantityMin": {
            "type": "integer",
            "description": "Minimum quantity (included) of credit to order to have this price"
          },
          "discountCreditPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price of one credit, during a promotional event",
            "nullable": true
          },
          "discountPercentage": {
            "type": "integer",
            "description": "Percentage applied as part of a promotional event",
            "nullable": true
          },
          "discountSmsPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price of one SMS, during a promotional event",
            "nullable": true
          },
          "smsPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/order.Price"
              }
            ],
            "description": "Price of one SMS sent towards the given destination, including pack's promotion"
          },
          "smsQuantityMax": {
            "type": "integer",
            "description": "Maximum quantity (excluded) of SMS you can obtain with this pack",
            "nullable": true
          },
          "smsQuantityMin": {
            "type": "integer",
            "description": "Minimum quantity (included) of SMS you can obtain with this pack"
          }
        }
      },
      "sms.PackOffer": {
        "type": "object",
        "description": "A structure describing all information about an sms pack offer",
        "properties": {
          "countryDestination": {
            "type": "string"
          },
          "giftPrice": {
            "type": "number",
            "nullable": true
          },
          "giftQuantity": {
            "type": "number",
            "nullable": true
          },
          "language": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "integer"
          },
          "smsQuantity": {
            "type": "number"
          },
          "totalPrice": {
            "type": "number",
            "nullable": true
          }
        }
      },
      "sms.PackQuantityAutomaticRecreditEnum": {
        "type": "integer",
        "description": "Pack quantity automatic recredit possibilities",
        "enum": [
          100,
          200,
          250,
          500,
          1000,
          5000,
          10000
        ]
      },
      "sms.PackQuantityEnum": {
        "type": "integer",
        "description": "Pack quantity levels",
        "enum": [
          100,
          200,
          250,
          500,
          1000,
          2500,
          5000,
          10000,
          25000,
          50000,
          100000,
          1000000
        ]
      },
      "sms.Phonebook": {
        "type": "object",
        "description": "Phone book",
        "properties": {
          "bookKey": {
            "type": "string",
            "description": "Identifier of the phonebook",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Phonebook name"
          },
          "phoneKey": {
            "type": "string",
            "description": "Phone key identifier between the phone and phonebooks",
            "readOnly": true
          }
        }
      },
      "sms.PhonebookContact": {
        "type": "object",
        "description": "Phone book contact",
        "properties": {
          "group": {
            "type": "string",
            "description": "Group name of the phonebook"
          },
          "homeMobile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/internationalPhoneNumber"
              }
            ],
            "description": "Home mobile phone number of the contact",
            "nullable": true
          },
          "homePhone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/internationalPhoneNumber"
              }
            ],
            "description": "Home landline phone number of the contact",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Contact identifier",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Contact name"
          },
          "surname": {
            "type": "string",
            "description": "Contact surname"
          },
          "workMobile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/internationalPhoneNumber"
              }
            ],
            "description": "Mobile phone office number of the contact",
            "nullable": true
          },
          "workPhone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/internationalPhoneNumber"
              }
            ],
            "description": "Landline phone office number of the contact",
            "nullable": true
          }
        }
      },
      "sms.PriorityEnum": {
        "type": "string",
        "description": "The priority of an sms sending",
        "enum": [
          "high",
          "low",
          "medium",
          "veryLow"
        ]
      },
      "sms.PttDetails": {
        "type": "object",
        "description": "A structure describing ptt details",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Ptt informations"
          },
          "description": {
            "type": "string",
            "description": "Ptt short description"
          },
          "duration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.PttDurationTypeEnum"
              }
            ],
            "description": "Ptt volatility type"
          }
        }
      },
      "sms.PttDurationTypeEnum": {
        "type": "string",
        "description": "All typology of ptt duration",
        "enum": [
          "indeterminated",
          "permanent",
          "temporary"
        ]
      },
      "sms.Quota": {
        "type": "object",
        "description": "A structure describing all information about quota informations",
        "properties": {
          "quotaLeft": {
            "type": "number"
          },
          "quotaStatus": {
            "$ref": "#/components/schemas/sms.QuotaStatusUserEnum"
          }
        }
      },
      "sms.QuotaStatusUserEnum": {
        "type": "string",
        "description": "Current quota status",
        "enum": [
          "active",
          "inactive"
        ]
      },
      "sms.Receiver": {
        "type": "object",
        "description": "Sms receivers preloaded",
        "properties": {
          "autoUpdate": {
            "type": "boolean",
            "description": "Download file from URL before sending to contacts (works only with csvUrl and not document ID)"
          },
          "canAutoUpdate": {
            "type": "boolean",
            "description": "Is the object compatible with autoUpdate",
            "readOnly": true
          },
          "datetime": {
            "type": "string",
            "description": "Creation date of the document",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description name of the document"
          },
          "records": {
            "type": "integer",
            "description": "Number of receiver records in the document",
            "readOnly": true
          },
          "slotId": {
            "type": "integer",
            "description": "Slot number id",
            "readOnly": true
          }
        }
      },
      "sms.ReceiversAsynchronousCleanReport": {
        "type": "object",
        "description": "A structure giving operation price and asynchronous task ID",
        "properties": {
          "taskId": {
            "type": "integer"
          },
          "totalCreditsRemoved": {
            "type": "number"
          }
        }
      },
      "sms.RefererSenderEnum": {
        "type": "string",
        "description": "All tyoplogy of senders",
        "enum": [
          "custom",
          "domain",
          "line",
          "nic",
          "owner",
          "virtual"
        ]
      },
      "sms.Response": {
        "type": "object",
        "description": "A structure describing how to manage an sms Response",
        "properties": {
          "cgiUrl": {
            "type": "string",
            "description": "Default url callback used for a given response.",
            "nullable": true
          },
          "responseType": {
            "$ref": "#/components/schemas/sms.ResponseTypeEnum"
          },
          "text": {
            "type": "string",
            "description": "Automatic notification sent by text in case of customer reply.",
            "nullable": true
          },
          "trackingDefaultSmsSender": {
            "type": "string",
            "nullable": true
          },
          "trackingOptions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/sms.ResponseTrackingOptions"
            }
          }
        }
      },
      "sms.ResponseTrackingMediaEnum": {
        "type": "string",
        "description": "The tracking media response",
        "enum": [
          "email",
          "sms",
          "voice"
        ]
      },
      "sms.ResponseTrackingOptions": {
        "type": "object",
        "description": "The tracking media response",
        "properties": {
          "media": {
            "$ref": "#/components/schemas/sms.ResponseTrackingMediaEnum"
          },
          "sender": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      },
      "sms.ResponseTypeEnum": {
        "type": "string",
        "description": "Response type",
        "enum": [
          "cgi",
          "none",
          "text"
        ]
      },
      "sms.RestrictionCodeEnum": {
        "type": "string",
        "description": "Restriction type used by the operator to filter sms.",
        "enum": [
          "ALPHA",
          "BAD_DLR",
          "BLOCKED",
          "CODING",
          "DLR",
          "FLASHONLY",
          "MSISDN"
        ]
      },
      "sms.Sender": {
        "type": "object",
        "description": "SMS senders",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Message sent by the moderator",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Sender description"
          },
          "referer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.RefererSenderEnum"
              }
            ],
            "description": "Specify if the sender is custom or not",
            "readOnly": true
          },
          "sender": {
            "type": "string",
            "description": "The sms sender",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.StatusSenderEnum"
              }
            ],
            "description": "Sender status"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.TypeSenderEnum"
              }
            ],
            "description": "Specify the kind of sender",
            "nullable": true,
            "readOnly": true
          },
          "validationMedia": {
            "type": "string",
            "description": "Validation media identifier",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "sms.SenderAvailable": {
        "type": "object",
        "description": "A structure describing all information about senders available",
        "properties": {
          "referer": {
            "$ref": "#/components/schemas/sms.SenderRefererEnum"
          },
          "sender": {
            "type": "string"
          }
        }
      },
      "sms.SenderDocument": {
        "type": "object",
        "description": "SMS senders' document",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Creation datetime",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Document description",
            "nullable": true
          },
          "documentID": {
            "type": "string",
            "description": "Document ID",
            "format": "uuid",
            "readOnly": true
          },
          "getUrl": {
            "type": "string",
            "description": "URL to get document",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Document name"
          },
          "putUrl": {
            "type": "string",
            "description": "URL to upload document",
            "nullable": true,
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "description": "Document size (in bytes)",
            "readOnly": true
          }
        }
      },
      "sms.SenderRefererEnum": {
        "type": "string",
        "description": "The referer of the available sender",
        "enum": [
          "domain",
          "nichandle"
        ]
      },
      "sms.Settings": {
        "type": "object",
        "description": "SMPP settings",
        "properties": {
          "endpoints": {
            "type": "array",
            "description": "Addresses of the TLS and non-TLS endpoints",
            "items": {
              "$ref": "#/components/schemas/sms.SettingsEndpoints"
            },
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.SettingsStatusEnum"
              }
            ],
            "description": "Status of the SMPP account",
            "readOnly": true
          },
          "systemID": {
            "type": "string",
            "description": "Username used to connect to OVHcloud SMSC",
            "readOnly": true
          },
          "throughput": {
            "type": "integer",
            "description": "Number of messages allowed per seconds",
            "readOnly": true
          },
          "windowing": {
            "type": "integer",
            "description": "Number of messages treated simultaneously",
            "readOnly": true
          }
        }
      },
      "sms.SettingsEndpoints": {
        "type": "object",
        "description": "SMPP Settings Endpoints",
        "properties": {
          "secured": {
            "type": "string",
            "description": "address of the TLS endpoint: domain:port",
            "readOnly": true
          },
          "unsecured": {
            "type": "string",
            "description": "address of the non-TLS endpoint: domain:port",
            "readOnly": true
          }
        }
      },
      "sms.SettingsStatusEnum": {
        "type": "string",
        "description": "Smpp Settings Statuses",
        "enum": [
          "DELETED",
          "ERROR",
          "SUCCESS",
          "UNKNOWN",
          "UPDATING_IP",
          "WAITING_IP"
        ]
      },
      "sms.SmsSendingReport": {
        "type": "object",
        "description": "A structure describing all information about quota informations",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "invalidReceivers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tag": {
            "type": "string"
          },
          "totalCreditsRemoved": {
            "type": "number"
          },
          "validReceivers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "sms.StatusAccountEnum": {
        "type": "string",
        "description": "Account status",
        "enum": [
          "disable",
          "enable"
        ]
      },
      "sms.StatusSenderEnum": {
        "type": "string",
        "description": "All existing status for a given referer",
        "enum": [
          "disable",
          "enable",
          "refused",
          "waitingValidation"
        ]
      },
      "sms.SupportEnum": {
        "type": "string",
        "description": "The media support used to be contacted in case of alert",
        "enum": [
          "both",
          "mail",
          "sms"
        ]
      },
      "sms.Task": {
        "type": "object",
        "description": "Operation on a SMS service",
        "properties": {
          "function": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.TodoGeneralPublicFunctionsEnum"
              }
            ],
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.TaskStatusEnum"
              }
            ],
            "readOnly": true
          },
          "step": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.TodoGeneralPublicStepsEnum"
              }
            ],
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "sms.TemplateControl": {
        "type": "object",
        "description": "Sms template for moderation (Needed to send in US country)",
        "properties": {
          "activity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.TypeTemplateEnum"
              }
            ],
            "description": "Specify the kind of template"
          },
          "comment": {
            "type": "string",
            "description": "Message sent by the moderator",
            "readOnly": true
          },
          "datetime": {
            "type": "string",
            "description": "Template creation datetime",
            "format": "date-time",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Template description"
          },
          "message": {
            "type": "string",
            "description": "Message pattern to be moderated. Use \"#VALUE#\" format for dynamic text area."
          },
          "name": {
            "type": "string",
            "description": "Name of the template"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.StatusSenderEnum"
              }
            ],
            "description": "Template status"
          }
        }
      },
      "sms.Templates": {
        "type": "object",
        "description": "A structure describing all information about templates informations",
        "properties": {
          "customizedEmailMode": {
            "type": "boolean"
          },
          "customizedSmsMode": {
            "type": "boolean"
          },
          "emailBody": {
            "type": "string",
            "nullable": true
          },
          "emailFrom": {
            "type": "string",
            "nullable": true
          },
          "emailSubject": {
            "type": "string",
            "nullable": true
          },
          "smsBody": {
            "type": "string",
            "nullable": true
          },
          "time2chatAutomaticResponse": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "sms.TodoGeneralPublicFunctionsEnum": {
        "type": "string",
        "description": "The task function",
        "enum": [
          "cleanSmsReceivers"
        ]
      },
      "sms.TodoGeneralPublicStepsEnum": {
        "type": "string",
        "description": "The task step",
        "enum": [
          "checkOrder",
          "createHlrs",
          "finishing",
          "sendMailReport",
          "starting",
          "waitForHlrs"
        ]
      },
      "sms.TypeSenderEnum": {
        "type": "string",
        "description": "All existing types for a given sender",
        "enum": [
          "alpha",
          "numeric",
          "shortcode",
          "virtual"
        ]
      },
      "sms.TypeTemplateEnum": {
        "type": "string",
        "description": "All existing types for a given template",
        "enum": [
          "alerting",
          "authentification",
          "transactional"
        ]
      },
      "sms.User": {
        "type": "object",
        "description": "SMS users",
        "properties": {
          "alertThresholdInformations": {
            "$ref": "#/components/schemas/sms.AlertThreshold"
          },
          "callBack": {
            "type": "string",
            "description": "URL called when state of a sent SMS changes",
            "nullable": true
          },
          "ipRestrictions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "login": {
            "type": "string",
            "description": "The sms user login",
            "readOnly": true
          },
          "password": {
            "type": "string"
          },
          "quotaInformations": {
            "$ref": "#/components/schemas/sms.Quota"
          },
          "stopCallBack": {
            "type": "string",
            "description": "URL called when a STOP is received after a receiver replied stop to a SMS",
            "nullable": true
          }
        }
      },
      "sms.VirtualNumber": {
        "type": "object",
        "description": "Virtual numbers",
        "properties": {
          "countryCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.VirtualNumberIsoCountryCodeEnum"
              }
            ],
            "description": "The ISO formated country code of the number",
            "readOnly": true
          },
          "number": {
            "type": "string",
            "description": "The virtual number",
            "readOnly": true
          }
        }
      },
      "sms.VirtualNumberGenericService": {
        "type": "object",
        "description": "Virtual numbers",
        "properties": {
          "countryCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.VirtualNumberIsoCountryCodeEnum"
              }
            ],
            "description": "The ISO formated country code of the number",
            "readOnly": true
          },
          "number": {
            "type": "string",
            "description": "The virtual number",
            "readOnly": true
          }
        }
      },
      "sms.VirtualNumberGenericServiceWithIAM": {
        "type": "object",
        "description": "Virtual numbers",
        "properties": {
          "countryCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/sms.VirtualNumberIsoCountryCodeEnum"
              }
            ],
            "description": "The ISO formated country code of the number",
            "readOnly": true
          },
          "iam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/iam.ResourceMetadata"
              }
            ],
            "description": "IAM resource metadata",
            "nullable": true,
            "readOnly": true
          },
          "number": {
            "type": "string",
            "description": "The virtual number",
            "readOnly": true
          }
        }
      },
      "sms.VirtualNumberIsoCountryCodeEnum": {
        "type": "string",
        "description": "The ISO formated country code of the number",
        "enum": [
          "be",
          "ch",
          "de",
          "es",
          "fr",
          "uk"
        ]
      },
      "sms.VirtualNumberJob": {
        "type": "object",
        "description": "Sms job",
        "properties": {
          "creationDatetime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "credits": {
            "type": "number",
            "readOnly": true
          },
          "deliveryReceipt": {
            "type": "integer",
            "readOnly": true
          },
          "differedDelivery": {
            "type": "integer",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "messageLength": {
            "type": "integer",
            "readOnly": true
          },
          "numberOfSms": {
            "type": "integer",
            "readOnly": true
          },
          "ptt": {
            "type": "integer",
            "readOnly": true
          },
          "receiver": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "telephony.ContactsExportFormatsEnum": {
        "type": "string",
        "description": "Export file format",
        "enum": [
          "csv"
        ]
      },
      "telephony.PcsFile": {
        "type": "object",
        "description": "Telephony API related file hosted",
        "properties": {
          "filename": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.PcsFileStatusEnum"
              }
            ],
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "urlExpirationDatetime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "telephony.PcsFileStatusEnum": {
        "type": "string",
        "description": "File providing task status",
        "enum": [
          "doing",
          "done",
          "error",
          "todo"
        ]
      },
      "telephony.Task": {
        "type": "object",
        "description": "Operation on a telephony service",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action associated with the task",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "description": "Potential failure reason of the task",
            "nullable": true,
            "readOnly": true
          },
          "objectCreated": {
            "type": "string",
            "description": "Object potentially created at the end of the task",
            "nullable": true,
            "readOnly": true
          },
          "serviceType": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/telephony.TaskStatusEnum"
              }
            ],
            "description": "Status of the task",
            "readOnly": true
          },
          "taskId": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "telephony.TaskStatusEnum": {
        "type": "string",
        "description": "Task status",
        "enum": [
          "doing",
          "done",
          "error",
          "pause",
          "todo"
        ]
      },
      "time": {
        "type": "string",
        "description": "Time (e.g., 15:04:05)",
        "format": "time",
        "example": "15:04:05"
      }
    },
    "securitySchemes": {
      "oAuth2AuthCode": {
        "type": "oauth2",
        "description": "Oauth2",
        "x-client-id": "1bb9c7df371741c0",
        "x-client-secret": "a5b4de870aca620d10fbf63cd18d205b",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://www.ovh.com/auth/oauth2/authorize",
            "tokenUrl": "https://www.ovh.com/auth/oauth2/token",
            "scopes": {
              "account/all": "Manage your account",
              "all": "Manage your whole account and all your services",
              "services/all": "Manage your services lifecycle and billing"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/sms": {
      "get": {
        "summary": "List available services",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "iamTags",
            "description": "Filter resources on IAM tags",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/iam.resource.TagFilter"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsAccountWithIAM"
      }
    },
    "/sms/estimate": {
      "post": {
        "summary": "Get the encoding, length and number of SMS parts of a text message",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "The message to send"
                  },
                  "noStopClause": {
                    "type": "boolean",
                    "description": "Do not display STOP clause in the message, this requires that this is not an advertising message"
                  },
                  "senderType": {
                    "description": "Sender type that will be used to send the message",
                    "$ref": "#/components/schemas/sms.TypeSenderEnum"
                  }
                },
                "required": [
                  "message",
                  "noStopClause",
                  "senderType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.JobEstimate"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "account:apiovh:sms/estimate",
            "required": true
          }
        ]
      }
    },
    "/sms/ptts": {
      "get": {
        "summary": "Get informations about the given ptt code",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ptt",
            "description": "The premium transaction tracking code",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.PttDetails"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/sms/rates/destinations": {
      "get": {
        "summary": "Get the prices and credits to send a SMS towards given country",
        "parameters": [
          {
            "in": "query",
            "name": "billingCountry",
            "description": "Country where you buy credits",
            "schema": {
              "$ref": "#/components/schemas/sms.BillingCountryEnum"
            }
          },
          {
            "in": "query",
            "name": "country",
            "description": "Country where you send SMS",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/sms.CountryEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.DestinationRates"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/sms/rates/packs": {
      "get": {
        "summary": "Get the prices and credits of all the SMS packs with informations about the destination country",
        "parameters": [
          {
            "in": "query",
            "name": "billingCountry",
            "description": "Country where you buy credits",
            "schema": {
              "$ref": "#/components/schemas/sms.BillingCountryEnum"
            }
          },
          {
            "in": "query",
            "name": "country",
            "description": "Country where you send SMS",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/sms.CountryEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sms.PackDetails"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ]
      }
    },
    "/sms/virtualNumbers": {
      "get": {
        "summary": "Your virtual numbers",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "iamTags",
            "description": "Filter resources on IAM tags",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/iam.resource.TagFilter"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "smsVirtualNumbers:apiovh:get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsVirtualNumberGenericServiceWithIAM"
      }
    },
    "/sms/virtualNumbers/{number}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Your virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.VirtualNumberGenericServiceWithIAM"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "smsVirtualNumbers:apiovh:get",
            "required": true
          }
        ]
      }
    },
    "/sms/virtualNumbers/{number}/serviceInfos": {
      "get": {
        "summary": "Get service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Your virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "smsVirtualNumbers:apiovh:serviceInfos/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "Your virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/services.Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "smsVirtualNumbers:apiovh:serviceInfos/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.AccountWithIAM"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:put",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/batches": {
      "get": {
        "summary": "Get batches list",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sms.Batch"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:batches/get",
            "required": true
          }
        ],
        "x-response-identifier": "id",
        "x-expanded-response": "SmsBatch"
      },
      "post": {
        "summary": "Create a batch",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.BatchParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Batch"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:batches/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/batches/{id}": {
      "delete": {
        "summary": "Remove a batch",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:batches/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get a batch",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Batch"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:batches/get",
            "required": true
          }
        ],
        "x-response-identifier": "id"
      },
      "put": {
        "summary": "Update a batch",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.BatchUpdateParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Batch"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:batches/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/batches/{id}/cancel": {
      "post": {
        "summary": "Cancel a deferred batch (no SMS must have been sent)",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Batch"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:batches/cancel",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/batches/{id}/statistics": {
      "get": {
        "summary": "Batch's statistics",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.BatchStatistics"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:batches/statistics/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/blacklists": {
      "get": {
        "summary": "Numbers blacklisted associated to the sms account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "batchID",
            "description": "Filter the value of batchID property (=)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "smsOutgoingID",
            "description": "Filter the value of smsOutgoingID property (=)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:blacklists/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsBlacklist"
      }
    },
    "/sms/{serviceName}/blacklists/{number}": {
      "delete": {
        "summary": "Delete the blacklisted sms number given",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The sms number blacklisted",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:blacklists/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The sms number blacklisted",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Blacklist"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:blacklists/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/document": {
      "get": {
        "summary": "Get the /me/document id generated",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "batchID",
            "description": "Filter SMSs with their batch ID (outgoing SMSs only)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "creationDatetime.from",
            "description": "Filter the value of creationDatetime property (>=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "creationDatetime.to",
            "description": "Filter the value of creationDatetime property (<=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Select sms with a specific identifier group tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "wayType",
            "description": "specify outgoing or incoming sms",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/sms.DocumentWayTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:document/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/exceptions": {
      "get": {
        "summary": "Describe filter exceptions in sms sending from a specific receiver.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "receiver",
            "description": "The receiver number to check",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sms.Exception"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:exceptions/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/hlr": {
      "get": {
        "summary": "Home Location Register informations. Give informations about a given cellular phone.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:hlr/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsHlrLookupNumber"
      },
      "post": {
        "summary": "Add one or several sending hlr lookup request",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receivers": {
                    "type": "array",
                    "description": "The receivers",
                    "items": {
                      "type": "string"
                    }
                  },
                  "receiversDocumentUrl": {
                    "type": "string",
                    "description": "The receivers document url link in csv format"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.SmsSendingReport"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:hlr/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/hlr/{id}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "HLR id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.HlrLookupNumber"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:hlr/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/hlr/{id}/operator": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "HLR id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Hlr"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:hlr/operator/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/incoming": {
      "get": {
        "summary": "Sms received associated to the sms account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "creationDatetime.from",
            "description": "Filter the value of creationDatetime property (>=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "creationDatetime.to",
            "description": "Filter the value of creationDatetime property (<=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "sender",
            "description": "Filter the value of sender property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Filter the value of tag property (=)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:incoming/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsIncoming"
      }
    },
    "/sms/{serviceName}/incoming/{id}": {
      "delete": {
        "summary": "Delete the sms incoming history given",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:incoming/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Incoming"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:incoming/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/jobs": {
      "get": {
        "summary": "Sms in pending associated to the sms account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:jobs/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsJob"
      },
      "post": {
        "summary": "Add one or several sending jobs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "charset": {
                    "description": "The sms coding",
                    "$ref": "#/components/schemas/sms.CharsetEnum"
                  },
                  "class": {
                    "description": "Deprecated: The sms class",
                    "$ref": "#/components/schemas/sms.ClassEnum"
                  },
                  "coding": {
                    "description": "Deprecated: the coding is deduced from the message and its charset",
                    "$ref": "#/components/schemas/sms.CodingEnum"
                  },
                  "differedPeriod": {
                    "type": "integer",
                    "description": "The time -in minute(s)- to wait before sending the message"
                  },
                  "message": {
                    "type": "string",
                    "description": "The sms message"
                  },
                  "noStopClause": {
                    "type": "boolean",
                    "description": "Do not display STOP clause in the message, this requires that this is not an advertising message"
                  },
                  "priority": {
                    "description": "The priority of the message",
                    "$ref": "#/components/schemas/sms.PriorityEnum"
                  },
                  "receivers": {
                    "type": "array",
                    "description": "The receivers list",
                    "items": {
                      "type": "string"
                    }
                  },
                  "receiversDocumentUrl": {
                    "type": "string",
                    "description": "The receivers document url link in csv format"
                  },
                  "receiversSlotId": {
                    "type": "string",
                    "description": "The receivers document slot id"
                  },
                  "sender": {
                    "type": "string",
                    "description": "The sender"
                  },
                  "senderForResponse": {
                    "type": "boolean",
                    "description": "Set the flag to send a special sms which can be reply by the receiver (smsResponse)."
                  },
                  "tag": {
                    "type": "string",
                    "description": "The identifier group tag"
                  },
                  "validityPeriod": {
                    "type": "integer",
                    "description": "The maximum time -in minute(s)- before the message is dropped"
                  }
                },
                "required": [
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.SmsSendingReport"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:jobs/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/jobs/{id}": {
      "delete": {
        "summary": "Delete the sms job given (stop sending)",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:jobs/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Job"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:jobs/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/outgoing": {
      "get": {
        "summary": "Get SMS list",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "batchID",
            "description": "Filter on batch id property (=)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "creationDatetime.from",
            "description": "Filter on creationDatetime property (>=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "creationDatetime.to",
            "description": "Filter on creationDatetime property (<=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "deliveryReceipt",
            "description": "Filter on deliveryReceipt property (=)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "differedDelivery",
            "description": "Filter on differedDelivery property (=)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "messageID",
            "description": "Filter on message id property (=)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "ptt",
            "description": "Filter on ptt property (=)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "receiver",
            "description": "Filter on receiver property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sender",
            "description": "Filter on sender property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Filter on tag property (=)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:outgoing/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsOutgoing"
      }
    },
    "/sms/{serviceName}/outgoing/{id}": {
      "delete": {
        "summary": "Delete outgoing SMS from history",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:outgoing/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get SMS details",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Outgoing"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:outgoing/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/outgoing/{id}/hlr": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Hlr"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:outgoing/hlr/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/phonebooks": {
      "get": {
        "summary": "Return phonebooks associated to this account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsPhonebook"
      },
      "post": {
        "summary": "Add a phonebook. Return the bookKey.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the wanted phonebook"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/phonebooks/{bookKey}": {
      "delete": {
        "summary": "Delete a phonebook",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookKey",
            "description": "Identifier of the phonebook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookKey",
            "description": "Identifier of the phonebook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Phonebook"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookKey",
            "description": "Identifier of the phonebook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.Phonebook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/phonebooks/{bookKey}/export": {
      "get": {
        "summary": "Export the phonebook's contacts",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookKey",
            "description": "Identifier of the phonebook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "description": "Format of the file",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/telephony.ContactsExportFormatsEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/telephony.PcsFile"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/export/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/phonebooks/{bookKey}/import": {
      "post": {
        "summary": "Import a contacts file. Supported formats are Excel (.xls and .xlsx) and CSV",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookKey",
            "description": "Identifier of the phonebook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentId": {
                    "type": "string",
                    "description": "ID of the /me/document file you want to import"
                  }
                },
                "required": [
                  "documentId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/telephony.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/import",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/phonebooks/{bookKey}/phonebookContact": {
      "get": {
        "summary": "Phonebook contacts",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookKey",
            "description": "Identifier of the phonebook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/phonebookContact/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsPhonebookContact"
      },
      "post": {
        "summary": "Create a phonebook contact. Return identifier of the phonebook contact.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookKey",
            "description": "Identifier of the phonebook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group": {
                    "type": "string",
                    "description": "Group name of the phonebook"
                  },
                  "homeMobile": {
                    "description": "Home mobile phone number of the contact",
                    "$ref": "#/components/schemas/internationalPhoneNumber"
                  },
                  "homePhone": {
                    "description": "Home landline phone number of the contact",
                    "$ref": "#/components/schemas/internationalPhoneNumber"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the contact"
                  },
                  "surname": {
                    "type": "string",
                    "description": "Contact surname"
                  },
                  "workMobile": {
                    "description": "Mobile phone office number of the contact",
                    "$ref": "#/components/schemas/internationalPhoneNumber"
                  },
                  "workPhone": {
                    "description": "Landline phone office number of the contact",
                    "$ref": "#/components/schemas/internationalPhoneNumber"
                  }
                },
                "required": [
                  "group",
                  "name",
                  "surname"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/phonebookContact/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/phonebooks/{bookKey}/phonebookContact/{id}": {
      "delete": {
        "summary": "Delete a phonebook contact",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookKey",
            "description": "Identifier of the phonebook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Contact identifier",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/phonebookContact/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookKey",
            "description": "Identifier of the phonebook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Contact identifier",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.PhonebookContact"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/phonebookContact/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bookKey",
            "description": "Identifier of the phonebook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Contact identifier",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.PhonebookContact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:phonebooks/phonebookContact/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/receivers": {
      "get": {
        "summary": "Receivers preloaded from text or csv document file",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:receivers/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsReceiver"
      },
      "post": {
        "summary": "Add a new document of csv receivers",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "autoUpdate": {
                    "type": "boolean",
                    "description": "Download file from URL before sending to contacts (works only with csvUrl and not document ID)"
                  },
                  "csvUrl": {
                    "type": "string",
                    "description": "URL of the file you want to import"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description name of the document"
                  },
                  "documentId": {
                    "type": "string",
                    "description": "ID of the /me/document file you want to import"
                  },
                  "slotId": {
                    "type": "integer",
                    "description": "Slot number id used to handle the document"
                  }
                },
                "required": [
                  "autoUpdate",
                  "description",
                  "slotId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Receiver"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:receivers/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/receivers/{slotId}": {
      "delete": {
        "summary": "Delete the document from the slot",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slotId",
            "description": "Slot number id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:receivers/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slotId",
            "description": "Slot number id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Receiver"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:receivers/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slotId",
            "description": "Slot number id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.Receiver"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:receivers/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/receivers/{slotId}/clean": {
      "post": {
        "summary": "Clean the invalid and inactive receivers in the document by requesting HLR on each receiver",
        "description": "Clean the invalid and inactive receivers in the document by requesting HLR on each receiver. A report is sent by e-mail at the end of the operation.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slotId",
            "description": "Slot number id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "freemium": {
                    "type": "boolean",
                    "description": "Limit checks to syntaxical validation"
                  },
                  "priceOnly": {
                    "type": "boolean",
                    "description": "Only get action's price in credits without executing it"
                  }
                },
                "required": [
                  "freemium",
                  "priceOnly"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.ReceiversAsynchronousCleanReport"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:receivers/clean",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/receivers/{slotId}/csv": {
      "get": {
        "summary": "Get the document data container",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slotId",
            "description": "Slot number id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:receivers/csv/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/seeOffers": {
      "get": {
        "summary": "Describe SMS offers available.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "countryCurrencyPrice",
            "description": "Filter to have the currency country prices",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/reference.CountryEnum"
            }
          },
          {
            "in": "query",
            "name": "countryDestination",
            "description": "Filter to have the country destination",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/sms.CountryEnum"
            }
          },
          {
            "in": "query",
            "name": "quantity",
            "description": "Sms pack offer quantity",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/sms.PackQuantityEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sms.PackOffer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:seeOffers/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/senders": {
      "get": {
        "summary": "Senders allowed associated to the sms account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:senders/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsSender"
      },
      "post": {
        "summary": "Create the sms sender given",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Sender description"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Message seen by the moderator"
                  },
                  "sender": {
                    "type": "string",
                    "description": "The sender (alpha or phone number)"
                  }
                },
                "required": [
                  "sender"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:senders/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/senders/{sender}": {
      "delete": {
        "summary": "Delete the sms sender given",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sender",
            "description": "The sms sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:senders/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sender",
            "description": "The sms sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Sender"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:senders/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sender",
            "description": "The sms sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.Sender"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:senders/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/senders/{sender}/documents": {
      "get": {
        "summary": "Documents linked to SMS sender for validation purpose",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sender",
            "description": "The sms sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:senders/documents/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsSenderDocument"
      },
      "post": {
        "summary": "Create a new empty document",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sender",
            "description": "The sms sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Document description"
                  },
                  "name": {
                    "type": "string",
                    "description": "Document name"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.SenderDocument"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:senders/documents/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/senders/{sender}/documents/{documentID}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "documentID",
            "description": "Document ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "sender",
            "description": "The sms sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.SenderDocument"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:senders/documents/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "documentID",
            "description": "Document ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "sender",
            "description": "The sms sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.SenderDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:senders/documents/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/senders/{sender}/validate": {
      "post": {
        "summary": "Validate a given sender with an activation code.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sender",
            "description": "The sms sender",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The validation code"
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:senders/validate",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/sendersAvailableForValidation": {
      "get": {
        "summary": "The senders that are attached to your personal informations or OVH services and that can be automatically validated",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "referer",
            "description": "Information type",
            "schema": {
              "$ref": "#/components/schemas/sms.SenderRefererEnum"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sms.SenderAvailable"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:sendersAvailableForValidation/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/serviceInfos": {
      "get": {
        "summary": "Get service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/services.Service"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:serviceInfos/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Update service information",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/services.Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:serviceInfos/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/smpp/allowedIPs": {
      "get": {
        "summary": "Get SMPP allowed IPs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ip"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:smpp/allowedIPs/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Add or remove allowed IPs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.AllowedIPs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ip"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:smpp/allowedIPs/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/smpp/password": {
      "post": {
        "summary": "Renew SMPP password",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:smpp/password/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/smpp/settings": {
      "get": {
        "summary": "Get SMPP settings",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Settings"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:smpp/settings/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/task": {
      "get": {
        "summary": "Operations on a SMS service",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter the value of status property (=)",
            "schema": {
              "$ref": "#/components/schemas/telephony.TaskStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:task/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsTask"
      }
    },
    "/sms/{serviceName}/task/{taskId}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Task"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:task/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/templatesControl": {
      "get": {
        "summary": "Template pattern filled up for moderation (Needed to send in US country)",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:templatesControl/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsTemplateControl"
      },
      "post": {
        "summary": "Create the sms template control given",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activity": {
                    "description": "Specify the kind of template",
                    "$ref": "#/components/schemas/sms.TypeTemplateEnum"
                  },
                  "description": {
                    "type": "string",
                    "description": "Template description"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message pattern to be moderated. Use \"#VALUE#\" format for dynamic text area."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the template"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Message seen by the moderator"
                  }
                },
                "required": [
                  "activity",
                  "message",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:templatesControl/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/templatesControl/{name}": {
      "delete": {
        "summary": "Delete the sms template control",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of the template",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:templatesControl/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of the template",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.TemplateControl"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:templatesControl/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of the template",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.TemplateControl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:templatesControl/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/templatesControl/{name}/relaunchValidation": {
      "post": {
        "summary": "Attempt a new validation after moderation refusal",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of the template",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Template description"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message pattern to be moderated. Use \"#VALUE#\" format for dynamic text area"
                  }
                },
                "required": [
                  "description",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:templatesControl/relaunchValidation",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/transferCredits": {
      "post": {
        "summary": "Credit transfer between two sms accounts.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credits": {
                    "type": "number",
                    "description": "Amount of credits to transfer."
                  },
                  "smsAccountTarget": {
                    "type": "string",
                    "description": "Sms account destination."
                  }
                },
                "required": [
                  "credits",
                  "smsAccountTarget"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:transferCredits",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users": {
      "get": {
        "summary": "Users associated to the sms account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsUser"
      },
      "post": {
        "summary": "Create a new user for an sms account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string",
                    "description": "The sms login"
                  },
                  "password": {
                    "type": "string",
                    "description": "The sms password"
                  }
                },
                "required": [
                  "login",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}": {
      "delete": {
        "summary": "Delete the sms user given",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.User"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}/document": {
      "get": {
        "summary": "Get the /me/document id generated",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "creationDatetime.from",
            "description": "Filter the value of creationDatetime property (>=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "creationDatetime.to",
            "description": "Filter the value of creationDatetime property (<=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Select sms with a specific identifier group tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "wayType",
            "description": "specify outgoing or incoming sms",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/sms.DocumentWayTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/document/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}/incoming": {
      "get": {
        "summary": "Sms received associated to the sms user",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sender",
            "description": "Filter the value of sender property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Filter the value of tag property (=)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/incoming/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsIncoming"
      }
    },
    "/sms/{serviceName}/users/{login}/incoming/{id}": {
      "delete": {
        "summary": "Delete the sms incoming history given",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/incoming/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Incoming"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/incoming/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}/jobs": {
      "get": {
        "summary": "Sms in pending associated to the sms user",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/jobs/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsJob"
      },
      "post": {
        "summary": "Add one or several sending jobs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "charset": {
                    "description": "The sms coding",
                    "$ref": "#/components/schemas/sms.CharsetEnum"
                  },
                  "class": {
                    "description": "Deprecated: The sms class",
                    "$ref": "#/components/schemas/sms.ClassEnum"
                  },
                  "coding": {
                    "description": "Deprecated: the coding is deduced from the message and its charset",
                    "$ref": "#/components/schemas/sms.CodingEnum"
                  },
                  "differedPeriod": {
                    "type": "integer",
                    "description": "The time -in minute(s)- to wait before sending the message"
                  },
                  "message": {
                    "type": "string",
                    "description": "The sms message"
                  },
                  "noStopClause": {
                    "type": "boolean",
                    "description": "Do not display STOP clause in the message, this requires that this is not an advertising message"
                  },
                  "priority": {
                    "description": "The priority of the message",
                    "$ref": "#/components/schemas/sms.PriorityEnum"
                  },
                  "receivers": {
                    "type": "array",
                    "description": "The receivers list",
                    "items": {
                      "type": "string"
                    }
                  },
                  "receiversDocumentUrl": {
                    "type": "string",
                    "description": "The receivers document url link in csv format"
                  },
                  "receiversSlotId": {
                    "type": "string",
                    "description": "The receivers document slot id"
                  },
                  "sender": {
                    "type": "string",
                    "description": "The sender"
                  },
                  "senderForResponse": {
                    "type": "boolean",
                    "description": "Set the flag to send a special sms which can be reply by the receiver (smsResponse)."
                  },
                  "tag": {
                    "type": "string",
                    "description": "The identifier group tag"
                  },
                  "validityPeriod": {
                    "type": "integer",
                    "description": "The maximum time -in minute(s)- before the message is dropped"
                  }
                },
                "required": [
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.SmsSendingReport"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/jobs/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}/jobs/{id}": {
      "delete": {
        "summary": "Delete the sms job given (stop sending)",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/jobs/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Job"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/jobs/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}/outgoing": {
      "get": {
        "summary": "Sms sent associated to the sms user",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "deliveryReceipt",
            "description": "Filter the value of deliveryReceipt property (=)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "differedDelivery",
            "description": "Filter the value of differedDelivery property (=)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ptt",
            "description": "Filter the value of ptt property (=)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "receiver",
            "description": "Filter the value of receiver property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sender",
            "description": "Filter the value of sender property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Filter the value of tag property (=)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/outgoing/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsOutgoing"
      }
    },
    "/sms/{serviceName}/users/{login}/outgoing/{id}": {
      "delete": {
        "summary": "Delete the sms outgoing history given",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/outgoing/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Outgoing"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/outgoing/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}/outgoing/{id}/hlr": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Hlr"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/outgoing/hlr/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}/receivers": {
      "get": {
        "summary": "Receivers preloaded from text or csv document file",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/receivers/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsReceiver"
      },
      "post": {
        "summary": "Add a new document of csv receivers",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "autoUpdate": {
                    "type": "boolean",
                    "description": "Download file from URL before sending to contacts (works only with csvUrl and not document ID)"
                  },
                  "csvUrl": {
                    "type": "string",
                    "description": "URL of the file you want to import"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description name of the document"
                  },
                  "documentId": {
                    "type": "string",
                    "description": "ID of the /me/document file you want to import"
                  },
                  "slotId": {
                    "type": "integer",
                    "description": "Slot number id used to handle the document"
                  }
                },
                "required": [
                  "autoUpdate",
                  "description",
                  "slotId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Receiver"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/receivers/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}/receivers/{slotId}": {
      "delete": {
        "summary": "Delete the document from the slot",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slotId",
            "description": "Slot number id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/receivers/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slotId",
            "description": "Slot number id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Receiver"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/receivers/get",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "Alter this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slotId",
            "description": "Slot number id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sms.Receiver"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/receivers/edit",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}/receivers/{slotId}/clean": {
      "post": {
        "summary": "Clean the invalid and inactive receivers in the document by requesting HLR on each receiver",
        "description": "Clean the invalid and inactive receivers in the document by requesting HLR on each receiver. A report is sent by e-mail at the end of the operation.",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slotId",
            "description": "Slot number id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "freemium": {
                    "type": "boolean",
                    "description": "Limit checks to syntaxical validation"
                  },
                  "priceOnly": {
                    "type": "boolean",
                    "description": "Only get action's price in credits without executing it"
                  }
                },
                "required": [
                  "freemium",
                  "priceOnly"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.ReceiversAsynchronousCleanReport"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/receivers/clean",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/users/{login}/receivers/{slotId}/csv": {
      "get": {
        "summary": "Get the document data container",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "description": "The sms user login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "slotId",
            "description": "Slot number id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:users/receivers/csv/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/virtualNumbers": {
      "get": {
        "summary": "Virtual numbers associated to the sms account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsVirtualNumber"
      }
    },
    "/sms/{serviceName}/virtualNumbers/{number}": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.VirtualNumber"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/virtualNumbers/{number}/chatAccess": {
      "delete": {
        "summary": "Delete the given web access",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/chatAccess/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.ChatAccess"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/chatAccess/get",
            "required": true
          }
        ]
      },
      "post": {
        "summary": "Create a new web access for this ressource",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.ChatAccess"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/chatAccess/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/virtualNumbers/{number}/incoming": {
      "get": {
        "summary": "Sms received associated to the sms account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "creationDatetime.from",
            "description": "Filter the value of creationDatetime property (>=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "creationDatetime.to",
            "description": "Filter the value of creationDatetime property (<=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sender",
            "description": "Filter the value of sender property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Filter the value of tag property (=)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/incoming/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsIncoming"
      }
    },
    "/sms/{serviceName}/virtualNumbers/{number}/incoming/{id}": {
      "delete": {
        "summary": "Delete the sms incoming history given",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/incoming/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Incoming"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/incoming/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/virtualNumbers/{number}/jobs": {
      "get": {
        "summary": "Sms in pending associated to the sms account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/jobs/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsVirtualNumberJob"
      },
      "post": {
        "summary": "Add one or several sending jobs",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "charset": {
                    "description": "The sms coding",
                    "$ref": "#/components/schemas/sms.CharsetEnum"
                  },
                  "class": {
                    "description": "Deprecated: The sms class",
                    "$ref": "#/components/schemas/sms.ClassEnum"
                  },
                  "coding": {
                    "description": "Deprecated: the coding is deduced from the message and its charset",
                    "$ref": "#/components/schemas/sms.CodingEnum"
                  },
                  "differedPeriod": {
                    "type": "integer",
                    "description": "The time -in minute(s)- to wait before sending the message"
                  },
                  "message": {
                    "type": "string",
                    "description": "The sms message"
                  },
                  "priority": {
                    "description": "The priority of the message",
                    "$ref": "#/components/schemas/sms.PriorityEnum"
                  },
                  "receivers": {
                    "type": "array",
                    "description": "The receivers list",
                    "items": {
                      "type": "string"
                    }
                  },
                  "receiversDocumentUrl": {
                    "type": "string",
                    "description": "The receivers document url link in csv format"
                  },
                  "receiversSlotId": {
                    "type": "string",
                    "description": "The receivers document slot id"
                  },
                  "tag": {
                    "type": "string",
                    "description": "The identifier group tag"
                  },
                  "validityPeriod": {
                    "type": "integer",
                    "description": "The maximum time -in minute(s)- before the message is dropped"
                  }
                },
                "required": [
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.SmsSendingReport"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/jobs/create",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/virtualNumbers/{number}/jobs/{id}": {
      "delete": {
        "summary": "Delete the sms job given (stop sending)",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/jobs/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.VirtualNumberJob"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/jobs/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/virtualNumbers/{number}/outgoing": {
      "get": {
        "summary": "Sms sent associated to the sms account",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "creationDatetime.from",
            "description": "Filter the value of creationDatetime property (>=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "creationDatetime.to",
            "description": "Filter the value of creationDatetime property (<=)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "deliveryReceipt",
            "description": "Filter the value of deliveryReceipt property (=)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "differedDelivery",
            "description": "Filter the value of differedDelivery property (=)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ptt",
            "description": "Filter the value of ptt property (=)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "receiver",
            "description": "Filter the value of receiver property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sender",
            "description": "Filter the value of sender property (=)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Filter the value of tag property (=)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/outgoing/get",
            "required": true
          }
        ],
        "x-expanded-response": "SmsOutgoing"
      }
    },
    "/sms/{serviceName}/virtualNumbers/{number}/outgoing/{id}": {
      "delete": {
        "summary": "Delete the sms outgoing history given",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/outgoing/delete",
            "required": true
          }
        ]
      },
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Outgoing"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/outgoing/get",
            "required": true
          }
        ]
      }
    },
    "/sms/{serviceName}/virtualNumbers/{number}/outgoing/{id}/hlr": {
      "get": {
        "summary": "Get this object properties",
        "security": [
          {
            "oAuth2AuthCode": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the object",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "number",
            "description": "The virtual number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "serviceName",
            "description": "The internal name of your SMS offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sms.Hlr"
                }
              }
            }
          }
        },
        "x-badges": [
          {
            "color": "green",
            "label": "Stable production version"
          }
        ],
        "x-iam-actions": [
          {
            "name": "sms:apiovh:virtualNumbers/outgoing/hlr/get",
            "required": true
          }
        ]
      }
    }
  }
}
